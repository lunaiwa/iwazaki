{
  
    
        "post0": {
            "title": "HACKS 3-7",
            "content": ". Essential Knowledge Questions . Explain in your own words what each logical operator does | a. NOT : displays opposite of data inputted b. AND : determine if two conditions are met c. OR : determine if one of the conditions is met . . Logical Operators . Code your own scenario that makes sense for each logical operator . AND . water = 10 if water &gt; 5 and water &lt;= 20: print(&quot;drink more water&quot;) . OR . water = 1 ice = 21 if water &lt;= 0 or ice &gt; 20: print(&quot;too cold&quot;) . NOT . clouds = False result = not(clouds) print(result) . . Grader . Create an array with integers, each integer representing one score from a student&#39;s taken tests. If the average of the student&#39;s test scores are at least 75 percent, then display that the student is elligible for credit, and if not, display that the student must retake the tests over break. . grades = [&#39;30&#39;, &#39;80&#39;, &#39;90&#39;, &#39;89&#39;, &#39;75&#39;, &#39;60&#39;] average = sum(grades)/len(grades) # printing extra credit if average &gt; 75: print(&quot;extra credit!&quot;) # if less then 75 if average &lt; 75: print (&quot;retake :(&quot;) . . Algorithm Calculator . Create an algorithm that calculates the sum of two numbers, then determines whether the sum is greater than or less than 100. (number oriented and creative) . # user input of data numbers x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) # adding the numbers sum = int(x) + int(y) # printing the sum print(&quot;the sum is:&quot;, sum) . x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) sum = int(x) + int(y) # if it is greater than if sum &gt; 100: print(&quot;the number is less than 100!&quot;) # if it is less than else: num = list(range(sum,101,1)) print(&quot;the number is more than 100&quot;) . . Flowcharts in Code . Create 3 different flow charts representing nested statements and transfer them into code. . . 1 . weather = &quot;sunny&quot; temp = &quot;80&quot; if weather == &quot;sunny&quot;: if temp ==&quot;80&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;80&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;wrong weather and right size&quot;) . 2 . weather = &quot;cloudy&quot; temp = &quot;40&quot; if weather == &quot;cloudy&quot;: if temp ==&quot;40&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;40&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;wrong weather and right size&quot;) . 3 . if temp &gt; 80: if weather == &quot;hot&quot;: print(&quot;wear light clothes&quot;) elif store == &quot;cold&quot;: print(&quot;wear a jacket&quot;) else: print(&quot;no weather report today&quot;) . . Four Statement Code . Create a piece of code that displays four statements instead of three. Try to do more if you can. . if temp &gt; 100: if weather == &quot;cold&quot;: print(&quot;it will be cold today&quot;) elif clouds == &quot;rainy&quot;: print(&quot;bring an umbrella&quot;) elif sunny == &quot;it will be a nice day&quot;: print(&quot;go outside&quot;) # if temp is &lt; than 100 else: print(&quot;it&#39;s too hot&quot;) . . Class Recommendations . Make piece of code that gives three different recommendations for possible classes to take at a school based on two different condtions. These conditions could be if the student likes STEM or not. . STEM = True ART = True # if STEM was chosen if STEM: print(&quot;APCalculus, APChem, APBiology&quot;) # if ART was chosen elif ART: print(&quot;APArtandDesign, APArtHistory, APMusicTheory &quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2023/01/15/Unit5-7HACKS.html",
            "relUrl": "/unit%203/2023/01/15/Unit5-7HACKS.html",
            "date": " • Jan 15, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "APCSP Grading Requirements 2",
            "content": "Submission Scoring . Submission 1 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . The purpose of the project was not well described and clear! Most of all of the explinations made were not clear or consice enough to meet the college board standards. Their explinations most of the time don&#39;t connect to their program. But, the testing was clear and showed understanding of the college board standards. This student needed thourogh explinations and more connection to their code to recive their full points. . Submission 2 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . This student was very clear with their work! They had alternative ideas and showed they had full understanding with the college board requirements. They fulfilled all the requirments and college board also gave them full points. If I were to do the APCSP tests I would use this as a reference of what my work would look like since it is so well done!! . Submission 3 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . Compared to student 2 I think student 3 had also done a well job. Although they had recived 5/6 points I think this student deserves full points. The student had clearly answered the prompt and described their code well. As Mr.Mort said lots of people struggle with function and purpose and that is where this student had fallen short. They only described the function which is a fatal flaw!! . Function vs. Purpose:Function: the kind of action or activity proper to a person, thing. Purpose: the reason for which something exists or is done, made, used, etc. . Submission 4 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . This student had missed some important components in the CSP project. They were missing the managing complexity and how a list had contributed to their program! They did not earn full points for a row since they did not hit the crieteria for those points. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/15/CSPGrading2.html",
            "relUrl": "/apcsp%20requirements/2023/01/15/CSPGrading2.html",
            "date": " • Jan 15, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Pbl Model",
            "content": "{ “cells”: [ { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Model and Object-Oriented Programming n”, “&gt; Object Oriented Programming is a part of learning Python. The objective of this blog is to introduce OOP with the intention of PBL task to create a database. The foundations for a database is defining a Class and understanding instance data and methods. A database is often a focus of backend coding as it will store persistent data, that can be recalled after the immediate session is closed. n”, “ n”, “- title: Model and Object-Oriented Programming n”, “- toc: true n”, “- categories: [] n”, “- image: /images/python.png n”, “- type: pbl n”, “- week: 18” ] }, { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “## Class and Object Terms n”, “&gt; The foundations of Object-Oriented Programming is defining a Class n”, “* In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. n”, “* A Class has … n”, “ * a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self n”, “ * a collection of Functions/Procedures. These are called Methods** when they exist inside a Class definition. n”, “ An Object is created from the Class/Template. Characteristics of objects … n”, “ * an Object is an **Instance of the Class/Template n”, “ * there can be many Objects created from the same Class n”, “ * each Object contains its own Instance Data n”, “ * the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class n”, “ * all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) n”, “* A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions … n”, “ * @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) n”, “ * @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) n”, “ * observe all instance data (self.name, self._email …) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email …)” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “## Class and Object Code” ] }, { “cell_type”: “code”, “execution_count”: 3, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Test 1, find user 3 n”, “name: &quot;Thomas Edison&quot;, id: &quot;toby&quot;, psw: &quot;sha256$nTQ…&quot; n”, “name: &quot;Nicholas Tesla&quot;, id: &quot;nick&quot;, psw: &quot;sha256$JPM…&quot; n”, “* name: &quot;Alexander Graham Bell&quot;, id: &quot;lex&quot;, psw: &quot;sha256$iHV…&quot; n”, “name: &quot;Eli Whitney&quot;, id: &quot;eli&quot;, psw: &quot;sha256$US0…&quot; n”, “name: &quot;Hedy Lemarr&quot;, id: &quot;hedy&quot;, psw: &quot;sha256$2cC…&quot; n”, “Test 2, change user 3 n”, “name: &quot;Thomas Edison&quot;, id: &quot;toby&quot;, psw: &quot;sha256$nTQ…&quot; n”, “name: &quot;Nicholas Tesla&quot;, id: &quot;nick&quot;, psw: &quot;sha256$JPM…&quot; n”, “* name: &quot;John Mortensen&quot;, id: &quot;jm1021&quot;, psw: &quot;sha256$2I7…&quot; n”, “name: &quot;Eli Whitney&quot;, id: &quot;eli&quot;, psw: &quot;sha256$US0…&quot; n”, “name: &quot;Hedy Lemarr&quot;, id: &quot;hedy&quot;, psw: &quot;sha256$2cC…&quot; n”, “Test 3, make a dictionary n”, “[{&quot;name&quot;: &quot;Thomas Edison&quot;, &quot;_uid&quot;: &quot;toby&quot;, &quot;_password&quot;: &quot;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&quot;}, {&quot;_name&quot;: &quot;Nicholas Tesla&quot;, &quot;_uid&quot;: &quot;nick&quot;, &quot;_password&quot;: &quot;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&quot;}, {&quot;_name&quot;: &quot;John Mortensen&quot;, &quot;_uid&quot;: &quot;jm1021&quot;, &quot;_password&quot;: &quot;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&quot;}, {&quot;_name&quot;: &quot;Eli Whitney&quot;, &quot;_uid&quot;: &quot;eli&quot;, &quot;_password&quot;: &quot;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&quot;}, {&quot;_name&quot;: &quot;Hedy Lemarr&quot;, &quot;_uid&quot;: &quot;hedy&quot;, &quot;_password&quot;: &quot;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&quot;}] n”, “Test 4, make a dictionary n”, “[{&quot;_name&quot;: &quot;Thomas Edison&quot;, &quot;_uid&quot;: &quot;toby&quot;, &quot;_password&quot;: &quot;sha256$nTQxZ9alViZd3WOn$34c90a641520c96e3d91ac148340b8b07d3c0958249dfcfe4a3eb05e2621efef&quot;}, {&quot;_name&quot;: &quot;Nicholas Tesla&quot;, &quot;_uid&quot;: &quot;nick&quot;, &quot;_password&quot;: &quot;sha256$JPMovUtCRid1pCTE$089368f59621e8878ea730e5328bd9fc442f1d63f40d99f52502c059f9921281&quot;}, {&quot;_name&quot;: &quot;John Mortensen&quot;, &quot;_uid&quot;: &quot;jm1021&quot;, &quot;_password&quot;: &quot;sha256$2I7yhf1jQOPNu2YE$473f9f24b42cbbd52d6fd4effe03b73ba41ff31ea5532940480aadef56b3ce2d&quot;}, {&quot;_name&quot;: &quot;Eli Whitney&quot;, &quot;_uid&quot;: &quot;eli&quot;, &quot;_password&quot;: &quot;sha256$US0fsfAaoQix8ido$5b6bac49c74a9fe08b18147a8d0f5c41d7805c42238a9d29dc2e8dbafff8324f&quot;}, {&quot;_name&quot;: &quot;Hedy Lemarr&quot;, &quot;_uid&quot;: &quot;hedy&quot;, &quot;_password&quot;: &quot;sha256$2cC6Hp5Z4WcmxpBK$df9ed2dbe43edee11d7dc5101057274b2c47be5db95d6610ab7e4fba2dbf6d17&quot;}] n” ] } ], “source”: [ “# n”, “# Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) n”, “# A gateway in necessary as a web server cannot communicate directly with Python. n”, “# In this case, imports are focused on generating hash code to protect passwords. n”, “from werkzeug.security import generate_password_hash, check_password_hash n”, “import json n”, “ n”, “# Define a User Class/Template n”, “# – A User represents the data we want to manage n”, “class User: n”, “ # constructor of a User object, initializes the instance variables within object (self) n”, “ def init(self, name, uid, password): n”, “ self._name = name # variables with self prefix become part of the object, n”, “ self._uid = uid n”, “ self.set_password(password) n”, “ n”, “ # a name getter method, extracts name from object n”, “ @property n”, “ def name(self): n”, “ return self._name n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @name.setter n”, “ def name(self, name): n”, “ self._name = name n”, “ n”, “ # a getter method, extracts email from object n”, “ @property n”, “ def uid(self): n”, “ return self._uid n”, “ n”, “ # a setter function, allows name to be updated after initial object creation n”, “ @uid.setter n”, “ def uid(self, uid): n”, “ self._uid = uid n”, “ n”, “ # check if uid parameter matches user id in object, return boolean n”, “ def is_uid(self, uid): n”, “ return self._uid == uid n”, “ n”, “ @property n”, “ def password(self): n”, “ return self._password[0:10] + &quot;…&quot; # because of security only show 1st characters n”, “ n”, “ # update password, this is conventional setter n”, “ def set_password(self, password): n”, “ &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; n”, “ self._password = generate_password_hash(password, method=’sha256’) n”, “ n”, “ # check password parameter versus stored/encrypted password n”, “ def is_password(self, password): n”, “ &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; n”, “ result = check_password_hash(self._password, password) n”, “ return result n”, “ n”, “ # output content using str(object) in human readable form, uses getter n”, “ def str(self): n”, “ return f’name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;‘ n”, “ n”, “ # output command to recreate the object, uses attribute directly n”, “ def repr(self): n”, “ return f’Person(name={self._name}, uid={self._uid}, password={self._password})’ n”, “ n”, “ n”, “# tester method to print users n”, “def tester(users, uid, psw): n”, “ result = None n”, “ for user in users: n”, “ # test for match in database n”, “ if user.uid == uid and user.is_password(psw): # check for match n”, “ print(&quot;* &quot;, end=&quot;&quot;) n”, “ result = user n”, “ # print using str method n”, “ print(str(user)) n”, “ return result n”, “ n”, “ n”, “# place tester code inside of special if! This allows include without tester running n”, “if name == &quot;main&quot;: n”, “ n”, “ # define user objects n”, “ u1 = User(name=’Thomas Edison’, uid=’toby’, password=’123toby’) n”, “ u2 = User(name=’Nicholas Tesla’, uid=’nick’, password=’123nick’) n”, “ u3 = User(name=’Alexander Graham Bell’, uid=’lex’, password=’123lex’) n”, “ u4 = User(name=’Eli Whitney’, uid=’eli’, password=’123eli’) n”, “ u5 = User(name=’Hedy Lemarr’, uid=’hedy’, password=’123hedy’) n”, “ n”, “ # put user objects in list for convenience n”, “ users = [u1, u2, u3, u4, u5] n”, “ n”, “ # Find user n”, “ print(&quot;Test 1, find user 3&quot;) n”, “ u = tester(users, u3.uid, &quot;123lex&quot;) n”, “ n”, “ n”, “ # Change user n”, “ print(&quot;Test 2, change user 3&quot;) n”, “ u.name = &quot;John Mortensen&quot; n”, “ u.uid = &quot;jm1021&quot; n”, “ u.set_password(&quot;123qwerty&quot;) n”, “ u = tester(users, u.uid, &quot;123qwerty&quot;) n”, “ n”, “ n”, “ # Make dictionary n”, “ ‘’’ n”, “ The dict in Python represents a dictionary or any mapping object that is used to store the attributes of the object. n”, “ Every object in Python has an attribute that is denoted by dict. n”, “ Use the json.dumps() method to convert the list of Users to a JSON string. n”, “ ‘’‘ n”, “ print(&quot;Test 3, make a dictionary&quot;) n”, “ json_string = json.dumps([user.dict for user in users]) n”, “ print(json_string) n”, “ n”, “ print(&quot;Test 4, make a dictionary&quot;) n”, “ json_string = json.dumps([vars(user) for user in users]) n”, “ print(json_string)” ] }, { “attachments”: {}, “cell_type”: “markdown”, “metadata”: {}, “source”: [ “## Hacks n”, “&gt; Add new attributes/variables to the Class. Make class specific to your CPT work. n”, “- Add classOf attribute to define year of graduation n”, “ - Add setter and getter for classOf n”, “- Add dob attribute to define date of birth n”, “ - This will require investigation into Python datetime objects as shown in example code below n”, “ - Add setter and getter for dob n”, “- Add instance variable for age, make sure if dob changes age changes n”, “ - Add getter for age, but don’t add/allow setter for age n”, “- Update and format tester function to work with changes n”, “ n”, “&gt; Start a class design for each of your own Full Stack CPT sections of your project n”, “- Use new code cell in this notebook n”, “- Define _init and self attributes n”, “- Define setters and getters n”, “- Make a tester” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “## Start Code for Hacks” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “from datetime import date n”, “ n”, “def calculate_age(born): n”, “ today = date.today() n”, “ return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) n”, “ n”, “dob = date(2004, 12, 31) n”, “age = calculate_age(dob) n”, “print(age)” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.8.9 (default, Apr 13 2022, 08:48:06) n[Clang 13.1.6 (clang-1316.0.21.2.5)]” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/01/10/PBL-model.ipynb",
            "relUrl": "/2023/01/10/PBL-model.ipynb",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "APCSP Grading Requirements",
            "content": ". Collegeboard Scoring Requirements . Here is the link to the requirements needed for APCSP . -- . Collegeboard Grading Table . Submission # 1 . Reflection: . I feel that college board had graded this student harshly, they had a great overall assignment and most of the time I was surprised when I saw the score since I feel that the student had done well in most parts. | The purpose and function was not well done though, they only described the function and not the purpose | purpose=why this program exists to be done | function=the action of the program | . Submission # 2 . Reflection . The explinations were very through and the videos and writing were able to fulfill all of the requirements that were needed | The student showed amazing work and their steps were very clear and consisice. | Overall this student followed all of the AP Collegeboard requirments needed for this assignment | .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/08/CSP-Grading.html",
            "relUrl": "/apcsp%20requirements/2023/01/08/CSP-Grading.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "HACKS 17-18",
            "content": ". Essential Knowledge . Collatz: Famous unsolved problem in math, and asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1 . Hailstone Numbers: sequence of integers generated by Collatz . Undecidable Problems: gives &quot;yes&quot; or &quot;no&quot; answer, but no algorithm can correctly answer inputs . Unsolvable Problems: No algorithm can ever be written to find the solution . Algorithm Efficiency: Measures number of steps needed to solve a problem . Heuristic Approach: Shortest and most efficient &quot;route&quot; . . Hailstone . Take the two codes above and combine them so one input gives the output that contains both the hailstone numbers and the number of iterations it takes i = 1. The more efficient the code, the higher your grade will be. . def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(int(i)) else: i = (i / 2) list_.append(int(i)) return list_ print(&#39;Please enter a number: &#39;, end=&#39;&#39; + &quot; n&quot;) while True: try: i = int(input()) list_ = [i] break except ValueError: print(&#39;Invaid selection, try again: &#39;, end=&#39;&#39;) l = collatz(i) print(&#39;Sequence: &#39;) print(*l, sep=&quot; &quot;) print(&#39;Number of iterations:&#39;, len(l) - 1) . Please enter a number: Sequence: 9 28 14 7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1 Number of iterations: 19 . . Effective . Write 2 algorithms: One is efficent and one is innefficent, then explain why one is efficent while the other isn&#39;t. | Explain why one algorithm is more efficient than another using mathematical and/or formal reasoning. | use variables, if statements, and loops to program your algorithm and upload to jupyter notebooks/ fastpages. | . tasks = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] # the tasks / variables def complete_tasks(tasks): for task in tasks: # completing each task if task == &quot;a&quot;: print(&quot;a&quot;) elif task == &quot;b&quot;: print(&quot;b&quot;) elif task == &quot;c&quot;: print(&quot;c&quot;) # calling the function complete_tasks(tasks) . a b c . tasks = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] tasks.sort () print (tasks) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] . . Daily Tasks . tasks = [&quot;shower&quot;, &quot;brush teeth&quot;, &quot;skincare&quot;, &quot;sleep&quot;] def complete_tasks(tasks): for task in tasks: if task == &quot;shower&quot;: print(&quot;Take a shower!&quot;) elif task == &quot;brush teeth&quot;: print(&quot;Go brush your teeth!&quot;) elif task == &quot;skincare&quot;: print(&quot;Do your skincare!&quot;) elif task == &quot;sleep&quot;: print(&quot;Go to bed!&quot;) complete_tasks(tasks) . Take a shower! Go brush your teeth! Do your skincare! Go to bed! .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/15/Unit1718HACKS.html",
            "relUrl": "/unit%203/2022/12/15/Unit1718HACKS.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 3.17-3.18 Group Lesson Period 4",
            "content": "Hailstone numbers . def collatz(i): while i &gt; 1: print(i, end=&#39; &#39;) if (i % 2): # i is odd i = 3*i + 1 else: # i is even i = i//2 print(1, end=&#39;&#39;) i = int(input(&#39;Enter i: &#39;)) print(&#39;Sequence: &#39;, end=&#39;&#39;) collatz(i) . Sequence: 4 2 1 . Number of iterations . def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(i) else: i = (i / 2) list_.append(i) return list_ print(&#39;Please enter a number: &#39;, end=&#39;&#39;) while True: try: i = int(input()) list_ = [i] break except ValueError: print(&#39;Invaid selection, try again: &#39;, end=&#39;&#39;) l = collatz(i) print(&#39;&#39;) print(&#39;Number of iterations:&#39;, len(l) - 1) . Please enter a number: Number of iterations: 8 . Vocab . Collatz . The Collatz conjecture is one of the most famous unsolved problems in mathematics. The conjecture asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1. . Hailstone numbers . The sequence of integers generated by Collatz conjecture are called Hailstone Numbers. Examples:Input : N = 7 Output : Hailstone Numbers: 7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1 No.&gt; ### Iteration The action or a process of iterating or repeating:such as. : a procedure in which repetition of a sequence of operations yields results successively closer to a desired result. . Undecidable problems . An undecidable problem is one that should give a &quot;yes&quot; or &quot;no&quot; answer, but yet no algorithm exists that can answer correctly on all inputs. . Unsolvable problems . An unsolvable problem is one for which no algorithm can ever be written to find the solution. . Additional information . A problem posed by L. Collatz in 1937, also called the 3x+1 mapping, 3n+1 problem, Hasse&#39;s algorithm, Kakutani&#39;s problem, Syracuse algorithm, Syracuse problem, Thwaites conjecture, and Ulam&#39;s problem (Lagarias 1985). Thwaites (1996) has offered a £1000 reward for resolving the conjecture. Let a_0 be an integer. Then one form of Collatz problem asks if iterating . always returns to 1 for positive a_0. (If negative numbers are included, there are four known cycles (excluding the trivial 0 cycle): (4, 2, 1), (-2, -1), (-5, -14, -7, -20, -10), and (-17, -50, -25, -74, -37, -110, -55, -164, -82, -41, -122, -61, -182, -91, -272, -136, -68, -34).) . The members of the sequence produced by the Collatz are sometimes known as hailstone numbers. Conway proved that the original Collatz problem has no nontrivial cycles of length &lt;400. Lagarias (1985) showed that there are no nontrivial cycles with length &lt;275000. Conway (1972) also proved that Collatz-type problems can be formally undecidable. Kurtz and Simon (2007) proved that a natural generalization of the Collatz problem is undecidable; unfortunately, this proof cannot be applied to the original Collatz problem. . The Collatz algorithm has been tested and found to always reach 1 for all numbers &lt;=19·2^(58) approx 5.48×10^(18) (Oliveira e Silva 2008), improving the earlier results of 10^(15) (Vardi 1991, p. 129) and 5.6×10^(13) (Leavens and Vermeulen 1992). Because of the difficulty in solving this problem, Erdős commented that &quot;mathematics is not yet ready for such problems&quot; (Lagarias 1985). . The numbers of steps required for the algorithm to reach 1 for a_0=1, 2, ... are 0, 1, 7, 2, 5, 8, 16, 3, 19, 6, 14, 9, 9, 17, 17, 4, 12, 20, 20, 7, ... (OEIS A006577; illustrated above). Of these, the numbers of tripling steps are 0, 0, 2, 0, 1, 2, 5, 0, 6, ... (OEIS A006667), and the number of halving steps are 0, 1, 5, 2, 4, 6, 11, 3, 13, ... (OEIS A006666). The smallest starting values of a_0 that yields a Collatz sequence containing n=1, 2, ... are 1, 2, 3, 3, 3, 6, 7, 3, 9, 3, 7, 12, 7, 9, 15, 3, 7, 18, 19, ... (OEIS A070167). . The Collatz problem can be implemented as an 8-register machine (Wolfram 2002, p. 100), quasi-cellular automaton (Cloney et al. 1987, Bruschi 2005), or 6-color one-dimensional quasi-cellular automaton with local rules but which wraps first and last digits around (Zeleny). In general, the difficulty in constructing true local-rule cellular automata arises from the necessity of a carry operation when multiplying by 3 which, in the worst case, can extend the entire length of the base-b representation of digits (and thus require propagating information at faster than the CA&#39;s speed of light). . More information . Hacks/Assignment . Take the two codes above and combine them so one imput gives the output that contains both the hailstone numbers and the number of iterations it takes i = 1. The more efficient the code, the higher your grade will be. (Algorithm Efficency) (.25) . Unit 3, Section 17: Algorithm Efficiency - Kush &amp; Yasha . What is Algorithm Efficiency? . Yasha - Algorithmic efficiency is an aspect of algorithmic programming that measures the number of steps needed to solve a problem. For instance, If I wanted to create a sorting algorithm that sorts numbers the numbers [2,4,5,1,3]from least to greatest, rather than having an algorithm that compares itself to the next number and swaps accordingly it would be more efficient if you had a program that scans through all the numbers and checks whether a number is smaller or bigger than the rest than and sorts accordingly. Both of the algorithms had the same objective, but one runs more efficiently than the other. . Here is an example of an inefficient algorithm: . def inefficientWay(numbers): # Then it loops over the numbers for i in range(len(numbers)): # Now it finds the minimum number in the unsorted part of the list min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j # Then it swaps the minimum number with the first unsorted number numbers[i], numbers[min_index] = numbers[min_index], numbers[i] # return the sorted list return numbers # test the algorithm print(inefficientWay([2, 4, 5, 1, 3])) # should print [1, 2, 3, 4, 5] . [1, 2, 3, 4, 5] . Yasha - This algorithm is inefficent because it uses a loop to find the minimum number in the unsorted part of the list and then swaps it with the first unsorted number. This is an inefficient way to sort a list. . Kush - Here is an efficent way to sort a list: . def efficient_sort(numbers): # loop over the numbers for i in range(len(numbers)): # find the minimum number in the unsorted part of the list min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j # swap the minimum number with the first unsorted number numbers[i], numbers[min_index] = numbers[min_index], numbers[i] # return the sorted list return numbers # test the algorithm print(efficient_sort([2, 4, 5, 1, 3])) # should print [1, 2, 3, 4, 5] . [1, 2, 3, 4, 5] . Yasha - The difference in this algorithm is that it uses a loop to find the minimum number in the unsorted part of the list and then swaps it with the first unsorted number. . How can you use algorithms to better your life: Mini activity . Yasha - Just for a second, think about all the tasks in your life that would work so much better automated. The sky&#39;s the limit. For an activity, write down or take a mental note of a task that you encounter in your day to day life, and think of ways where you can automate that task. An example of this would be me creating an algorithm for my morning routine. . tasks = [&quot;wake up&quot;, &quot;eat breakfast&quot;, &quot;brush teeth&quot;, &quot;go to school&quot;] def complete_tasks(tasks): for task in tasks: # code to complete each task goes here if task == &quot;wake up&quot;: print(&quot;Waking up now!&quot;) elif task == &quot;eat breakfast&quot;: print(&quot;Eating breakfast now!&quot;) elif task == &quot;go to school&quot;: print(&quot;Going to school now!&quot;) # and so on for each task in the list # call the function to complete the tasks complete_tasks(tasks) . Waking up now! Eating breakfast now! Going to school now! . Taking a heuristic approach to problems P1 . Kush - Sometimes when a problem has too many possibilities, a heuristic approach would be taken. let&#39;s use planes as an example. Imagine you were a musician on tour. You have shows in New Zealand, United States, Canada, and Russia. Well, what would be the shortest flight route so you can arrive at those destinations as fast as possible? You start in the United States. . Taking a heuristic approach to problems P2 . Kush - Well, since there are multiple possibilities, I chose to pick the countries closest to each other. The reason I chose this algorithm in particular is that it made the most sense. I had to start at United States, but then I went on to Canada, Russia, New Zealand, and then back to the United States. . Visual Representation . Hacks/assignment . Write 2 algorithms: One is efficent and one is innefficent, then explain why one is efficent while the other isn&#39;t. (.25) | Explain why one algorithm is more efficient than another using mathematical and/or formal reasoning. (.25) | use variables, if statements, and loops to program your algorithm and upload to jupyter notebooks/ fastpages. (.25) | .",
            "url": "https://lunaiwa.github.io/iwazaki/2022/12/15/Lesson1718.html",
            "relUrl": "/2022/12/15/Lesson1718.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Computer Science/Technical Business Panel",
            "content": ". Kathyleen Beveridge . Project Management . Journey though high tech and how it influenced her life . Life Story . Born in Vietnam | Califronia in 1980 | Study abroad in Spain | Move to San Diego in 2004 | Next carrer rotation maybe somewhere in the world | Finance and bachlor in San Francisco | . Quote She Lives by . &quot; mission in life is not to survive but by compassion, humor, and style . Carrer Path . Finance major was an envestment major in bank from 95&#39; to 96&#39; and relized she didn&#39;t like it | Switched carrer to high tech | Was really burnt out so moved to Sand Diego | Learned to surf | Switched to Qualcome | Left five years ago | In biotech but hires people | . Senior director of marketing and sales and directs 15 people and works with directors, and goes through different stage gate (NPI). Before comercializing product they go through &quot;voice of sales and customer&quot; does it make sense. And when they feel that it works well they will work with the SCRUM master to help bring the product to the world. . Loves to take a concept and build it to make an impact onto the world . Companies . &quot;Create tech that makes life better everywhere&quot; | &quot;In venting tech everyone loves&quot; | &quot;Enable customers to help the world&quot; | . Commonalities are that they all use tech for the good of the people and the world, or for the benefit of the people. This is the reason why she switched to high tech and why she loves it. When she was in banking she was just helping them retire and she didn&#39;t feel that it wasn&#39;t her calling. . Every company she worked in she had a macro impact on the world and at one point the Qualcome chips were in 95% of all cellphones in the world. Everyday a bilion people are impacted by Qualcome&#39;s technology. . Conclusion . Beveridge really enjoy&#39;s her high-tech job becuase she is able to impact people&#39;s lives daily . . Kris Porter . Developer Operation, SRE, Infastructure, . Life Story . Livermore high school | Math and physics and CS classes when started | Went to USLA for engineering for bachlors and master | First CS class was second | Failed first and second classes | Ended up doing CS anyway | Studies radar and wireless systems | Moved to San Diego with girlfriend | Went to Qualcome -&gt; engineering, devops, and monitoring | Works at Twitter | . Carrer . Undergrad and grad school | Where he got into some things when the stock market crashed | Reasearch project &quot;network internet mech. systems&quot; | Worked at shop which would fix Mac comps. | Deployed machine in enviroment to get info. | Where he learned lynix | Worked at a startup in 2010 and was devop | Stream and media for the Olymics 2012 | . Startup was for email for buisness by automation and basically some secuirty a bit and some networking. Encryption of everything. . Companies . Twitter | Small Start-ups | Qualcome | . Projects . Contiuous learning is better | Gets bored and learns things along the way | Twitter Projects | New data center deployment | New timeline used to be rest API and new to graph ul | . . Q/A . Agile Methodology . P - Different companies have own version of agile and different companies use it on their own way, at Qualcome all people worked together in big meeting no matter how short or long the project was. . B - Projects can go from 6 month to 9 month and do short sprints, what can you do in 3 months, 2 months. . Twitter . P - don&#39;t work at Twitter anymore and works at other company, very interesting and was interesting company and was laided off and requirment to work at their office in San Francisco. . M - from Qualcome to Twitter determined need to find a job earlier when Elon Musk, whenever you see a company shuffle you always look for plan B . Machine Learning . P - project that I was working on was to learn how to use the Python libraries and other machine learning programs to run experiemnts and only used the NDS system. Hosted a fork of GitLab and had about a hundred thousand repositories when they left. Wanted to use information to predict when to arcive and delete repositories. Wanted to know when to delete reposisotires since they were expensive . B - trying to join fragment databases and take massive fragment databases to see where the customers are buying. Are selling massive sensors and when Covid hit they got acess to data bases and sell data who test modification. . Most important skill in tech . P - the most useful overtime is continuous learning, not just learning a particular programing language and all companies have different stats and leanr different. All companies have a different way of doing things, don&#39;t be super concerned about things on the news and learning the skill to learn computer systems is fulfilling. As long as I go to a job for 6 months then as long as I learn it&#39;s ok. Everything falls into place and in tech it is in high demand. . B - 100% continous learning and be adaptive. Carrer path is zigzaggy and jus be adaptive. The best technical person ever workng with is someone who listens to requriements and translate it into how it can slove the requirments in tech. . Biggest Challenges and How they Overcome it . B - close to 14 years at Qualcome and is a semiconducotr industry and went through aqusisitions, learned going through aquisitions and Qualcome went out and took small companies &quot;Serial Aquires&quot; to be adaptive and always continous learning and if you keep those things you will be fine . P - interveiws now adays are really competetive, a series of timed random test, a problem to solve in 20-30 min and it has to work at the end no matter what at the end of the timeline. . Twitter University . P - formal training of their own data and code becuase you can&#39;t just find it on the internet omehwere and all these things you can learn, you can&#39;t learn that way but you have to be affective at the job. Open source framework called enable, they make their own thing since they have to learn how to write a service. A monorepo, everything in the backend sits in this one reposistory and you have to be able to effectivly navigate and learn how to use this. . Learning to code helps in Buisnees . B - friends were academicall softwear but they all move to somewhere in non tech and code. Learning to code is a way o thinking, disecting and learning. How to problem solve. Interveiwing is hard but when you are being interveiwed you are tested with problem solving and why you reach the conclusion that you did . &quot;In a room with whiteboard, notepad, and pen &#39;how many cars are in the US&quot;. Doesn&#39;&#39;t care about the answer but just the method that you did to get there. Understanding patters and learning techniques. . New Learning . P - next role is interested in web3 and clock change tech and haven&#39;t worked in AWS that much in job so that and google cloud things. . . Conclusion and Recap. . It doesn&#39;t matter where you go or major in because Computer Science teaches more then coding. It teaches someone how to adapt and problem solve in idfferent situations and it can teach lifelong lessons which can help you in a future carrer. Like the speakers said today, they all had different paths and they never expected to end up doing compute science, so it doesn&#39;t matter where you are right now, just adapt and explore. .",
            "url": "https://lunaiwa.github.io/iwazaki/speakers/2022/12/14/BuisnessPanel.html",
            "relUrl": "/speakers/2022/12/14/BuisnessPanel.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "HACKS 16",
            "content": ". Essential Knowledge . Experiment: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . . Simulation Description . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | A simulation that sees how traffic can be regulated by adding or removing roads in said simulation . What makes this a simulation? - Creating and removing roads can take a lot of time and energy and since we use roads every day we can&#39;t just keep removing and adding them. . Advantages and Disadvantages? - An advantage with this is you can save time and money by simulating the roads . Experiment? - An experiment in this situation would be unaffective since time and money would be involved when creating this experiement . . Simulation Quiz . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . . Dice Rolling . Describe the rolling dice simulation (answer guiding questions) . The simulation asks how many dice you want to roll and then give a output from 1-6. It simulates the rolling of dice no matter how many time you want to roll it. When you want to roll for example, 100 dice it would be hard to find that many and count all of the results so the simulation is better. . . Feature to Rolling Dice . Add a feature onto the rolling dice simulation above . - ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Enter a number from 1 to 6.&quot;) raise SystemExit(1) import random # rolling of the dice def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results # asking how many dice you want to roll num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) # printing the results of the roll print(&quot;Dice Rolled:&quot;, roll_results) . Dice Rolled: [4, 4, 6, 4, 1, 5] .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/13/Unit16HACKS.html",
            "relUrl": "/unit%203/2022/12/13/Unit16HACKS.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Lesson 16",
            "content": "3.16 Intro to Simulations - Alexa . What is a simulation? A simulation is an imitation of a situation or process | Aka a virtual experiment | . | . Guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Examples of Simulations: . Simulations are used all the time over many different industries . testing safety of a car | games | testing the efficiency of a parking lot | testing a new train route | . Simulation vs. Experiment . Experiment definition: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact | . So, why use a simulation? . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . leads into real life game example: . . . A Real Life Example: Four Corners - Lydia &amp; Ava . an example of a simulation and experiment = the game of 4 corners | games are simulations! | We are going to play a round of 4 corners here in class. This game is a real life version of our simulation. | Mr. Mortensen will be the person in the middle choosing corners. | Everyone will choose a corner, and if your corner is chosen, you are out! | . | . The rules of the game: . a person stands in the center of a room and the 4 coners are labeled 1-4 | Every player chooses a corner while the person in the middle closes their eyes | person in the middle chooses/calls out a number when instructed | every player in the chosen corner is now out | contine until there is a winner! | Let&#39;s play! . Below is the simulation of the four corners game! . import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . You chose corner number 2 and you&#39;re OUT . Comparing Experiment to Simulation Code: . Mr. Mortensen (person in the middle) = random.randint | if statement = if player is out | else = safe/continue | while loop = repeats process until there is a winner of the game | . DEBRIEF QUESTIONS: . Why is it better to code simulations than experiement in real life? | What makes this game a simulation? | What are its advantages and disadvantages? | Would an experiment be better in this situation? (raise hands for each team) | . . Hack #1 . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (collegeboard based questions) . Simulations Quiz (either screenshot or paste quiz in your notebook): | . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . . . Rolling a Dice Example - Sri . Below is a simulation of rolling dice! Examine the code and think about how this simulation works and its purpose! . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) . you rolled: [5, 1, 2] . . . Game of Life - Lydia &amp; Ava . Below is a simulation of the Game of Life, originally written by John Horton Conway. Mr. Mortensen has this game on the APCSP site and we think that it is a great example of an interactive simulation. . What it is . This game is an unpredictable cellular automaton | automaton = simulates and imitates human life, hence why this is called the game of life | After creating the initial configuration, the game evolves without pattern | . How it works . Cells in this game are alive or dead, similar to binary where they are on or off | The user created an initial configuration of cells on the grid, and presses play (tap the squares on the grid) | a cells&#39;s status (alive or dead, on or off) depends on the surrounding 8 cells status (surrounding 8 boxes). Here are the rules: The birth rule= a dead cell (blue box) that is surrounded by at least 3 alive cells (yellow boxes), will become alive | The death rule= an alive cell (yellow) with no or only one surviving cell around it dies (becomes blue) | Cell survival= an alive cell (yellow) with 2 or 3 alive neighboring cells will stay alive | . | . Try it Out! . Use the grid below to create cell figurations, press play, and watch your cells die, live, and move around! . . Remix of Game of Life . start step . . Hack #3 . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . . . Hacks Overview . Use these guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Hack #1 (0.3) . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (0.1) . Simulations Quiz (either screenshot or paste quiz in your notebook) | . Hack #3 (0.2) . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 (0.3) . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . Extra Credit (0.1) . For the extra 0.1: try coding a simple simulation and describe it (guiding question) | .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/13/Lesson16.html",
            "relUrl": "/unit%203/2022/12/13/Lesson16.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "HACKS 14-15",
            "content": ". Essential Knowledge . Randomization: generates a value between two numbers . import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . Library: a collection of code from an external source that can be used to add functionality to a program, they can be used to save time and effort in the development process (usually included in a program using a special keyword called &quot; &quot;)* . the key word &quot; &quot; tells the program to look for the library and use its code | . anything past import is a library, python doesn&#39;t have all the &quot;books&quot; so you have to add on books . import math math.sqrt(64) . examples of library: . Matplotlib- responsible for plotting numerical data, it is used for data analysis | SciPy- stands for scientific python and is used for high level scientific computations | PyGame- easy interface to the Standard Direct media Library (SDL) platform-independent graphics, audio, and input libraries. It is used for developing video games using computer graphics and audio libraries along with Python programming language. | . . Examples . Why are libraries useful when writing a program? | -- . What keyword is used to add pre-made library? | import . . Library/Libraries . Write a program that uses a library in any sort of manner | Explain your work/code | . import math x = int(input()) # set input which is a number as the value of x math.sqrt(x) . 3.0 . Math is a library which you can use and using this library you can input any value to be squared, it is similar to a calculator . . Implementing import function . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . import random flip = random.randint(1,2) if flip == 1: print(&quot;a&quot;) else: print(&quot;b&quot;) . a . What does import random function do | A random function picks something random in a list . Few other thing that we can import other than random | import math x = int(input()) # set input which is a number as the value of x math.sqrt(x) . 3.0 . . Random Number Generator . For your hacks you need to create a random number generator that will simulate this situation: . | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | . import random spin = random.randint(1,8) if spin &gt;=3: print(&quot;green&quot;) elif spin == 4 or 5: print(&quot;blue&quot;) elif spin == 6: print(&quot;purple&quot;) elif spin == 7: print(&quot;orange&quot;) elif spin == 8: print(&quot;red&quot;) . blue . What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? | Any number from 12-20 is included and numbers under or over 12-20 are excluded .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/12/Unit14-15HACKS.html",
            "relUrl": "/unit%203/2022/12/12/Unit14-15HACKS.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "HACKS 3-7",
            "content": ". Essential Knowledge Questions . Explain in your own words what each logical operator does | a. NOT : displays opposite of data inputted b. AND : determine if two conditions are met c. OR : determine if one of the conditions is met . . Logical Operators . Code your own scenario that makes sense for each logical operator . AND . water = 10 if water &gt; 5 and water &lt;= 20: print(&quot;drink more water&quot;) . OR . water = 1 ice = 21 if water &lt;= 0 or ice &gt; 20: print(&quot;too cold&quot;) . NOT . clouds = False result = not(clouds) print(result) . . Grader . Create an array with integers, each integer representing one score from a student&#39;s taken tests. If the average of the student&#39;s test scores are at least 75 percent, then display that the student is elligible for credit, and if not, display that the student must retake the tests over break. . grades = [&#39;30&#39;, &#39;80&#39;, &#39;90&#39;, &#39;89&#39;, &#39;75&#39;, &#39;60&#39;] average = sum(grades)/len(grades) # printing extra credit if average &gt; 75: print(&quot;extra credit!&quot;) # if less then 75 if average &lt; 75: print (&quot;retake :(&quot;) . . Algorithm Calculator . Create an algorithm that calculates the sum of two numbers, then determines whether the sum is greater than or less than 100. (number oriented and creative) . # user input of data numbers x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) # adding the numbers sum = int(x) + int(y) # printing the sum print(&quot;the sum is:&quot;, sum) . x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) sum = int(x) + int(y) # if it is greater than if sum &gt; 100: print(&quot;the number is less than 100!&quot;) # if it is less than else: num = list(range(sum,101,1)) print(&quot;the number is more than 100&quot;) . . Flowcharts in Code . Create 3 different flow charts representing nested statements and transfer them into code. . . 1 . weather = &quot;sunny&quot; temp = &quot;80&quot; if weather == &quot;sunny&quot;: if temp ==&quot;80&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;80&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;wrong weather and right size&quot;) . 2 . weather = &quot;cloudy&quot; temp = &quot;40&quot; if weather == &quot;cloudy&quot;: if temp ==&quot;40&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;40&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;wrong weather and right size&quot;) . 3 . if temp &gt; 80: if weather == &quot;hot&quot;: print(&quot;wear light clothes&quot;) elif store == &quot;cold&quot;: print(&quot;wear a jacket&quot;) else: print(&quot;no weather report today&quot;) . . Four Statement Code . Create a piece of code that displays four statements instead of three. Try to do more if you can. . if temp &gt; 100: if weather == &quot;cold&quot;: print(&quot;it will be cold today&quot;) elif clouds == &quot;rainy&quot;: print(&quot;bring an umbrella&quot;) elif sunny == &quot;it will be a nice day&quot;: print(&quot;go outside&quot;) # if temp is &lt; than 100 else: print(&quot;it&#39;s too hot&quot;) . . Class Recommendations . Make piece of code that gives three different recommendations for possible classes to take at a school based on two different condtions. These conditions could be if the student likes STEM or not. . STEM = True ART = True # if STEM was chosen if STEM: print(&quot;APCalculus, APChem, APBiology&quot;) # if ART was chosen elif ART: print(&quot;APArtandDesign, APArtHistory, APMusicTheory &quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/11/Unit5-7HACKS.html",
            "relUrl": "/unit%203/2022/12/11/Unit5-7HACKS.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Lesson 14-15",
            "content": "Section 3.14.1 - Libraries (Ethan Tran) . Learning Objective . To be able to select appropriate libraries and/or existing code to use in the creation of new programs. . College Board Essential Knowledge . A software library contains procedures that can be used in the creation of new programs. | Existing segments of code can come from internal or external sources, ie. libraries or previously written code. | The use of libraries simplifies the task of creating complex programs. | Application program interfaces (APIs) are specifications for how the procedures in a library behave and can be used. | Documentation for a library or API is necessary in understanding the key behaviors provided by the API/library and how to utilize them in your work. | . Defining a Library . A library is a collection of code from an external source that can be used to add functionality to a program. | Libraries are very useful, as they can be used to save time and effort in the development process. | Libraries are usually included in a program using a special keyword called &quot; .&quot; This keyword tells the program to look for the library and use its code. | . Example . import math math.sqrt(64) . 8.0 . Review Questions (Answer for candy!) . . 1) In your own words, what is a library? . 2) Why are libraries useful when writing a program? . 3) What keyword is used to add a pre-made library? . Hacks . Write a program that uses a library/libraries in any sort of manner. | Explain your work/code | . . . Lesson 3.15.1 . What is randomization? . 1) Randomization generates a value between two numbers. For example RANDOM(1,3) may result as 1 or 2 or 3, either one of those. . 2) Now if we look into our day to day life we can see that randomization is all around us. . Now for a piece of candy does anyone want to tell us an example of randomization during our day to day life. . 3) In order to use the random function we have to first import random at the very beggining. . Now lets look at the code below right here. . import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . 8 . 1) The lowest number that will be generated is 0 for answer 1 and for answer2, the lowest that will be generated is 1 so the lowest number that can be generated for answer 3 would be 1. . 2) The highest number that will be generated to answer1 is 3 and the highest number that will be generated for answer 2 is 8 so the highest number for answer 3 would be 11. . 3) The range of numbers that answer 3 could print out would be from 1 to 11. . So a normal dice contains six sides with 1-6 on the individual sides. Which of the following code would simulate the result of rolling the dice three times and adds together all the obtained values together? . A. . import random sum = random.randint(1,6) + random.randint(1,6) + random.randint(1,6) print(sum) . 12 . B. . import random sum = random.randint(1,18) print(sum) . 17 . C. . import random sum = 3*random.randint(1,6) print(sum) . 12 . 1) Its not B because B is saying that it is going to choose one number between the range of 1 and 18 and not the sum of 3 diff numbers. . 2) C is not correct also because C is saying that the computer is choosing one random between 1 and 6 and multiplying that 3 times but we want the sum of three different numbers between 1 and 6. . 3) So the answer is A. . . For the last example: . import random i = 1 while i &lt; 4: choose = random.randint(1,10) print(choose) i += 1 . 6 9 8 . Which answers could not be possible for the code above? . A. 4 7 6 . B. 9 1 8 . C. 2 11 5 . D. 5 10 2 . Random can also have different methods, in the above examples we only used one example, randint which returns a random number between the given range. Down below I have created a table of all the methods with the description of what it is used for with the random function. . Method | Description . seed() | Initialize the random number generator . getstate() | Returns the current internal state of the random number generator . setstate() | Restores the internal state of the random number generator . getrandbits() | Returns a number representing the random bits . randrange() | Returns a random number between the given range . randint() | Returns a random number between the given range . choice() | Returns a random element from the given sequence . choices() | Returns a list with a random selection from the given sequence . shuffle() | Takes a sequence and returns the sequence in a random order . sample() | Returns a given sample of a sequence . random() | Returns a random float number between 0 and 1 . uniform() | Returns a random float number between two given parameters . betavariate() | Returns a random float number between 0 and 1 based on the Beta distribution (used in statistics) . expovariate() | Returns a random float number based on the Exponential distribution (used in statistics) . gammavariate() | Returns a random float number based on the Gamma distribution (used in statistics) . gauss() | Returns a random float number based on the Gaussian distribution (used in probability theories) . lognormvariate() | Returns a random float number based on a log-normal distribution (used in probability theories) . normalvariate() | Returns a random float number based on the normal distribution (used in probability theories) . vonmisesvariate() | Returns a random float number based on the von Mises distribution (used in directional statistics) . paretovariate() | Returns a random float number based on the Pareto distribution (used in probability theories) . weibullvariate() | Returns a random float number based on the Weibull distribution (used in statistics) . Lesson Recap: 1) random function generates a random number from a to b (range of two numbers) . 2) You need to import random in order to use the random function . 3) Every result from an import function is equally likely to occur . Hacks for lesson 3.15.1 . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . . . 3.15.2 Lesson . Some Essential Knowledge that you need to know | RANDOM (a,b) will provide you with a random integer between the numbers a-b | Ex. RANDOM (7,18) can provide you with the number 13. | Using a random generator means each result can come out as different. | . Lets Try an Example Scenario . Try and formulate a way to write a segment of code that can simulate the flipping of a coin. | You have to use a random generator and assign the output of &quot;Heads&quot; or &quot;Tails&quot; to a specified result. | . import random flip = random.randint(1,2) if flip == 1: print(&quot;Heads&quot;) else: print(&quot;Tails&quot;) # Try this code for yourself! . This is a pretty simple code to understand. | First we use the randomization here between the 1 and 2 to determine which side of the coin we get. | If we get 1 then we get heads. If we get 2 or anything else than 2, then we get Tails. | . Now let&#39;s answer questions using your knowledge. . If you want yes to show up 50% of the time, which of the code segments can you use? | . random(1,100) &lt;= 50 random(1,100) == 50 random(1,10) &lt;= 5 random(1,10) &gt;= 5 . The answer is A,C, and D! | . Why isn&#39;t the answer B? . This because when you are saying equal to 50, you are saying only when this one number shows up the output will be yes. | You want it to come up 50 percent of the time not just when that one number shows up. | . Hacks 3.15.2 . For your hacks you need to create a random number generator that will simulate this situation: | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | . Hacks Summary . Hacks 3.14.1 . Write a program that uses a library/libraries in any sort of manner. | Explain your work/code | . Hacks 3.15.1 . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . Hacks 3.15.2 . For your hacks you need to create a random number generator that will simulate this situation: | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/11/Lesson14-15.html",
            "relUrl": "/unit%203/2022/12/11/Lesson14-15.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Vocabulary",
            "content": ". . Binary Data Abstractions . -- . Boolean: Boolean conditionals are often used to decide which sections of code to execute (such as in if statements) or repeat (such as in for loops). 3.7 . Boolean Value: A boolean value is either True or False. Variables with boolean values are often used to keep track of certain conditions within a program. 3.7 . game_active = True can_edit = False . Unicode: International character encoding standard that includes different languages, scripts and symbols. Each letter, digit or symbol has its own unique Unicode value. Unicode is an extension of ASCII that allows many more characters to be represented. . RGB: RGB (red, green, and blue) refers to a system for representing the colors to be used on a computer display. Red, green, and blue can be combined in various proportions to obtain any color in the visible spectrum. . . Unit 3: Algorithm/Programming Terms . . Variables: A value that can change, depending on conditions or on information passed to the program. Typically, a program consists of instruction s that tell the computer what to do and data that the program uses when it is running. 3.4 . # in this case x and you are the variables x = 7 y = 9 print(y + x) . 16 . Data Types: A data type, in programming, is a classification that specifies which type of value a variable has and what type of mathematical, relational or logical operations can be applied to it without causing an error. . . Assignment Operators: operator used to assign a new value to a variable, property, event or indexer element in C# programming language. Assignment operators can also be used for logical operations such as bitwise logical operations or operations on integral operands and Boolean operands. 3.11 . a = 3 b = 5 c = a + b # Output print(c) . Managing Complexity with Variables . -- . Lists: A list is a sequence of several variables, grouped together under a single name. Instead of writing a program with many variables. 3.8 . # make a list letters = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] # get the first item in the list first_letter = letters [0] # get last item in the list last_letter = letters [-1] # looping the list for letter in letters: print(letter) # adding items to the list letters = [] letters.append(&#39;a&#39;) letters.append(&#39;b&#39;) letters.append(&#39;c&#39;) # numbered lists squares = [] for x in range (1,11): squares.append(x**2) # list comprehensions squares = [x**2 for x in range(1,11)] # slicing the list letters = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] first_two = letters[:2] # copy a list copy_of_letters = letters[:] . Dictionaries: Python dictionaries allow you to connect pieces of related information. Each piece of information in a dictionary is stored as a key-value pair. When you provide a key, Python returns the value associated with that key. You can loop through all the key-value pairs, all the keys, or all the values. . # making a dictionary ball = {&#39;color&#39;: &#39;green&#39;, &#39;points&#39;: 5} . Looping Through a Dictionary: You can loop through a dictionary in three ways: you can loop through all the key value pairs, all the keys, or all the values. A dictionary only tracks the connections between keys and values; it doesn&#39;t track the order of items in the dictionary. If you want to process the information in order, you can sort the keys in your loop. . fav_language = { &#39;a&#39;: &#39;python&#39;, &#39;b&#39;: &#39;c&#39;, &#39;d&#39;: &#39;java&#39;, &#39;e&#39;: &#39;python&#39;, } # show each person&#39;s fav language for name, language in fav_languages.items(): print(name + &quot;:&quot; + language) . Class: a template definition of the method s and variable s in a particular kind of object . Thus, an object is a specific instance of a class; it contains real values instead of variables. The class is one of the defining ideas of object-oriented programming. . class MY: x = 5 . Algorithms: a procedure or formula used for solving a problem. It is based on conducting a sequence of specified actions in which these actions describe how to do something, and your computer will do it exactly that way every time. An algorithm works by following a procedure, made up of inputs. 3.4 . List = [1, 2, 3, &quot;A&quot;, 2.3] print(List) . [1, 2, 3, &#39;A&#39;, 2.3] . Sequence: A set of logical steps carried out in order. Computers need instructions in the form of an algorithm in order to complete a desired task, and this algorithm must have the correct order of steps, or sequence. 3.4 . Selection: Selection is a decision or question. At some point, a program may need to ask a question because it has reached a step where one or more options are available. Depending on the answer given, the program will follow a certain step and ignore the others. . Iteration: a sequence of instructions or code being repeated until a specific end result is achieved. Iterative development is sometimes called circular or evolutionary development. 3.10 . Expressions: a combination of values and functions that are combined and interpreted by the compiler to create a new value, as opposed to a “statement” which is just a standalone unit of execution and doesn&#39;t return anything. 3.2 . Comparison Operators: operators that compare values and return true or false . The operators include: &gt; , &lt; , &gt;= , &lt;= , === , and !== . Logical operators — operators that combine multiple boolean expressions or values and provide a single boolean output. 3.7 . a = 3 b = 1 c = 2 if ( a == b ): print (&quot;1 - a is equal to b&quot;) else: print (&quot;1 - a is not equal to b&quot;) if ( a != b ): print (&quot;2 - a is not equal to b&quot;) else: print (&quot;2 - a is equal to b&quot;) if ( a &lt; b ): print (&quot;4 - a is less than b&quot;) else: print (&quot;4 - a is equal to b&quot;) if ( a &gt; b ): print (&quot;5 - a is greater than b&quot;) else: print (&quot;5 - a is not greater than b&quot;) if ( a &lt;= b ): print (&quot;6 - a is either less than or equal to b&quot;) else: print (&quot;6 - a is neither less than nor equal to b&quot;) if ( b &gt;= a ): print (&quot;7 - b is either greater than or equal to b&quot;) else: print (&quot;7 - b is neither greater than nor equal to b&quot;) . 1 - a is not equal to b 2 - a is not equal to b 4 - a is equal to b 5 - a is greater than b 6 - a is neither less than nor equal to b 7 - b is neither greater than nor equal to b . Link to boolean resource . Truth Tables: a breakdown of all the possible truth values returned by a logical expression. A truth value is typically either true or false, or 1 or 0. In some cases, the value might be based on another binary system, such as on and off or open and closed, but these are not as common. 3.11 . Characters: a character is a display unit of information equivalent to one alphabetic letter or symbol. 3.4 . a = &quot;Hello, World!&quot; print(a[1]) . e . Strings: an array of characters. The informal view of a string is a sentence. Strings are almost always written in code as a quoted sequence of characters, i.e., &quot;this is a string&quot;. 3.4 . print(&quot;Hello&quot;) print(&#39;Hello&#39;) . Hello Hello . Length: a code which maps source symbols to a variable number of bits. Variable-length codes can allow sources to be compressed and decompressed with zero error (lossless data compression) and still be read back symbol by symbol. 3.8 . num_responses = len(fav_languages) . Traversing Strings: accessing all the elements of the string one after the other by using the subscript. A string can be traversed using for loop or while loop. 3.8 . string_name = &quot;luna&quot; # Iterate over the string for element in string_name: print(element, end=&#39; &#39;) print(&quot; n&quot;) # Code #2 string_name = &quot;LUNA&quot; # Iterate over index for element in range(0, len(string_name)): print(string_name[element]) . l u n a L U N A . Python . -- . Conditionals with Lists: You can easily test weather a certain value is in a list. You can also test weather a list is empty before trying to loop through the list. 3.6 . &gt;&gt;&gt; players = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] &gt;&gt;&gt; &#39;a&#39; in players True &gt;&gt;&gt; &#39;e&#39; in players False # testing if value is not in a list banned_users = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] user = &#39;d&#39; if user not in banned_users: print(&quot;We have no players yet&quot;) # checking if list is empty players = [] if players: for players in players: print(&quot;Player: &quot; + player.title()) else: print(&quot;We have no players yet&quot;) . if: a programming conditional statement that, if proved true, performs a function or displays information. If statements are used to test for particular conditions and respond appropriately. 3.4 . # age number age = 19 # if statement if age &gt;= 18: print(&quot;you are old enough to vote&quot;) . elif: used in conditional statements (if statements), and is short for else if 3.5 . . else conditionals: specifies a new condition if the first condition is false 3.5 . age = 17 if age &gt;= 18: print(&quot;You are old enough to vote&quot;) else: print(&quot;You can&#39;t vote yet&quot;) . If, Else, Elif: 3.5 . if age &lt; 4: ticket_price = 0 elif age &lt; 18: ticket_price = 10 else: ticket_price = 15 . # age number age = 12 # if statement if age &lt; 4: price = 0 # elif statement elif age &lt; 18: price = 5 # else statement else: price = 10 # final print print(&quot;Your total cost is $&quot; + str(price) + &quot;.&quot;) . Nested Selection Statements: used when more than one decision must be made before carrying out a task. Nesting is a programming activity, in which one program block is placed inside other program block of the same operation type. . While Loops: A &quot;While&quot; Loop is used to repeat a specific block of code an unknown number of times, until a condition is met. For example, if we want to ask a user for a number between 1 and 10, we don&#39;t know how many times the user may enter a larger number, so we keep asking &quot;while the number is not between 1 and 10&quot;. 3.3 . While loops with range: the range() method and returns a sequence of numbers starting from 0 by default and increments of 1. 3.2 . current_number = 1 while current_number &lt;= 5: print(current_number) current_number += 1 # user quit # prompt that is given to the user prompt = &quot; nTell me something, and I&#39;ll&quot; prompt += &quot;repeat it back to you.&quot; prompt += &quot; nEnter &#39;quit&#39; to end the program&quot; active = True while active: message = input(prompt) if message == &#39;quit&#39;: active = False else: print(message) # using continue in a loop banned_users = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] prompt = &quot; nAdd a player to your team&quot; prompt += &quot; nEnter &#39;quit&#39; when you are done&quot; players = [] while True: player = input(prompt) if player == &#39;quit&#39;: break elif player in banned_users: print(player + &quot;is banned&quot;) continue else: players.append(player) print(&quot; nYour Team:&quot;) for player in players: print(player) . While loops: A while loop repeats a block of code as long as a certain condition is true 3.2 . # simple loops current_value = 1 while current_value &lt;= 5: print(current_value) current_value += 1 # let the user choose when to quit message = &#39;&#39; while message != &#39;quit&#39;: message = input(&quot;What&#39;s your message?&quot;) print(message) . Combining loops with conditionals to break: . # using break to exit a loop prompt = &quot; nWhat room are in in?&quot; prompt += &quot; nEnter &#39;quit&#39; when you are done&quot; while True: city = input(prompt) if city == &#39;quit&#39;: break else: print(&quot;I&#39;m in the&quot; + room + &quot;!&quot;) . Abstraction: the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use 3.13 . . Procedures: is a named set of instructions that can take in parameters and return values. [may be called &quot;method&quot; or &quot;function&quot; in different programming languages] 3.12 . . Parameters: are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. [can be classified as sequencing, selection, and iteration] 3.12 . . Return Values: calling script or function when it completes its task . . . Python Coding Essentials . . append(): adding element to the end of the list . names = [&#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # add element to the end of the list names.append(&#39;luna&#39;) # start with empty list names = [] names.append(&#39;taiyo&#39;) names.append(&#39;ethan&#39;) names.append(&#39;parav&#39;) names. append(&#39;nikhil&#39;) . insert(): add an element in a specific position . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # adding in a specific position names.insert(0, &#39;taiyo&#39;) names.insert(3, &#39;ethan&#39;) . remove(): remove an item from the list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # deleting by value names.remove(&#39;parav&#39;) # by position del names[-1] . pop(): takes the item off the top of the &quot;stack&quot; (by default it returns the last element of the list but you can also op from any position) . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # pop last item of list most_recent_name = names.pop() print(most_recent_name) # pop first item of list first_name = names.pop(0) print(first_name) . nikhil luna . len(): returns the number of items in a list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # find length of list num_names = len(names) print(&quot;There are&quot; + str(num_names) + &quot;names.&quot;) . There are5names. . sort(): changes oder of the list permanently . sorted(): returns a copy of the list which leaves the original copy unchanged . # sorted() names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # sort permanently names.sort() # sort permanently in reverse alphabetical order names.sort(reverse=True) # temp. sort print(sorted(names)) print(sorted(names, reverse=True)) # reversing the order of a list names.reverse() . [&#39;ethan&#39;, &#39;luna&#39;, &#39;nikhil&#39;, &#39;parav&#39;, &#39;taiyo&#39;] [&#39;taiyo&#39;, &#39;parav&#39;, &#39;nikhil&#39;, &#39;luna&#39;, &#39;ethan&#39;] . range(): used to work with numbers efficiently . # print numbers 0 to 10 for number in range(11): print(number) # making list of numbers 1 to 10 # using the list() value can generate a large list of numbers numbers = list(range(1, 10)) . 0 1 2 3 4 5 6 7 8 9 10 . min(): finds the least value in a list . nums = [10, 30, 40, 60, 70, 60] least = min(nums) print(min(nums)) . 10 . max(): finds the highest value in list . nums = [10, 30, 40, 60, 70, 60] highest = max(nums) print(max(nums)) . 70 . sum(): sum of all in list . nums = [10, 30, 40, 60, 70, 60] total = sum(nums) print(sum(nums)) . 270 . Libraries . -- . seed(): initialize the random number generator . import random random.seed(10) print(random.random()) . 0.5714025946899135 . getstate(): returns the current internal state of the random number generator . import random # remember this state state = random.getstate() # print 10 random numbers print(random.sample(range(20), k = 10)) # restore state random.setstate(state) # print same first 5 random numbers # as above print(random.sample(range(20), k = 5)) . [6, 16, 10, 8, 4, 2, 12, 15, 18, 1] [6, 16, 10, 8, 4] . setstate(): restores the internal state of the random number generator . import random #print a random number: print(random.random()) #capture the state: state = random.getstate() #print another random number: print(random.random()) #restore the state: random.setstate(state) #and the next random number should be the same as when you captured the state: print(random.random()) . 0.4288890546751146 0.5780913011344704 0.5780913011344704 . getrandbits(): returns a number representing the random bits . import random print(random.getrandbits(8)) . 52 . randrange(): returns a random number between the given range . import random print(random.randrange(3, 9)) . 6 . randint(): returns a random number between the given range . import random print(random.randint(3, 9)) . 9 . choice(): returns a random element from the given sequence . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] print(random.choice(mylist)) . banana . choices(): returns a list with a random selection from the given sequence . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] print(random.choices(mylist, weights = [10, 1, 1], k = 14)) . [&#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;cherry&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;] . shuffle(): takes a sequence and returns the sequence in a random order . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] random.shuffle(mylist) print(mylist) . [&#39;cherry&#39;, &#39;apple&#39;, &#39;banana&#39;] . sample(): returns a given sample of a sequence . # import random from random import sample # Prints list of random items of given length list = [1, 2, 3, 4, 5] print(sample(list,3)) . [3, 5, 1] . random(): returns a random float number between 0 and 1 . . uniform(): returns a random float number between two given parameters . import random # initializing bounds a = 4 b = 9 # printing the random number print(&quot;The random number generated between 4 and 9 is : &quot;, end =&quot;&quot;) print(random.uniform(a, b)) . The random number generated between 4 and 9 is : 8.300245716512697 . betavariate(): return a random float number between 0 and 1 based on the Beta distribution (used in statistics) . import random # determining the values of the parameters a = 5 b = 10 # using the betavariate() method print(random.betavariate(a, b)) . 0.2765672503897696 . expovariate(): returns a random float number based on the Exponential distribution (used in statistics) . import random # determining the values of the parameter num = 1.5 # using the expovariate() method print(random.expovariate(num)) . 0.1791564144726827 . gammavariate(): Returns a random float number based on the Gamma distribution (used in statistics) . import random # determining the values of the parameter a = 100 b = 2 # using the gammavariate() method print(random.gammavariate(a, b)) . 180.87172405471134 . gauss(): Returns a random float number based on the Gaussian distribution (used in probability theories) . import random # determining the values of the parameters a = 100 b = 50 # using the gauss() method print(random.gauss(a, b)) . 104.56915910283324 . lognormvariate(): Returns a random float number based on a log-normal distribution (used in probability theories) . import random # determining the values of the parameters a = 0 b = 0.25 # using the lognormvariate() method print(random.lognormvariate(a, b)) . 1.070776531292022 . normalvariate(): Returns a random float number based on the normal distribution (used in probability theories) . import random # determining the values of the parameters a = 100 b = 50 # using the normalvariate() method print(random.normalvariate(a, b)) . 92.0091083297734 . vonmisesvariate(): Returns a random float number based on the von Mises distribution (used in directional statistics) . import random # determining the values of the parameters a = 0 b = 4 # using the vonmisesvariate() method print(random.vonmisesvariate(a, b)) . 0.7807261280524349 . paretovariate(): Returns a random float number based on the Pareto distribution (used in probability theories) . import random # determining the values of the parameter a = 3 # using the paretovariate() method print(random.paretovariate(a)) . 1.8504392744961453 . weibullvariate(): Returns a random float number based on the Weibull distribution (used in statistics) . import random # determining the values of the parameters a = 1 b = 1.5 # using the weibullvariate() method print(random.weibullvariate(a, b)) . 0.7948789443740898 .",
            "url": "https://lunaiwa.github.io/iwazaki/vocab/2022/12/08/Vocabulary.html",
            "relUrl": "/vocab/2022/12/08/Vocabulary.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "HACKS 11-13",
            "content": "Essential Knowledge . Procedure: also called a function, it is a small section or piece of code which does something specific or does a specific task . Parameter: variable passed into a function . a=1 b=9 # parameters are a and b def addition(a, b): sum = a + b return sum # call function print print(addition(a, b)) . 10 . Return Values: function that returns to called function when the task is completed . Output Parameters: refers to one section of the code as an input to function . Procedure Names: ex. in this code the procedure&#39;s name is 9 and 10 . x = 9 y = 10 . Arguments: a way to give more information to functions . Why abstracting away your program logic into separate, modular functions is effective | It makes the code easier to understand, maintainable, and organized. Breaking the code down makes it easier to debug and organize the code . . Quiz . Complete quiz: . questionNum = 3 correct = 0 questions = [ &quot;What is are correct names for a procedure? n A) Method n B) Function n C) Both&quot;, &quot;What is a procedure? n A) Sequencing n B) Selection n C) Iteration n D) All&quot;, &quot;Use this for following question: n def inchesToFeet(lengthInches): n t lengthFeet = lengthInches / 12 n t return lengthFeet n n What is the procedure name, the parameter, and what the procedure returns? n A) feetToInches, lengthInches, lengthMeters n B) inchesToFeet, lengthInches, lengthFeet n C) inchesToFeet, lengthFeet, lengthInches n D) lengthInches, inchesToFeet, lengthFeet&quot;] answers = [&quot;c&quot;, &quot;d&quot;, &quot;b&quot;] def qna(question, answer): print(&quot;Question:&quot;, question) response = input() print(&quot;Answer:&quot;, response) if response.lower() == answer: print(&quot;Correct :) n&quot;) global correct correct += 1 else: print(&quot;Incorrect :( n&quot;) for x in range(questionNum): qna(questions[x], answers[x]) print(&quot;Score:&quot;, correct, &quot;/ 3&quot;) . Question: What is are correct names for a procedure? A) Method B) Function C) Both Answer: c Correct :) Question: What is a procedure? A) Sequencing B) Selection C) Iteration D) All Answer: d Correct :) Question: Use this for following question: def inchesToFeet(lengthInches): lengthFeet = lengthInches / 12 return lengthFeet What is the procedure name, the parameter, and what the procedure returns? A) feetToInches, lengthInches, lengthMeters B) inchesToFeet, lengthInches, lengthFeet C) inchesToFeet, lengthFeet, lengthInches D) lengthInches, inchesToFeet, lengthFeet Answer: b Correct :) Score: 3 / 3 . . Procedure Code . Code a procedure that finds the square root of any given number. (make sure to call and return the function) . # import import math a = 25 # a is the parameter def sqrt(a): return math.sqrt(a) # calling the func print(sqrt(a)) . 5.0 . # import import math user = float(input()) sqrt = math.sqrt(user) print(&quot;Type a number:&quot; , user) print(sqrt) . Type a number: 25.0 5.0 . . Sub-Procedures . Create a procedure that uses other sub-procedures (other functions) within it and explain why the abstraction was needed (conciseness, shared behavior, ect.) | Add another layer of abstraction to the word counter program (HINT: create a function that can count the number of words starting with ANY character in a given string -- how can we leverage parameters for this?) | a = 5 b = 10 # func def add(a,b): sum = a + b return(sum) # result print(add(a,b)) . 15 . def split_string(s): # listing words and splitting string words = s.split(&quot; &quot;) new_words = [] for word in words: if word != &quot;&quot;: # `words` to `new_words` new_words.append(word) return words # input and returns the number of words # given letter def count_words_starting_with_letter(words, letter): count = 0 # loop through the list for word in words: # use lower() if word.lower().startswith(letter): count += 1 return count # returns the number of words that start with &#39;a&#39; def count_words_starting_with_a_in_string(s): # use the split_string() function to split the input string into a list of words words = split_string(s) # use count_words_starting_with_letter() count = count_words_starting_with_letter(words, &quot;a&quot;) return count def count_words_starting_with_d_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;d&quot;) return count def any_count(sentence, letter): words = split_string(sentence) count = count_words_starting_with_letter(words, letter) return count userLetter = input(&quot;Input any letter:&quot;) answer = count_words_starting_with_letter(userLetter, str(userLetter)) print(str(answer) + &quot; word(s) starting with &quot; + str(userLetter)) . 1 word(s) starting with a . . Procedures, Arguments, Parameters . Code some procedures that use arguments and parameters with Javascript and HTML (make sure they are interactive on your hacks page, allowing the user to input numbers and lick a button to produce an output) . add two numbers | subtract two numbers | multiply two numbers | divide two numbers | . x = 14 y = 19 . addition . . subtraction . . divide . . multiply . .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/08/Unit12-13HACKS.html",
            "relUrl": "/unit%203/2022/12/08/Unit12-13HACKS.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Lesson 12-13",
            "content": "Topic 3.12 (3.A) Calling &amp; Understanding Procedures - Kaiden &amp; Ama . Overview: Learning Objectives . Basics of Procedures | Calling Procedures | Determine Results of Procedures | . What is a procedure? . Essential Knowledge: . A procedure is a named set of instructions that can take in parameters and return values. May be called &quot;method&quot; or &quot;function&quot; in different programming languages. | . | Parameters are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. | Procedures can be classified as sequencing, selection, and iteration. How? | . Example: . What is the procedure&#39;s name? | What are the parameters? | What did the procedure return? | . x = 5 y = 3 def multiply(x, y): product = x * y return product answer = multiply(x, y) print(&quot;The product of&quot;, x, &quot;times&quot;, y, &quot;is&quot;, answer) . The product of 5 times 3 is 15 . Calling Procedures . To call a procedure you would write the name of the procedure followed by the parentheses with the parameters of the procedure | Procedures do not require parameters, but the parentheses must be there | . Ex: . procedureName(parameter1, parameter2, ...) | How would you call this procedure? | . num = 5 def math(x): op1 = x * 2 op2 = op1 - 9 return op2 . Quiz (Part of Hacks) . Complete this quiz: . questionNum = 3 correct = 0 questions = [ &quot;What is are correct names for a procedure? n A) Method n B) Function n C) Both&quot;, &quot;What is a procedure? n A) Sequencing n B) Selection n C) Iteration n D) All&quot;, &quot;Use this for following question: n def inchesToFeet(lengthInches): n t lengthFeet = lengthInches / 12 n t return lengthFeet n n What is the procedure name, the parameter, and what the procedure returns? n A) feetToInches, lengthInches, lengthMeters n B) inchesToFeet, lengthInches, lengthFeet n C) inchesToFeet, lengthFeet, lengthInches n D) lengthInches, inchesToFeet, lengthFeet&quot;] answers = [&quot;c&quot;, &quot;d&quot;, &quot;b&quot;] def qna(question, answer): print(&quot;Question:&quot;, question) response = input() print(&quot;Answer:&quot;, response) if response.lower() == answer: print(&quot;Correct :) n&quot;) global correct correct += 1 else: print(&quot;Incorrect :( n&quot;) for x in range(questionNum): qna(questions[x], answers[x]) print(&quot;Score:&quot;, correct, &quot;/ 3&quot;) . Determining the Result of a Procedure . To determine the result of a procedure or any code, you must follow the code line by line and see what each one does . | Using syntax, you can determine the result by . function parameters | return value and statements | . | . To use return values, you have to write the syntax return followed by the expression you would like to return var | . A return statement exits a function and instructs python to continue executing the program and to return a certain value . | Value can be string, a tuple, or any other type that is being sent back to the main program . | . Ex: . def divide(num1,num2): x = num1/num2 return x . what is x being assigned to inside the function? . | As a reminder, to use function parameters, you would have to write the syntax name of the function followed by the parameters needed in parentheses . | Function parameters are the parameters that are used when calling the function in order to get a result. . | . What are the function parameters in this procedure? . What values are being passed to the function? . def function(first_name, last_name): print(first_name + &quot; &quot; + last_name) function(&quot;Peter&quot;,&quot;Parker&quot;) function(&quot;Safin&quot;, &quot;Singh&quot;) . Peter Parker Safin Singh . In the cell above, the function is being called twice, which shows the importance of function in order to accomplish the same thing with different parameters. . What is wrong with the function? . Can you translate the binary numbers into decimal notation? . def find_cube(num): result = bin(num * num * num) cube = find_cube(3) cube2 = find_cube(4) print(&#39;Cube:&#39;,cube) print(&#39;Cube:&#39;,cube2) . Cube: None Cube: None . Once again, I called the function twice, which is useful, because it allows the coder to do the same thing multiple times with different arguments. . Topic 3.13 (3.B) Managing Complexity - Safin . Overview: Learning Objectives . increasing code modularity using procedures abstracting large problems into smaller ones | extract shared features to reduce code duplication | . | using parameters to reuse procedures | improving code readability with procedures | manipulating procedure logic and preserving outputEssentially, we&#39;ll learn how and when it is appropriate to construct a function (procedural abstraction) and what its benefits are . | . Vocabulary: . Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | Abstraction - the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use | Duplication - having multiple duplicate code blocks, often decreasing readability and efficiency | Logic - the sequence of steps and operations that a computer follows to execute a program, including the specific instructions and decision-making processes built into the code | . Parameters . As we saw above, parameters can be used to make functions work with multiple different inputs. Let&#39;s review the following code . # these parameters are the inputs to the function, and they are used # inside the function to perform some operation def add(x, y): # inside the function, we can use the x and y parameters just like # we would use any other variable result = x + y return result # to call the function and pass in values for the x and y parameters, # we simply provide the values as arguments in the function call result = add(2, 3) print(result) # should output 5 # we can also use variables as arguments in the function call x = 5 y = 10 result = add(x, y) print(result) # should output 15 # we can even use the result of one function call as an argument # in another function call result = add(add(2, 3), add(4, 5)) print(result) # should output 14 . 5 15 14 . In the above example, parameters were used to create a function that could be called multiple times without code duplication. . Modularity . In the following example, we will use specialized functions and explain their benefits: . import math def hypotenuse(leg1, leg2): # notice we&#39;re using this &lt;var&gt; * &lt;var&gt; syntax multiple times? # this has multiple drawbacks: # - it&#39;s repetitive and makes the code longer # - if we wanted to change the operator being # applied to `leg1` and `leg2`, we&#39;d have to do it twice! leg1_squared = leg1 * leg1 leg2_squared = leg2 * leg2 return math.sqrt(leg1_squared + leg2_squared) ## VERSUS ## # this works, but let&#39;s try to write the &quot;squared&quot; variable assignment statements more concisely... def square(a): return a * a def hypotenuse_abstracted(leg1, leg2): # not only is this shorter, but we can now: # - better understand the code at a glance--we know exactly # what `square` should do # - change the operator in a single place (`square`) rather than # multiple times within this hypotenuse function leg1_squared = square(leg1) leg2_squared = square(leg2) return math.sqrt(leg1_squared + leg2_squared) ## EXTRA CHALLENGE ## # is it possible to write the `hypotenuse` function in a single line? def hypotenuse_abstracted2(leg1, leg2): # ... pass assert hypotenuse(3, 4) == hypotenuse_abstracted(3, 4) == 5 . Abstracting Shared Features . Say we want to create a set of functions that count the number of words in a sentence that start with a certain character. We want to create... . count_words_starting_with_a_in_string(sentence) | count_words_starting_with_d_in_string(sentence) | . In order to count words starting with a certain character, we&#39;ll first need to split up the sentence into words. This behavior will be shared across both functions we intend to create, so procedural abstraction is appropriate here. . # is a separate element in the list def split_string(s): # use the split() method to split the string into a list of words words = s.split(&quot; &quot;) # initialize a new list to hold all non-empty strings new_words = [] for word in words: if word != &quot;&quot;: # add all non-empty substrings of `words` to `new_words` new_words.append(word) return words # this function takes a list of words as input and returns the number of words # that start with the given letter (case-insensitive) def count_words_starting_with_letter(words, letter): count = 0 # loop through the list of words and check if each word starts with the given letter for word in words: # use the lower() method to make the comparison case-insensitive if word.lower().startswith(letter): count += 1 return count # this function takes a string as input and returns the number of words that start with &#39;a&#39; def count_words_starting_with_a_in_string(s): # use the split_string() function to split the input string into a list of words words = split_string(s) # use the count_words_starting_with_letter() function to count the number of words # that start with &#39;a&#39; in the list of words count = count_words_starting_with_letter(words, &quot;a&quot;) return count # see above def count_words_starting_with_d_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;d&quot;) return count # example usage: s = &quot; This is a test string! Don&#39;t you think this is cool? &quot; a_count = count_words_starting_with_a_in_string(s) d_count = count_words_starting_with_d_in_string(s) print(&quot;Words starting with a:&quot;, a_count) print(&quot;Words starting with d:&quot;, d_count) . Words starting with a: 1 Words starting with d: 1 . In the above example, we have: . defined several functions that perform different tasks related to processing a string | abstracted away shared behavior for both functions that count the number of words starting with a specific character in a string | . Topic 3.13 (3.C) Developing Procedures - David &amp; Alex . Overview: Learning Objectives . parameters being used to manage complexity parameters storing variables | parameters storing arguments | . | calling functions with procedure names choosing procedure names | calling procedures in python and javascript | . | . Vocabulary: . Procedure - a module of code that is created to complete a certain task, this is basically a function | Procedure Name - the name that is given to a function/procedure | Parameters - a variable that is used in a function to allow for data to be imported into a function | Arguments - a way to provide information to a function, usually defined outside a function and then imported into a function with parameters | . Functions - Basic Structure . Functions can be created in many different languages. Below are some examples in Collegeboard&#39;s format, Python, and Javascript. . Collegeboard . Above, the function is defined as PROCEDURE, which tells the coder that this is a function. The function is then named with procName, which is simply how the function is identified. parameter1, parameter2,... are variables that can be predefined elsewhere and repeatedly used in the same function. This will be gone over later in the lesson so don&#39;t worry if you don&#39;t get it. block of statements are just things that you would place inside a function to complete a certain task, such as print() in Python. . Python . def function(a,b): # function is defined print(a+b) # prints output of variables function(1,2) # one instance that it can be used function(2,3) # another instance . 3 5 . Python is similar to the Collegeboard example, where def defines the function, function, and then is followed by parameters a,b, which can later be interchanged with any numbers as shown with function(1,2). The numbers are called arguments, which are information provided to the function with parameters. In this case, the parameters are being added within the function and then printed. . Javascript . function Function(a,b) { return a + b; } Function(1,2) Function(2,3) . 3 5 . Javascript in this case is almost the exact same as Python, the only differences being that function is called with function and that the formatting is a little different. Otherwise, it does the exact same thing as the Python example. . Example . function div(a,b) { return (a+b)/2 } div(3,7) . What is the procedure name? | What are the parameters? | What operation is being done? | what would the output of this code be? | . Parameters . In functions, there are sometimes parameters that the functions have in which you can call to the function giving arguements that will provide input to the function For example: | . def function(num1, num2): if num1 &gt; num2: print(&quot;num1 is greater than num2&quot;) elif num1 &lt;num2: print(&quot;num1 is less than num 2&quot;) num1= 6 num2 = 8 function(num1,num2) . In this function, it takes in two parameters num1 and num2 | Whithin this function it uses conditionals to determine if num 1 is larger or smaller than num2 | When calling to this function we must put in two arguements, num1 and num2 respectively | We put in 6 for num1 and 8 for num2 and the algorithm runs and gives us an outcome | . This basic function in python can be recreated in Javasript . function compare(a,b) { if(a&gt;b) { console.log(&quot;a is greater than b&quot;) } else if (a&lt;b) { console.log(&quot;a is less than b&quot;) } } // How do you call to this function? . what are the parameters? | What is the output? | what are the arguements? | . Calling functions . When calling functions, you have to ask yourself some questions Does the function have any parameters? | does the parameter have output? | . | Depending on these answers, the way you will call to a function will be different | . Example where it does does have parameters and gives output . def InchestoFeet(inches): Feet = 0 Feet = inches / 12 return Feet result = InchestoFeet(24) print(result) . 2 . If you look closely, there is a return at the end of the function, this returns a value when you call the function | This is why we have to set a variable, in this case result equal to the output of the function. | Also one thing to notice is that this function also takes in a parameter called inches | . Here&#39;s an example of calling functions in HTML with Javascript: . HI . . &lt;!-- function is called here --&gt; &lt;button id=&quot;enter&quot; onclick=&quot;print(a,b)&quot;&gt;HI&lt;/button&gt; &lt;p id=&quot;result&quot;&gt;&lt;/p&gt; &lt;!-- javascript --&gt; &lt;script&gt; function print(a,b) { document.getElementById(&quot;result&quot;).innerHTML = a + b // math } // variables are defined var a = 1 var b = 2 &lt;/script&gt; . Hacks . Topic 3.12 (3.A): . Define procedure and parameter in your own words | Paste a screenshot of completion of the quiz | Define Return Values and Output Parameters in your own words | Code a procedure that finds the square root of any given number. (make sure to call and return the function) | Topic 3.13 (3.B): . Explain, in your own words, why abstracting away your program logic into separate, modular functions is effective | Create a procedure that uses other sub-procedures (other functions) within it and explain why the abstraction was needed (conciseness, shared behavior, etc.) | Add another layer of abstraction to the word counter program (HINT: create a function that can count the number of words starting with ANY character in a given string -- how can we leverage parameters for this?) | Topic 3.13 (3.C): . Define procedure names and arguments in your own words. | Code some procedures that use arguments and parameters with Javascript and HTML (make sure they are interactive on your hacks page, allowing the user to input numbers and click a button to produce an output) Add two numbers | Subtract two numbers | Multiply two numbers | Divide two numbers | . | Rubric . Each hack is worth 0.3 points . To get 0.3 points for each hack you must: Complete each hack correctly and completely | Submit by 11:59PM on Friday, December 9 | . | The last 0.1 points are if you do a good job on the binary calculator. | Anything missing or submitted late will have points deducted. | .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/08/Lesson12-13.html",
            "relUrl": "/unit%203/2022/12/08/Lesson12-13.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "HACKS 9-11",
            "content": ". Essential Knowledge . -- . . Examples . What is the middle number in a Binary Search given the following set of numbers in order: 1, 5, 19, 44, 89 | What is the middle number in a Binary Search given the following set of numbers that are not in order: 3, 87, 12, 66, 22 | . Nested Conditionals . why is it important to know that algorithms that look different can do the same thing and that algorithms that look the same might have different results?(0.15) | for the converted conditional to boolean conversion(0.10) | total: 0.25 | . LotsOfMoney = True Broke = True if LotsOfMoney == True and Broke == False: print(&quot;earn more money&quot;) else: if Broke == True: print(&quot;go to work&quot;) else: print(&quot;earn more money&quot;) # Boolean conversion work = not(LotsOfMoney) or LotsOfMoney and Broke if work == True: print(&quot;go to work and earn more&quot;) if work == False: print(&quot;rich person&quot;) . go to work go to work and earn more . . Complex Algorithms . Develop your own complex algorithm using a flowchart and natural language, then code it! . Requirements: . Includes both a flowchart AND natural language | Working code of the same algorithm | Incorporates selection AND/OR iteration | Make it creative! | . Tips: . This site is good for making flowcharts! | Natural language should just be a list | Think about the whole process, not just the end result | . . money = 45 while (money &gt; 0): money -= 30 print(money) if money == 0: print(&quot;go back to work&quot;) . 15 -15 . . Number Game . Fix the number guessing game . Make a flow chart for the algorithm number guessing game | Make a function that gets the user guess | Modify the existing search function to give more encouraging feedback | import random #sets variables for the game num_guesses = 0 user_guess = -1 upper_bound = 101 lower_bound = 0 #generates a random number number = random.randint(1,101) # print(number) #for testing purposes print(&quot;test 5&quot;) print(&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): gnum = input(&quot;choose a number between 1 to 100&quot;) return gnum #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if int(guess) &lt; int(number): print(&quot;too low&quot;) #change this lower_bound = guess return lower_bound, upper_bound elif int(guess) &gt; int (number): print(&quot;too high&quot;) #change this upper_bound = guess return lower_bound, upper_bound else: upper_bound, lower_bound = guess, guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) if int(upper_bound) == int(number): break else: print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . test 5 I&#39;m thinking of a number between 1 and 100. You guessed 30. too low Guess a number between 30 and 101. You guessed 60. too low Guess a number between 60 and 101. You guessed 80. You guessed the number in 3 guesses! . . Binary Search . calculate the middle index and create a binary tree for each of these lists 12, 14, 43, 57, 79, 80, 99 | 92, 43, 74, 66, 30, 12, 1 | 7, 13, 96, 111, 33, 84, 60 | . | index = [12, 14, 43, 57, 79, 80, 99] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 57 . index =[92, 43, 74, 66, 30, 12, 1] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 43 . index = [7, 13, 96, 111, 33, 84, 60] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 60 . Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? | In the third set of numbers, the second number looked at in a binary search if it is more than the middle number would be 96 . Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] . | answer d [is not sorted] .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/06/Unit911HACKS.html",
            "relUrl": "/unit%203/2022/12/06/Unit911HACKS.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "HACKS 3-4",
            "content": ". Describe the different parts of an algorithm, sequencing, selection, and iteration in the image below . Set item to number to search for. | Get text number in the list. | If number = item, display &quot;item found&quot; | If he are more numbers in the list, go back to Step 2 | Display &quot;item found&quot; | Sequencing: order of how to do a process | Selection: allows algorithm to make a decision based on the status [if a condition is met] | Iteration: loop | . . Evaluating Code . Evaluate the arithmetic expression for this code . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . 3 . . Crossword Puzzle . Finish the crossword puzzle . Iteration | Selection | Sequence | . Challenge . string1 = &quot;degree&quot; string2 = &quot; passenger&quot; FinalString = string1 + string2 print(FinalString[2:9]) print(len(FinalString)) print(len(FinalString[2:9])) . gree pa 16 7 . . Quiz . The length of the string | False | &gt; . | print(&quot;Hello World&quot;[3:8]) . lo Wo . .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/11/29/Unit3-4HACKS.html",
            "relUrl": "/unit%203/2022/11/29/Unit3-4HACKS.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "HACKS 1-2",
            "content": ". Essential Knowledge Questions . 1. What is a variable . abstraction inside program that holds value&gt;associated data storage that rep. single value at a time . 2. What is the best type of data to represent someone&#39;s dog&#39;s name . variable . 3. Why is it important to give variables specific names before containing values . call them while coding . 4. What is the best way to print someone&#39;s phone number . string . 5. Explain what an assignment operator is . the equal sign in coding . 6. In Collegeboard pseudocode, what symbol is used to assign values to variables? . &quot;&lt;--&quot; . 7. A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? . It will display 22 . 8. What is a list . sequence of elements with each one (element) being a variable . 9. What is an element . items in a list . 10. What is an easy way to reference the elements in a list or string . print . 11. What is an example of string . &quot;Hello World&quot; . . List Examples . thanksgivingList = [&quot;cranberry pie&quot;, &quot;casserole&quot;, &quot;mashed potatoes&quot;, &quot;turkey&quot;] print(thanksgivingList) . [&#39;cranberry pie&#39;, &#39;casserole&#39;, &#39;mashed potatoes&#39;, &#39;turkey&#39;] . . Create a list . namelist = [&quot;Luna&quot;, &quot;Ethan&quot;, &quot;Taiyo&quot;, &quot;Parav&quot;, &quot;Nikhil&quot;] # printing the end print(namelist) . [&#39;Luna&#39;, &#39;Ethan&#39;, &#39;Taiyo&#39;, &#39;Parav&#39;, &#39;Nikhil&#39;] . name = &quot;Luna&quot; food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(name, food) . Luna [&#39;grapes&#39;, &#39;apples&#39;, &#39;bananas&#39;] . food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(food[1]) print(food[-1]) . apples bananas . . Variables . age = &quot;16&quot; name = &quot;Luna&quot; print(name + &quot; is &quot; + age) . Luna is 16 . . Number Input . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code numlist = [int(num1), int(num2), int(num3)] # shows the original numbers to the user print(&quot;Original-&gt;&quot;,numlist) # add the new number to the original input print(&quot;Add-&gt;&quot;,add) # code that adds the inputted addend to the other numbers for i in range(len(numlist)): numlist[i -1] += int(add) print(&quot;New-&gt;&quot;,numlist) . Original-&gt; [10, 20, 30] Add-&gt; 4 New-&gt; [14, 24, 34] . . Python Quiz . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, lunaiwazaki running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program complexity is correct! Question: Lists are a form of data ______ abstraction is correct! Question: Which brackets are used to assign values to a variable to make a list? [] is correct! lunaiwazaki you scored 3/4 . . Simplify Foods . food1 = &quot;pizza&quot; food2 = &quot;hot dog&quot; food3 = &quot;sushi&quot; food4 = &quot;strawberry&quot; food5 = &quot;sandwich&quot; print(food1, food2, food3, food4, food5) . pizza hot dog sushi strawberry sandwich . food = [&quot;pizza&quot;, &quot;hotdog&quot;, &quot;sushi&quot;, &quot;strawberry&quot;, &quot;sandwich&quot;] # change all the foods to share a list and use brackets print(food) . [&#39;pizza&#39;, &#39;hotdog&#39;, &#39;sushi&#39;, &#39;strawberry&#39;, &#39;sandwich&#39;] . color = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;] # change all foods to color print(color) . [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;] .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/python/2022/11/28/Unit1-2HACKS.html",
            "relUrl": "/jupyter/python/2022/11/28/Unit1-2HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Lesson 8-10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statement | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop. . . Unit 3 Section 8.1 . Unit 3 Section 8.1 - Taiyo Iwazaki . Lesson Objectives: . Express an algorithm that uses iteration without using a programming language | Define an iteration | The Basics Of Iteration | Examples | LESSON Vocab: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | Before we dive deeper, we need to understand that an iteration is a part of an algorithm. And in that iteration is a set of instructions that need to be followed until a certain desired output is met. . Examples . Here is an example using online shopping: . . Lets say you are looking for a lost item inside of your house... What steps would you take? . Suppose there are n rooms to search... number the rooms 1-n . | Start by searching in room number 1 . | Search each room thoroughly for you item. . | Change the room number to the next highest number . | Repeat steps 3 and 4 until you have found your lost item. . | Enjoy the lost item. . | WAIT! There is a flaw in the program. . This is where a stopping condition is useful for when the iteration already meets the desired requirement and gets out of the loop. . Programming Examples . i = 0 while (i &lt; 5): print(&quot;Hello, World!&quot;) i = i + 1 . Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! . i = 0 while (i &lt; 5): #Try changing the 5 and see what happens! print(&quot;Hello, World!&quot;) i = i + 1 if (i == 3): #Try Changing the 3 and see what happens! break . Hello, World! Hello, World! Hello, World! . These are just a few examples of what you can do with iteration. . Summary: . An Iteration is a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | We can use stopping conditions to stop an iteration if a condition is already met | . Unit 3 Section 3.8.2 . Unit 3 Section 3.8.2 - Parav Salaniwal . Lesson Objectives . Determine the result or side effect of iteration statements | Learn how to use iterations with for loops and while loops | Creating code to learn how to incrementally list numbers | Learn the range function and using variables in code | . Definition: Iteration Statement - cause statements to be executed zero or more times, subject to some loop-termination criteria . The first function we will learn is the range function, which we will use with for loop. As you may be able to guess, this will give us the sum based on the input provided. We always use a variable, such as i, to represent what the range of numbers the output will show. For example, if I wanted to list the numbers from 1-10 using the range function, it would look like this: . for i in range(11): print(i) . 0 1 2 3 4 5 6 7 8 9 10 . Now the first thing you may notice is my input for the range was 11, and you may wonder why is it not 10? This is because when using the range function, the last number, or the ending value, is not included in the output, therefore we would have to add 1 to receive the correct output. Now if we were looking to include a starting value to have it start from 1 and end at 10, the code would look like this: . for i in range(1,11): print(i) . 1 2 3 4 5 6 7 8 9 10 . When using the range with for loop, the you can list much more than just a increment of one, would anyone like to guess how we could include a change in the incremented value? Try making a change in the python code above to change the incremented value. When using the range function: . for i in range(starting value, ending value, incremented value): print(i) . Now with while loops, we can provide a similar output with a variation in the input. Similar to for loops, it requires a variable which is the starting value. . i=1 while i&lt;=10: print(i) i=i+1 . 1 2 3 4 5 6 7 8 9 10 . Based on your knowledge from for loops, which values in the code above are the starting, incrementing, and ending values? . LESSON . . Unit 3 Section 3.8.3 . Unit 3 Section 3.8.3 - Nikhil . Here is some basic code I have created, let&#39;s first look into this one: I created a list of pets, cat, dog, fish, and snake. Then I created a for loop, &quot;for i in pets&quot; and this looks at every element/value in pets, so &quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot; and &quot;snake&quot;. This next if statmenets checks if the element in the list is &quot;fish&quot; and if it is, it breaks the loop. The statement would just print, cat and dog since the loop breaks at fish. . pets = [&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;, &quot;snake&quot;] for i in pets: if i == &quot;fish&quot;: break print(i) . cat dog . This while loop checks if number less than 10 is even and if so, it will print out the even numbers. We set a starting value of number = 0, then while the number is less than 10, the percent sign means modulus so meaning if there is a remaninder when we dvide. So if number divided by 2 has no remainder then it will print number. Then after that it will add 1 to the number and repeat the process untill it reaches 10. So let&#39;s check for 0, while 0 is less than ten, then it moves to next statement, since 0 divded by 2 has a remainder of 0 it will print the value of 0. Now it will add 1 to zero. Then it will see that 1 is less than ten, and then check if 1 divided by 2 has a remainder of 0 which it does not, so it skips the print, and goes straight to addding one, so on so forth. . number = 0 while number &lt; 10: if number % 2 == 0: print(number) number += 1 . 0 2 4 6 8 . The purpose of this code is to find the sum of all the even numbers between and any number of your choosing. The integer input asks for the minimum and maximum value. The next statement puts a starting sum value set to 0. The for i in range (minimum,maximum+1) looks at every number between those two values, in this case 1 and 100. Then the if i modulus 2 checks if any numbers that are divisible by 2 and the remainder comes to 0. If there is a number that has a remainder of 0 when divided by 2, it adds that number to the sum. Then the last print statement, prints out the final sum of all even numbers between the two numbers of your choosing. . minimum = int(input(&quot;please enter a minimum number you want your range to be&quot;)) maximum = int(input(&quot;please enter a number that you want to be the maximum value&quot;)) sum = 0 for i in range(minimum,maximum+1): if i % 2 == 0: sum += i print(&quot;The sum of all the even numbers between&quot;, minimum, &quot;and&quot;, maximum, &quot;:&quot;, sum) . The sum of all the even numbers between 1 and 3 : 2 . LESSON . . HACKS Unit 3 Section 8 . Hacks Unit 3 Section 3.8.1 . Define an Iteration | Make your own example of an iteration with at least 4 steps and a stopping condition(Similar to mine that I did) | Program a simple iteration. | Hacks Unit 3 Section 3.8.2 . What is an iteration statement, in your own words? | Create a descending list of numbers using for loop | Using while loop, make a list of numbers which will form an output of 3,16,29,42,55,68,81 | . Section 10 - Lists - Luna Iwazaki, Ethan Tran . Section Objectives: . For list operations, write expressions that use list indexing and list procedures | For algorithms involving elements of a list, write iteration statements to traverse a list | For list operations, evaluate expression that use list indexing and list procedures | For algorithms involving elements of a list, determine the result of an algorithm that includes list traversals | . Section Vocabulary: . Traversing Lists: where all elements in the list are accessed, or a partial traversal, where only a portion of elements are accessed (can be a complete traversal) . Essential Knowledge: . List procedures are implemented in accordance with the syntax rules of the programming language . | Iteration Statements can be used to traverse a list . | !!! AP EXAM provides pseudocode for loops | Knowledge of existing algorithms that use iteration can help in constructing new algorithms: | . Unit 3 Section 10 . Section 10 - Lists . Lists Recap . append() - adding element to the end of the list . names = [&#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # add element to the end of the list names.append(&#39;luna&#39;) # start with empty list names = [] names.append(&#39;taiyo&#39;) names.append(&#39;ethan&#39;) names.append(&#39;parav&#39;) names. append(&#39;nikhil&#39;) . insert() - adding an element in a specific position . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # adding in a specific position names.insert(0, &#39;taiyo&#39;) names.insert(3, &#39;ethan&#39;) . remove() - remove an item from the list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # deleting by value names.remove(&#39;parav&#39;) # by position del names[-1] . pop() - takes the item off the top of the &quot;stack&quot; (by default it returns the last element of the list but you can also pop from any position) . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # pop last item of list most_recent_name = names.pop() print(most_recent_name) # pop first item of list first_name = names.pop(0) print(first_name) . len() - returns the number of items in a list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # find length of list num_names = len(names) print(&quot;There are&quot; + str(num_names) + &quot;names.&quot;) . sort() - changes order of list permanently . sorted() - returns a copy of the list which leaves the original copy unchanged . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # sort permanently names.sort() # sort permanently in reverse alphabetical order names.sort(reverse=True) # temp. sort print(sorted(names)) print(sorted(names, reverse=True)) # reversing the order of a list names.reverse() . range() - use to work with number efficiently . for number in range(11): print(number) # making list of numbers 1 to 10 # using the list() value can generate a large list of numbers numbers = list(range(1, 10)) . min() - find the least value in list . nums = [10, 30, 40, 60, 70, 60] least = min(nums) print(min(nums)) . max() - find the highest value in list . nums = [10, 30, 40, 60, 70, 60] highest = max(nums) print(max(nums)) . sum() - sum of all in list . nums = [10, 30, 40, 60, 70, 60] total = sum(nums) print(sum(nums)) . Practice Question . Using the information above fill in the missing code . nums = [] nums.#missing code &#39;15&#39; nums.#missing code &#39;43&#39; nums.#missing code &#39;81&#39; nums.#missing code &#39;25&#39; least = #missing code print(#missing code) . AP Exam Reference Sheet . Since CS is taught in different languages the pseudocode represents fundamental programming concepts. . provides basic operations on lists | provides pseudocode for loops | helps you understand code used in questions | students can use this reference sheet in the AP Exam | . APCSP Testing Reference Sheet . If you looked at the reference sheet and seem to not understand some concepts here is a Khan Academy resource which can help you understand specific topics. . Khan Academy Resource . Practice Question . If the list words contain [&#39;song&#39;, &#39;book&#39;, &#39;video&#39;, &#39;book&#39;] what will be the following code output . Unit 3.10 (Ethan Tran) . Traversing a list is the process of visiting each element in a list in a sequential order. It can be used to access, search for, and modify elements in the list. | . Traversing Lists . 1) Complete Traversal: All elements in a list are assessed . 2) Partial Traversal: Only a given portion of elements are assessed . 3) Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. . Quick Lists Reference Sheet . A given element of a list can be evaluated using index, [ ] | . 1) Ex. listName[i] 2) Ex. listName[3] . insert( ) allows a value to be inserted into a list at index i | append( ) allows a value to be added at the end of a list | remove( ) allows an element at index i to be deleted from a list | length( ) returns the number of elements currently in a specific list | . . A loop such as the example above allows a user to access each item within the list . College Board Example Question . &lt;/html&gt; &lt;/div&gt; &lt;/div&gt; . HACKS Unit 3 Section 10 . Find the lowest value in a list (Luna Iwazaki) . Part 1 . Use the list made bellow | Make a variable to hold the minimum and set it to potential minimum value | Loop | Check each element to see if it is less than the minimum variable | If the element is less than the minimum variable, update the minimum | After all the elements of the list have been checked, display the minimum value | . nums = [&#39;38&#39;, &#39;45&#39;, &#39;67&#39;, &#39;83&#39;, &#39;78&#39;] # add code here . Part 2 . look at the apcsp reference sheet and take notes about ones you don&#39;t understand (at least 4) . Lists Quiz (Ethan Tran) . Take a screenshot of your score on put it on your review ticket! . import getpass, sys import random def ask_question (question, answer): print(question) ans = input(question) print(ans) if ans == answer: print(&quot;Correct!&quot;) return 1 else: print(&quot;Wrong&quot;) return 0 question_list = [&quot;What allows a value to be inserted into a list at index i?&quot; , &quot;What allows an element at index i to be deleted from a list?&quot; , &quot;What returns the number of elements currently in a specific list?&quot; , &quot;What allows a value to be added at the end of a list?&quot;] answer_list = [&quot;index()&quot;, &quot;remove()&quot;, &quot;length()&quot; , &quot;append()&quot;] # Set points to 0 at the start of the quiz points = 0 # If the length of the quiz is greater than 0, then random questions will be chosen from the &quot;question_list&quot; set while len(question_list) &gt; 0: index = random.randint(0, len(question_list) - 1) # The points system where a point is rewarded for each correct answer points = points + ask_question(question_list[index], answer_list[index]) # If a question or answer has already been used, then it shall be deleted del question_list[index] del answer_list[index] # Calculating score using the points system and dividing it by the total number of questions (6) score = (points / 4) # Calculating the percentage of correct answers by multiplying the score by 100 percent = (score * 100) # Printing the percentage, and formatting the percentage in a way where two decimals can be shown (through &quot;{:.2f}&quot;) print(&quot;{:.2f}&quot;.format(percent) + &quot;%&quot;) # Adding final remarks based upon the users given scores if points &gt;= 5: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Amazing job!&quot;) elif points == 4: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Not too bad, keep on studying! &quot; ) else: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Its alright, better luck next time!&quot;) . . . College Board Reference Sheets . List Operations . . &lt;/div&gt; .",
            "url": "https://lunaiwa.github.io/iwazaki/lesson%20plans/2022/11/28/Lesson8-10.html",
            "relUrl": "/lesson%20plans/2022/11/28/Lesson8-10.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Lesson 1-2",
            "content": "Unit 3, Section 1.1: Data Types and Variables - Ederick . Essential Knowledge (College Board&#39;s Must Knows): . A variable is an abstraction inside a program that holds a value, where each variable has associated data storage that represents a single value at a time (However, if the value is a collection type such as a list, then the value can contain multiple values). | Variables typically have meaningful names that helps with the overall organization of the code and understanding of what is being represented by the variables | Some programming languages provide a variety of methods to represent data, which are referenced using variables 9Booleans, numbers, lists, and strings) | One form of a value is better suited for representation than antoher. | . What is a Variable? . A variable is an abstraction made inside a program that holds a value. These variables are used in code to refer to more comples values that the variable contains and makes the program code more organized and smoother to run. . Variables can be seen as &quot;containers&quot; and each container has a name that holds what it is supposed to hold. In the following code, we can see that a variable has the value of &quot;Alex.&quot; How can we make the variable appear more organized in the code? . x = &quot;alex&quot; print(x) . alex . Choosing Variables . When choosing variables, it is important to assign the variables name to something that correlates with what the function of the variable is supposed to do. For example, we do not want a variable that is supposed to hold a name be named &quot;age&quot; becaue it can be confusing and mistakes may be more prevalent. . Example: . age = &quot;Timmy&quot; name = &quot;25&quot; print(name + &quot; is &quot; + age) . 25 is Timmy . Notice how age is going to be seen when printing the code. That can lead to confusion | . Data Types . Variables have different data types that store specific kinds of data depending on what is being represented. Some examples are shown below: . integer (numbers) | string (or text/letters) | Boolean (True/False statements) | . These types of data types can be useful when trying to represent a value. For example, you would not want a variable meant to represent someone&#39;s name with an integer. . Questions (College Board&#39;s Essential Knowledge): . What exactly IS a variable? | What is the best data type to represent someone&#39;s dog&#39;s name? | Why is it important to give variables specific names before containing values? | What is the best way to represent someone&#39;s phone number? | Bonus (Not required but important to know): . How can we update a variable&#39;s value | What function is used to recieve a user&#39;s input? | Variables (3.1.2) - Noor . Learning objective for 3.1.2: . Determine the value of a variable as a result of an assignment . done through looking at how we can use the assignment operator | . Note: . Collegeboard uses &lt;-- as the assignment operator . The assignment operator looks different for different types of coding languages A variable will take the most recent value assigned | . How do you even store a value inside a variable? . Let&#39;s use python for our example: . In python, the assignment operator is the equal sign (=) | In order to store a value inside a variable, we must: Give the variable a name | place the assignment operator | input the variable value | . | . highscore = 100 # How do you store a number like 3.72? money = 3.72 # What about storing your username (string)? username = &quot;name&quot; # What if it is raining outside and you want to store that fact (boolean)? is_raining = True # What about a list of groceries? groceries = [&quot;eggs&quot;, &quot;flour&quot;, &quot;bread&quot;, &quot;milk&quot;] . Lets Look at an Example: . x = 10 y = 20 z = 30 x = y z = x # what do you think z will be? print(z) . Let&#39;s get a little more practical here . Imagine that you are making a calendar and have just finished the html code that is needed: . You now want to be able to switch between the months of the year by using the &quot;next&quot; or &quot;prev&quot; buttons you will need to take the html elements and use them to your advantage but how? | . | . | . &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;calendar&quot;&gt; &lt;div class=&quot;month&quot;&gt; &lt;button class=&quot;prev&quot;&gt;Prev&lt;/button&gt; &lt;button class=&quot;next&quot;&gt;Next&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; // to make our lives a little easier, we can store the div next and prev into variables // this way we don&#39;t need to type out as much // Note: You CAN just add the event listener to document.querySelector(.next) or prev and get the same desired outcome nextButton = document.querySelector(.next) prevButton = document.querySelector(.prev) // we can go make the buttons functional by adding an addeventlistner to them &lt;/script&gt; . Recap: . We learned what is a assignment operator | We learned how to use the assignment operator | We learned how to store a value inside a variable using the assignment operator | We experimented with a few examples | . Hacks: . Answer these: . In your own words, briefly explain by writing down what an assignment operator is | In Collegeboard pseudocode, what symbol is used to assign values to variables? | A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? | . Hacks: . Copy the all the html code into a markdown file and run your local server. You will then see a decimal to binary converter near the html code. The problem is that it is not converting the decimal to binary. This is because the variables are not defined properly and it is your job to use the information learned today to fix the converter. Don&#39;t change the css . Bonus (optional): . There&#39;s more than one way to define the variable. List two ways to do it. . Rubric . For .15: . Student has followed directions properly and has the converter working | . For .18: . Student has completed some of the bonus material alongside requirement for 2.7 | . For .20: . Student has completed all of the material, answered thoughtfully, and met requirements for 2.7 | . List and Strings Using Variables- Nathan . Strings . Strings is a series of characters (numbers, letters, etc), one example of a string is your name or your id because strings can contain both numbers and letters. . The following are all examples of strings being used in code, in this case, within print functions. . print(&quot;hello world&quot;) print(&#39;hello&#39;) . hello world hello . Lists . Lists are sequences of elements with each element being a variable. An example of a list can be the names of the students in this classroom. . Features of Lists . The elements within the list can be accessed by index. | Can store various elements | The list is in order | . Example of a list . thanksgivingList = [&quot;cranberry pie&quot;, &quot;casserole&quot;, &quot;mashed potatoes&quot;, &quot;turkey&quot;] print(thanksgivingList) . [&#39;cranberry pie&#39;, &#39;casserole&#39;, &#39;mashed potatoes&#39;, &#39;turkey&#39;] . List Index . An index is an element of a string. Indices typically start with 0, but Collegeboard has the index start at 1. . print(thanksgivingList[1]) #In this case, the index starts at 0, but in collegeboard, the index starts at 1 print(thanksgivingList[-3]) #Python can index from the end, in this case, &quot;turkey&quot; would be index -1 and 3. . casserole casserole . Hacks . Questions . What is a list? | What is an element | What is an easy way to reference the elements in a list or string? | What is an example of a string? | . Hacks . Create a list with indices | Index a part of the list that you created. | Try to index from the end | . Create an index of your favorite foods . Tips: Index starts at 1, Strings are ordered sequences of characters . Extra work: Try to create an index that lists your favorite food and print the element at index 3. More work: Create a list of your favorite foods and create an index to access them. . marks = [&quot;food1&quot;] . Rubric . Creating a list . Shows great knowledge in creating lists | . Indexing . Is able to index both from the start and from the end | . Data Abstraction with Lists - Steven . Data abstraction can be created with lists. . Lists bundle together multiple elements and/or variables under one name are not defined with specified lengths. | The variables that are stored in a list do not have to be limited to one kind of variable. | The user does not need to know how the list stores data (this gives way for data abstraction). | . In the code below, the logic itself works with a list, but the code abstracts it into a sequence of bits in a string (as seen in the input and output). To make this work, the splitbits lists is created and processed. At the end of the code, the result is outputted as a string rather than a list (abstraction). . bits = input(&quot;Input a sequence of bits to invert: &quot;) splitbits = list(bits) for i in range(len(splitbits)): if splitbits[i] == &#39;0&#39;: splitbits[i] = &#39;1&#39; elif splitbits[i] == &#39;1&#39;: splitbits[i] = &#39;0&#39; print(&quot;&quot;.join(splitbits)) . Hacks . The following code is incomplete. Its intended purpose is to increase three numbers, all of which ask for user input, by an amount specified the user. The input code is abstracted, but the actual logic isn&#39;t connected to the abstraction. | . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code in the space below # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in numlist: numlist[i -1] += int(add) print(numlist) . The following provides a rubric for my hacks (scored out of 0.20) . 0.20 - Fully functioning data abstraction with a list | 0.10 - not functioning, but attempt at making a list | 0.00 - not functioning, no evidence of attempt based upon the guidelines | . Managing Complexity with lists - Liav . Long and slow way . By now, everyone should know the &quot;long and slow way&quot; to print a list of something in python It is easy to just assign a value to a single variable | This method is displayed in this example with test scores: | . | . score1 = 95 score2 = 24 score3 = 87 score4 = 92 print(score1, score2, score3, score4) . As you can see, each score is assigned to its relative variable such as &quot;score1 = 95&quot; and then you just print each variable. | However you can make the code segment faster, easier to read, and more efficient... | . Assinging values to one variable . Use square brackets &quot;[]&quot; to store the values of a certain variable, then you can simply print the variable to output your desired list: | . scores = [95, 24, 87, 92] print(scores) . Now instead of having a difference variable and new line of code for each value, the list is simply displayed by assigning each value to a single value that you can now print. | . How lists manage complexity of a program . Simplification . It is much simpler, faster, and easier to code lists this way | Makes the code segment much easier to read | . | Variables . You do not need as many variables, because you can just assign all corresponding values to a single variable | To change a value you don&#39;t have to edit/add/remove an entire variable | . | . Python Quiz . Now everyone should take this short python quiz and screenshot your score. | . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, lunaiwazaki running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program is incorrect! Question: Lists are a form of data ______ is incorrect! Question: Which brackets are used to assign values to a variable to make a list? is incorrect! lunaiwazaki you scored 0/4 . Simplify Foods List . Now simplify this foods list using what you have learned | . food1 = &quot;pizza&quot; food2 = &quot;hot dog&quot; food3 = &quot;sushi&quot; food4 = &quot;strawberry&quot; food5 = &quot;sandwich&quot; print(food1, food2, food3, food4, food5) . Hacks . On a single markdown file: Insert a screenshot of your score on the python quiz | Insert a screenshot of your simplifying of the food list | Why are using lists better for a program, rather than writing out each line of code? | Make your own list the &quot;long and slow way&quot; then manage the complexity of the list | . | . Rubric . In ordere to earn a .20/.20 you must On a markdown post: | make an attempt at the python quiz | Successfully simplify the food list | Answer the question in detail | Provide evidence of your own list that you coded | . | .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/python/2022/11/26/Lesson1-2.html",
            "relUrl": "/jupyter/python/2022/11/26/Lesson1-2.html",
            "date": " • Nov 26, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Final Trimester 1 Editing",
            "content": "Questions . Q1 Behavior of code that multiplies inside a loop . Image . The code segment displays the value of 2(5^3) by initializing result to 2 and then multiplying result by 5 a total of three times. . Related -- . Topic 1.2 . Program&#39;s function and purpose and a programs input and output . Video Notes . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Q16 How information is transmitted on the Internet . Which of the following best explains how messages are typically transmitted over the Internet? . The message is broken into packets. The packets can be received in any order and still be reassembled by the recipient’s device. . Related -- Topic 4.1 . The internet and bandwidth . Video Notes . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Q34 Music instrument lists after assignments . firstList ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . secondList ← [&quot;flute&quot;, &quot;violin&quot;] . thirdList ← [] . thirdList ← firstList . firstList ← secondList . secondList ← thirdList . [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . Related -- . Topic 3.2 . Strings, and examples of data extraction . [] ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] | [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] ← [&quot;flute&quot;, &quot;violin&quot;] | [&quot;flute&quot;, &quot;violin&quot;] ← [] | . Q40 Value displayed by IF ELSE block . Image . -2 | . Something will be displayed no matter what the values of x and y are. . Related -- . Topic 3.6 . Executing outcome based on conditions . Q48 Which variables are equal to 50 after assignments . x ← 25 . y ← 50 . z ← 75 . x ← y . y ← z . z ← x . x and z only . The fourth statement assigns the value 50 to x. The sixth statement assigns the value 50 to z. . Related -- . Topic 3.1 . Variable abstractions and storing data as numbers . 25 ← 50 | 50 ← 75 | 75 ← 25 | . N@TM Review . !()[https://lh3.googleusercontent.com/tmKXv7Sbn6e2R_0rIOwrYiIOcOY5eunfxZsMY6BWueIv1v4zwAskJsXFuT8WYXABct6mZVY6P8Ay0eBIhtksJgfkJ4ehB0Ruwx-RCQ-IL41gYMc0v8o0_jGio9AJUHLEBkB2zRtG3xRAZkqaMo-KMajozq2eFZIzMd5a0IbdQrLvLNGD23d-0DM3XVxoWr8Mw7hHEIr-EwDKj3oEN79l5CxpeZuPsA9dTcAIezKM1zIfhZISg_u0k9Fjklk-5P3mZeoGNyS-hk3IcyhV1DGFhNWJO-QNTo5l7p9AlREXcFuOvrk7RTZSzkkoeUu2mMYwLHHl-fIzbCBQetuh9ghh-6ksZIST0RZ2UQ6gnotaDTU-hLZCh0ArQU1ouboY9bwFrvhdmixIHpdA-6B1wpNljQtDT18ZDNT5VWjv9ZJPsosOVwKK_fA9xpvn_p0qEKD2c8XIosmQlpZ_9iNdFaoG7-sRNBgPnWftb3yPY1-MmBUsBhHpkf13xebOra9lbKoeNRdsdU5HoJzLgqXPZB-8lx_rgXQgImbTgIVMYQFs304V0bUFJKv_tczxiN4T0EHEJo4H0s7cH_tVRKuTEmlyb_aWJxOyXITF_6Q1ZNOGZSXYUyqt3jJ34dWOX237iCisMscs7Y0B45IUrvBMsOSd543NDKk2XDDmEhH9h22T9yPEdyhwnpRLUyQX7n-bnafiGgul08oZaGewieImJ46qwjArk-sAhkf0ez4Ehke-z6U0xZcj11obpnWvQrqNGgtDvBZgPTf20gMatYb0HnitEuYaNCEc9UygAlcSYdrN-VWAQsAxToDds5pR3hM71uouWWjsoiWXJTR1sUZFZUJvBTU4o-IsW9lnK6Gwb0TTnR5kSjA1SFFGsi9EvYDknRI4rPcgVMfcVr3OLZppFmgEDZ5zW3OyGrBjIrkJ6LdmHIHyNcYgQ2AiXUM68WR_Yb5ArSYlFfudrNWYEWKNyHw0=w1194-h1592-no?authuser=0] . NIght at the measuem was an amazing experiecne and I was able to let others see the project that the group made. I was also able to see other peoples projects! Some projects that I really enjoyed was; Ava&#39;s ASB merch website. Their website was able to keep track of stock and see how many in the stock are left. I also really enjoyed Edrick&#39;s calender page which shows what is up next in your schedule. Another amazing project was Tay&#39;s study quiz website where you are able to quiz yourself on the quizes you take and you are able to recive your score. .",
            "url": "https://lunaiwa.github.io/iwazaki/final/2022/11/05/Final-Edit.html",
            "relUrl": "/final/2022/11/05/Final-Edit.html",
            "date": " • Nov 5, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "USA Computing Olympiad",
            "content": "Problem 1. Milk Pails - Bronze . fin = open(&#39;pails.in&#39;, &#39;r&#39;) buck1, buck2, buck3 = map(int, fin.readline().split()) ans = 0 # x and y below take care of all # possible combinations of the two buckets. for x in range(1001): if (buck1 * x) &gt; buck3: break for y in range(1001): current = (buck1 * x) + (buck2 * y) if current &gt; buck3: break ans = max(ans, current) with open(&#39;pails.out&#39;, &#39;w&#39;) as fout: fout.write(str(ans) + &#39; n&#39;) . FileNotFoundError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb Cell 4 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; fin = open(&#39;pails.in&#39;, &#39;r&#39;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; buck1, buck2, buck3 = map(int, fin.readline().split()) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; ans = 0 FileNotFoundError: [Errno 2] No such file or directory: &#39;pails.in&#39; . Diamond Collector .",
            "url": "https://lunaiwa.github.io/iwazaki/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "relUrl": "/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Chess Wireframes",
            "content": "Chess Home Page . Chess Page Wireframes . These are the possible chess wireframes for when the user is looking at the chess set page . . User Page Wireframes . -- .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/18/Chess-Wireframe.html",
            "relUrl": "/planning/2022/10/18/Chess-Wireframe.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Big Idea Notes",
            "content": "Unit 1 . 1.1 : Collaboration . Video 1 . colaboration introduces different views and perspectives and prevents the use of bias | without collaboration many differnt well enjoyed games wouldn&#39;t be here today | communitcation, consensus building, conflict resolution, and negotiation are four most important things | . Video 2 . pair share programing is one way to collaborate in computer science, not only will you be collaborating but you will also be able to edit your work and get help for some problems | think-pair-share is also another way to collaborate in computer science, when you have a problem you can get another&#39;s opinon and work through it together | you can also share your github repository and let others edit your code | . 1.2 : Program Function and Purpose . Video 1 . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Video 2 . in event driven progra, program statements are excluded when triggered, rather than through the sequential flow of contorl | input can come from a user or other programs | program outputs are any data sent from a program to a device. Program output can come in a varitey of forms, such as tactile, audio, visual, or text | program output is usually based on a program&#39;s input or prior state | . Video 3 . program is a collection of program statments that performs a specific task when run by a computer | program is often reffered to a software | code segment is a collection of program statements that is part of program | program needs to work for a variety of inputs and situations | . 1.3 : Program Design and Development . Video 1 . developing program using a development process | design a program and its user interface | program is developed by testing occuring at the micro and macro level | devs refine and revise through testing, feedback, and reflection | . Video 2 . important to acknowledge any code segments that were developed collaborativly or by another source | programs are rarely developed by a solo force and is usally made by a team | . Video 3 . program documentation is a wirtten segment of how this was made, how it should work, and the event | comments are a form of program and is read by people it doesn&#39;t effect the code! | programmers should document their code through the making! | program documention helps developing and mainitaining correct programs when working by yourself or in a teamwork envrioment | not all programing enviroments support comments! | . 1.4 : Identifying and Correcting Errors . Video 1 . logic error is a mistake in algorithim or program that cuases it to behave incorrectly | syntax error is a mistake in the program where rules of programing do not apply (ex: using python in markdown) | run-time error is a mistake in program during execution | program languages define their own runtime errors | overflow error is an error that occurs when a computer attempts to handel a number that is outside of the defined range of value | . Video 2 . you can correct errors using; test cases, hand tracing, visualizations, debuggers, adding extra output statment(s) | . Video 3 . in development process, testing uses defined inputs to ensure algoritim or program is producing the expected outcomes | programmers use the results from testing to revise their algorithms or programs | defined inputs used to test a program should demonstrate the different expected outcomes that are at or just beyond the extremes (minimum and maximum) of input data | program reqirements are needed to identify appropirate definece inputs for testing | . Unit 2 . 2.1 : Binary Numbers . Video 1 . abstraction is process of reducting complexity by focusing on the main idea | hiding details irrelevant to the question at hand | brings together related and useful details, reduces complexity and allows one to focus on the data | grouped to represent abstractions | inclue but not limited to, numebrs, characters, and color | . Video 2 . integers are represented by a fixed number of bits | limits the range of integer values and mathmatical operations | limitation can result in overflow or errors | other program languages provide abstraction limited only by size of the computer&#39;s memory | fixed numeber of bits used to represent real numbers limits the range and mathmatical operations on these values | limitation can result in round-off and other errors | real numbers are represented as approximations in computer storages | . Video 3 . number bases including binary and decimal are used to represent data | binary (base 2) use only combination of the digits zero and one | decimal (base 10) use only combination of the digits 0-9 | . 2.2 : Data Compression . Video 1 . lossy data compression algorithms can usally reduce the number of bits stored or transmitted more than lossless compression algorithms | in situations where quality or ability is used to reconstruct the original is max important | lossless compression algorithims are typically chosen | when minimizing data size or transmission time is max important | lossy compression algoristhims are typically chosen | . 2.3 : Extracting Information from Data . Video 1 . size of data set affects the amount of information that can be extracted from it | large data sets are difficult to process using a single computer and needs or may need parallel systems | scalabiltiy of systems is an important consideration when working with data sets | computationsal capacity of a system affects how the data sets can be porcessed and stored | . Video 2 . metadata are data about data | changes and deletions made to metadata do not change the primary data | metadata are used for finding, organizing, and managing information | metadata can increase the effective use of data or data sets by providing additional information | metadata allow data to be structured and organized | . 2.4 : Using Programs with Data . Video 1 . programs are used in iterative and interactive way when processing information to allow users to gain insight and knowledge about data | programmer can use programs to filter and clean digital data, therby gaining insight and knowlege from data | combining data sources, clustering data, and classifying data are also parts of this process | insight can also be obtained by translating and transforming digitally represented information | patterns can emerge when data is transformed using programs | . Video 2 . -transforming every elements of a data set . filtering a data set | combining or comparing data in some way visualizing a data set through a chart, graph, or other visual represention | . Unit 3 . 3.1 : Variables and Assignments . Video 1 . Video 2 . 3.2 : Data Abstraction . Video 1 . Video 2 . Video 3 . 3.3 : Mathmatical Expressions . Video 1 . Video 2 . Video 3 . 3.4 : Strings . Video 1 . 3.5 : Boolean Expressions . Video 1 . Video 2 . Video 3 . 3.6 : Conditionals . Video 1 . Video 2 . Video 3 . 3.7 : Nested Conditionals . Video 1 . Video 2 . 3.8 : Iteration . Video 1 . Video 2 . Video 3 . 3.9 : Developing Algorithms . Video 1 . Video 2 . Video 3 . 3.10 : Lists . Video 1 . Video 2 . Video 3 . 3.11 : Binary Search . Video 1 . 3.12 : Calling Procedures . Video 1 . Video 2 . 3.13 : Developing Procedures . Video 1 . Video 2 . 3.14 : Libraries . Video 1 . 3.15 : Random Values . Video 1 . Video 2 . 3.16 : Simulations . Video 1 . Video 2 . 3.17 : Algorithmic Efficiency . Video 1 . Video 2 . 3.18 : Undecidable Problems . Video 1 . Unit 4 . 4.1 : The Internet . Video 1 . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Video 2 . internet is a computer network consisting of interconnected netwokrs thst use standard, open (nonproprietary) communitcation protocols | acesss to the internet dependes on the ability to connect a computinf device to an internet connected device | protocol is an agreed-upon set of rules that specify the behavior of a system | protocols used in the internet are open, allowing users to easily connect additional computing devices to the internet | routing on the internet is dynamic, if not specified | scalability of the system is cap for the system to change in size and scale and meet new demands | internet was designed to be scalable | . 4.2 : Fault Tolerence . Video 1 . redundancy in a system often requires additional reasources but can provide the benefit of fault tolerence | redundancy of routing options between two points increases the realiability of the internet | helps scale to more devices and people | . Video 2 . the interent is engineered to be fault-tolerant | with abstractions for routing and transmitting data | redundancy is the inclusiion of extra components that can be used to mitigate failure of a system if other components fail | one way to accomplish network redundancy is by having more than one path between any to connected devices | . 4.3 : Parallel and Distributed Coding . Video 1 . parallel computing consists of parallele portions and a sequential portion | solution that use parallel computing can scale more effectivly than solutions that use sequential computing | distributed computing allows problems to be solved that could not be solved on a single computer | ^ then the processing time or storage needs to be involved | distributed computing allows much larger problems to be solved quicker than they could be solved when using a single computer | when increasing the use of parallel computing in a solution, the efficiency of the solution is still limited by the sequential portion | ^ meaning at some point adding parallel portions will no longer meaningfully increase effciency | . Unit 5 . 5.1 : Benefical and Harmful Effects . Video 1 . people make computing inventions | people complete tasks differently to incorporate new computing inventions | not every computing invention effect is anticipated | single effect can be view as both beneficial and harmful | advances in computing have gereated and increased creativity in different fields: medicne, engineering, communications, and arts | . Video 2 . responsible programmers try to consider uninteneded ways of their computing innovations | ^ potential benefical + harmful effects of the new uses | not possible for a programmer to consider all the ways a computing innovation can be used | rapid sharing of a program or running a program with a large number of users can result in significant impacts beyond inteneded purpose or control of programer | . 5.2 : Digital Divide . Video 1 . internet acess varies between socioeco., geographical, and demographic characteristcs | digital divde refers to differing acess to computing devices and the Internet, based on socioeconomic, geographic, or demographic characteristics | digital divde can affect both groups and individuals | digital divide raises issues of equity, acess, and influence, both globally and locally | digital divde is affected by the actions of individuals, organizations, and governments | . 5.3 : Computing Bias . Video 1 . computing innovations can reflect existing human biasese becuase of biases written into the algorithms | biases in data used by the innovation | programs should take action to reduce bias in algorithms used for computing innovations as a way of combating existing human biases | biases can be embedded at all levels of software development | . 5.4 : Crowdsourcing . Video 1 . widespread acesss to information and public data facilitates the identification of problems | development of solutions and dissemination of results | science has been affected by using distributed and &quot;citizen science&quot; to solve scientific problems | citizen science is scientific research conducted in whole or part by distributed individual | ^many of whom may not be scientists who contribute relevant data to research using their own computing devices | . 5.5 : Legal and Ethical Concerns . Video 1 . open source are programs that are made to be freely available and may be redistributed and modified | open acess is online research output free of any and all restriction on acess and free of many restrictions on use | ^such as copyright or license restrictions | . 5.6 : Safe Computing . Video 1 . Video 2 . Video 3 .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/17/APCS-Notes.html",
            "relUrl": "/notes/2022/10/17/APCS-Notes.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Trimester Final Plan",
            "content": "Outline . The code that will be created is a website that allows the user to be able to see different openings in chess. These openings will be shown by user interactive buttons and different ways you can open on chess. The goal of the website is to help the user become a better chess player by using these different openings provided by the website. Another goal is to allow the user able to see different openings and provide feedback to the website. The website&#39;s name is planned to be called &#39;Rookie&#39; and has a rook as it&#39;s logo. The mock design color&#39;s or design will be changed in the future. . . The sets on the top bar represent the different chess openings that can be played. The moves bar on the right shows the different chess pieces and where they moved on the chess board. The board on the right will show the different chess pieces and where they move. User feedback will be represented below by comments or the like button which will be an image which changes. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/10/Plan-Chnged.html",
            "relUrl": "/planning/2022/10/10/Plan-Chnged.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "API",
            "content": "import http.client conn = http.client.HTTPSConnection(&quot;weatherbit-v1-mashape.p.rapidapi.com&quot;) headers = { &#39;X-RapidAPI-Key&#39;: &quot;4d84578a4bmshef588b2a5b86609p11c974jsnf5b5615ebc33&quot;, &#39;X-RapidAPI-Host&#39;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } conn.request(&quot;GET&quot;, &quot;/forecast/3hourly?lat=35.5&amp;lon=-78.5&quot;, headers=headers) res = conn.getresponse() data = res.read() print(data.decode(&quot;utf-8&quot;)) # key value print try extracting one value . {&#34;country_code&#34;:&#34;US&#34;,&#34;state_code&#34;:&#34;NC&#34;,&#34;data&#34;:[{&#34;timestamp_utc&#34;:&#34;2022-10-10T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:1.42,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:61,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:100,&#34;vis&#34;:28.288,&#34;wind_spd&#34;:0.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-10-10:18&#34;,&#34;ts&#34;:1665424800,&#34;snow&#34;:0,&#34;dewpt&#34;:12,&#34;uv&#34;:1.7,&#34;wind_dir&#34;:39,&#34;ghi&#34;:729.33,&#34;dhi&#34;:111.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:19.8,&#34;app_temp&#34;:19.4,&#34;dni&#34;:880.54,&#34;solar_rad&#34;:158.62384,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-10T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:294,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:38,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015,&#34;clouds&#34;:38,&#34;vis&#34;:38.272,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-10:21&#34;,&#34;ts&#34;:1665435600,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:329,&#34;ghi&#34;:292.24,&#34;dhi&#34;:76.52,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:20.8,&#34;app_temp&#34;:20.3,&#34;dni&#34;:667.87,&#34;solar_rad&#34;:282.43954,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:290.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:7,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:7,&#34;vis&#34;:31.488,&#34;wind_spd&#34;:2.24,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-11:00&#34;,&#34;ts&#34;:1665446400,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:72,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:17.1,&#34;app_temp&#34;:17.1,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.39,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:71,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:2,&#34;vis&#34;:22.288,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:03&#34;,&#34;ts&#34;:1665457200,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:49,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:14,&#34;app_temp&#34;:14,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:285.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.23,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:19.2,&#34;wind_spd&#34;:2.13,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:06&#34;,&#34;ts&#34;:1665468000,&#34;snow&#34;:0,&#34;dewpt&#34;:8,&#34;uv&#34;:0,&#34;wind_dir&#34;:22,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.9,&#34;app_temp&#34;:11.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:3,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.86,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1018,&#34;clouds&#34;:3,&#34;vis&#34;:14.496,&#34;wind_spd&#34;:1.72,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:09&#34;,&#34;ts&#34;:1665478800,&#34;snow&#34;:0,&#34;dewpt&#34;:7.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.7,&#34;app_temp&#34;:9.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.89,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:88,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1019,&#34;clouds&#34;:5,&#34;vis&#34;:14.696,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:12&#34;,&#34;ts&#34;:1665489600,&#34;snow&#34;:0,&#34;dewpt&#34;:7.4,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:354,&#34;ghi&#34;:91.33,&#34;dhi&#34;:45.58,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.3,&#34;app_temp&#34;:9.3,&#34;dni&#34;:406.55,&#34;solar_rad&#34;:91.326904,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1020,&#34;clouds&#34;:0,&#34;vis&#34;:31.2,&#34;wind_spd&#34;:1.79,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:15&#34;,&#34;ts&#34;:1665500400,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:4.3,&#34;wind_dir&#34;:73,&#34;ghi&#34;:627.13,&#34;dhi&#34;:105.12,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:17.8,&#34;dni&#34;:846.66,&#34;solar_rad&#34;:627.13,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:284.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.36,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:37,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.536,&#34;wind_spd&#34;:2.1,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:18&#34;,&#34;ts&#34;:1665511200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.4,&#34;uv&#34;:5.5,&#34;wind_dir&#34;:61,&#34;ghi&#34;:724.09,&#34;dhi&#34;:111.33,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:20.9,&#34;dni&#34;:879.31,&#34;solar_rad&#34;:724.09,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.43,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.577,&#34;wind_spd&#34;:2.15,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:21&#34;,&#34;ts&#34;:1665522000,&#34;snow&#34;:0,&#34;dewpt&#34;:5.3,&#34;uv&#34;:2,&#34;wind_dir&#34;:77,&#34;ghi&#34;:287.08,&#34;dhi&#34;:75.97,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.8,&#34;app_temp&#34;:20.9,&#34;dni&#34;:663.93,&#34;solar_rad&#34;:287.08,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.98,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:46,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:25,&#34;vis&#34;:41.792,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:00&#34;,&#34;ts&#34;:1665532800,&#34;snow&#34;:0,&#34;dewpt&#34;:4.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:16.6,&#34;app_temp&#34;:16.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.44,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:59,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:30.592,&#34;wind_spd&#34;:2.26,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:03&#34;,&#34;ts&#34;:1665543600,&#34;snow&#34;:0,&#34;dewpt&#34;:5.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:70,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:13.3,&#34;app_temp&#34;:13.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.83,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:25,&#34;vis&#34;:23.088,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:06&#34;,&#34;ts&#34;:1665554400,&#34;snow&#34;:0,&#34;dewpt&#34;:5.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:46,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:11,&#34;app_temp&#34;:11,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:277.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:1,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.71,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:25,&#34;vis&#34;:15.896,&#34;wind_spd&#34;:1.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:09&#34;,&#34;ts&#34;:1665565200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:36,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.4,&#34;app_temp&#34;:9.4,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:4,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:3.34,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:92,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:5,&#34;vis&#34;:12.496,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-12:12&#34;,&#34;ts&#34;:1665576000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:55,&#34;ghi&#34;:88.61,&#34;dhi&#34;:44.96,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.2,&#34;app_temp&#34;:9.2,&#34;dni&#34;:400.45,&#34;solar_rad&#34;:88.606995,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.4,&#34;wind_cdir&#34;:&#34;ESE&#34;,&#34;rh&#34;:66,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:5,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:15&#34;,&#34;ts&#34;:1665586800,&#34;snow&#34;:0,&#34;dewpt&#34;:12.2,&#34;uv&#34;:4.1,&#34;wind_dir&#34;:110,&#34;ghi&#34;:622.79,&#34;dhi&#34;:104.87,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:18.7,&#34;app_temp&#34;:18.3,&#34;dni&#34;:845.43,&#34;solar_rad&#34;:601.5654,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:1.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:53,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.66,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1021,&#34;datetime&#34;:&#34;2022-10-12:18&#34;,&#34;ts&#34;:1665597600,&#34;snow&#34;:0,&#34;dewpt&#34;:11.7,&#34;uv&#34;:5.4,&#34;wind_dir&#34;:127,&#34;ghi&#34;:718.85,&#34;dhi&#34;:111.05,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:21.3,&#34;dni&#34;:878.05,&#34;solar_rad&#34;:695.1358,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.8,&#34;clouds_hi&#34;:4,&#34;clouds_low&#34;:9,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:2.3,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:54,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1011,&#34;clouds&#34;:9,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-12:21&#34;,&#34;ts&#34;:1665608400,&#34;snow&#34;:0,&#34;dewpt&#34;:12.3,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:154,&#34;ghi&#34;:281.97,&#34;dhi&#34;:75.41,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22,&#34;app_temp&#34;:21.6,&#34;dni&#34;:659.94,&#34;solar_rad&#34;:272.25607,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:74,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:2.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:18,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.91,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1018,&#34;datetime&#34;:&#34;2022-10-13:00&#34;,&#34;ts&#34;:1665619200,&#34;snow&#34;:0,&#34;dewpt&#34;:12.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:138,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:19.5,&#34;app_temp&#34;:19.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:100,&#34;wind_gust_spd&#34;:9.7,&#34;wind_cdir&#34;:&#34;S&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.79,&#34;wind_cdir_full&#34;:&#34;south&#34;,&#34;slp&#34;:1017,&#34;datetime&#34;:&#34;2022-10-13:03&#34;,&#34;ts&#34;:1665630000,&#34;snow&#34;:0,&#34;dewpt&#34;:13.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:169,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.2,&#34;app_temp&#34;:17.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:99,&#34;wind_gust_spd&#34;:8.52,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.74,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-13:06&#34;,&#34;ts&#34;:1665640800,&#34;snow&#34;:0,&#34;dewpt&#34;:14.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:137,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.3,&#34;app_temp&#34;:17.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T09:00:00&#34;,&#34;pop&#34;:70,&#34;ozone&#34;:287.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:80,&#34;clouds_mid&#34;:48,&#34;wind_gust_spd&#34;:11.52,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1003.5,&#34;clouds&#34;:80,&#34;vis&#34;:4.644,&#34;wind_spd&#34;:2.59,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1011,&#34;datetime&#34;:&#34;2022-10-13:09&#34;,&#34;ts&#34;:1665651600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:159,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:1.6875,&#34;weather&#34;:{&#34;code&#34;:520,&#34;description&#34;:&#34;Light shower rain&#34;,&#34;icon&#34;:&#34;r04n&#34;},&#34;temp&#34;:17.5,&#34;app_temp&#34;:17.5,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T12:00:00&#34;,&#34;pop&#34;:35,&#34;ozone&#34;:287.8,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:98,&#34;clouds_mid&#34;:88,&#34;wind_gust_spd&#34;:7.1,&#34;wind_cdir&#34;:&#34;SSW&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1002,&#34;clouds&#34;:98,&#34;vis&#34;:11.968,&#34;wind_spd&#34;:1.92,&#34;wind_cdir_full&#34;:&#34;south-southwest&#34;,&#34;slp&#34;:1010,&#34;datetime&#34;:&#34;2022-10-13:12&#34;,&#34;ts&#34;:1665662400,&#34;snow&#34;:0,&#34;dewpt&#34;:18.6,&#34;uv&#34;:0.5,&#34;wind_dir&#34;:205,&#34;ghi&#34;:85.88,&#34;dhi&#34;:44.33,&#34;precip&#34;:0.4375,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:18.9,&#34;app_temp&#34;:19.4,&#34;dni&#34;:394.19,&#34;solar_rad&#34;:53.639946,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:89,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.12,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-13:15&#34;,&#34;ts&#34;:1665673200,&#34;snow&#34;:0,&#34;dewpt&#34;:18.3,&#34;uv&#34;:1.3,&#34;wind_dir&#34;:223,&#34;ghi&#34;:618.42,&#34;dhi&#34;:104.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:20.5,&#34;app_temp&#34;:20.9,&#34;dni&#34;:844.18,&#34;solar_rad&#34;:133.56374,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T18:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:9,&#34;wind_gust_spd&#34;:9.41,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.1,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1006,&#34;datetime&#34;:&#34;2022-10-13:18&#34;,&#34;ts&#34;:1665684000,&#34;snow&#34;:0,&#34;dewpt&#34;:17.9,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:224,&#34;ghi&#34;:713.59,&#34;dhi&#34;:110.77,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:23.8,&#34;app_temp&#34;:24,&#34;dni&#34;:876.77,&#34;solar_rad&#34;:145.37724,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T21:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:292.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:29,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.51,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:997,&#34;clouds&#34;:29,&#34;vis&#34;:21.056,&#34;wind_spd&#34;:4.46,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1005,&#34;datetime&#34;:&#34;2022-10-13:21&#34;,&#34;ts&#34;:1665694800,&#34;snow&#34;:0,&#34;dewpt&#34;:18.2,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:225,&#34;ghi&#34;:276.89,&#34;dhi&#34;:74.85,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22.5,&#34;app_temp&#34;:22.8,&#34;dni&#34;:655.91,&#34;solar_rad&#34;:259.41742,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T00:00:00&#34;,&#34;pop&#34;:45,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:44,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.01,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:94,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:44,&#34;vis&#34;:11.16,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1006.5,&#34;datetime&#34;:&#34;2022-10-14:00&#34;,&#34;ts&#34;:1665705600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:251,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.5625,&#34;weather&#34;:{&#34;code&#34;:301,&#34;description&#34;:&#34;Drizzle&#34;,&#34;icon&#34;:&#34;d02n&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:18.8,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:296,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:99,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.43,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:79,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:999.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.94,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1007.5,&#34;datetime&#34;:&#34;2022-10-14:03&#34;,&#34;ts&#34;:1665716400,&#34;snow&#34;:0,&#34;dewpt&#34;:13.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.6,&#34;app_temp&#34;:17.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.92,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.53,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-14:06&#34;,&#34;ts&#34;:1665727200,&#34;snow&#34;:0,&#34;dewpt&#34;:10.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:328,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:14.3,&#34;app_temp&#34;:14.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:300.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:10.41,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1002.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.76,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1010.5,&#34;datetime&#34;:&#34;2022-10-14:09&#34;,&#34;ts&#34;:1665738000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:312,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.6,&#34;app_temp&#34;:11.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:298.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:11.6,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1004.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.98,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1012.5,&#34;datetime&#34;:&#34;2022-10-14:12&#34;,&#34;ts&#34;:1665748800,&#34;snow&#34;:0,&#34;dewpt&#34;:3.6,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:315,&#34;ghi&#34;:83.16,&#34;dhi&#34;:43.69,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:387.77,&#34;solar_rad&#34;:83.16,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.61,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.03,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-14:15&#34;,&#34;ts&#34;:1665759600,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.4,&#34;uv&#34;:4.2,&#34;wind_dir&#34;:317,&#34;ghi&#34;:614.03,&#34;dhi&#34;:104.35,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:16.1,&#34;app_temp&#34;:16.1,&#34;dni&#34;:842.9,&#34;solar_rad&#34;:614.03,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:302.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.02,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:21,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1005.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:5.71,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1013.5,&#34;datetime&#34;:&#34;2022-10-14:18&#34;,&#34;ts&#34;:1665770400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.3,&#34;uv&#34;:5.2,&#34;wind_dir&#34;:311,&#34;ghi&#34;:708.34,&#34;dhi&#34;:110.48,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.3,&#34;app_temp&#34;:16.8,&#34;dni&#34;:875.48,&#34;solar_rad&#34;:708.34,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:301,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.21,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.81,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014,&#34;datetime&#34;:&#34;2022-10-14:21&#34;,&#34;ts&#34;:1665781200,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.9,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:317,&#34;ghi&#34;:271.86,&#34;dhi&#34;:74.28,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:17.9,&#34;app_temp&#34;:17.9,&#34;dni&#34;:651.84,&#34;solar_rad&#34;:271.86,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:305.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.57,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016.5,&#34;datetime&#34;:&#34;2022-10-15:00&#34;,&#34;ts&#34;:1665792000,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:12.2,&#34;app_temp&#34;:12.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:311,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:36,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.24,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-15:03&#34;,&#34;ts&#34;:1665802800,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:351,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:307,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.3,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:40,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1011.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.17,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1020,&#34;datetime&#34;:&#34;2022-10-15:06&#34;,&#34;ts&#34;:1665813600,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:354,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:8.2,&#34;app_temp&#34;:8.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:306,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7,&#34;wind_cdir&#34;:&#34;N&#34;,&#34;rh&#34;:43,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1012.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.1,&#34;wind_cdir_full&#34;:&#34;north&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-10-15:09&#34;,&#34;ts&#34;:1665824400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:3,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:4.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:309.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.4,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.4,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-10-15:12&#34;,&#34;ts&#34;:1665835200,&#34;snow&#34;:0,&#34;dewpt&#34;:-2.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:25,&#34;ghi&#34;:80.44,&#34;dhi&#34;:43.04,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:5.1,&#34;dni&#34;:381.17,&#34;solar_rad&#34;:80.44,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:310.8,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:33,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1014.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-15:15&#34;,&#34;ts&#34;:1665846000,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.3,&#34;uv&#34;:4,&#34;wind_dir&#34;:57,&#34;ghi&#34;:609.61,&#34;dhi&#34;:104.08,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:14.8,&#34;app_temp&#34;:14.8,&#34;dni&#34;:841.6,&#34;solar_rad&#34;:609.6098,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T11:00:00&#34;}],&#34;lon&#34;:-78.5,&#34;lat&#34;:35.5,&#34;timezone&#34;:&#34;America /New_York&#34;,&#34;city_name&#34;:&#34;Four Oaks&#34;} .",
            "url": "https://lunaiwa.github.io/iwazaki/api/2022/10/10/API.html",
            "relUrl": "/api/2022/10/10/API.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Sociology Questions",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/06/Sociology-Questions.html",
            "relUrl": "/notes/2022/10/06/Sociology-Questions.html",
            "date": " • Oct 6, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Poster Draft and Final",
            "content": "Poster Ideas and Draft . Want to add different steps . Give Instructions | Plan Sprints | Assign Jobs | Assign Weekly work | Sprint | Daily Scrum + Meeting and Planning | Finished | . Got poster approved but then needs to change finished into iterate or repreat since we always use these steps for success! Need to change how the words are arranged in the numbers to make it asthetically pleasing . . Finished and added in color (blue and green)! Changed the way where the words were in the numbers! .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/03/Poster.html",
            "relUrl": "/planning/2022/10/03/Poster.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Errors and How to Correct them in Code",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . Determines where the alphabet is in the loop . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 0 letter in the alphabet . When adding in a letter you can find where the letter is in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 0 letter in the alphabet . changing outcome to odd numbers . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . outputs 0-10 . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . 0-10 using the loops .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Errors-In-Code.html",
            "relUrl": "/errors/2022/10/03/Errors-In-Code.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Error Documentation",
            "content": "Questions in Errors . What errors may arise in your project? . Errors that may arise are the frontend not showing what it might need or the backend not performing as it should! . Make sure to document any bugs you encounter and how you solved the problem. . Most bugs might be a changed letter or number error in the code, another error that might be encountered is missing lines of code! . What are “single” tests that you will perform on your project? Or, your part of the project? . Single tests that might be performed on the project is the frontend testing and seeing if the user see what is needed and not the code. . Errors Documentation . 1.ERROR 2.ERROR 3.404 . Error Challenge . What are some ways to (user) error proof this code? . First add in a single test for the expectation, then test input and output, run the test!!! . The code should be able to calculate the cost of the meal of the user . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) if item == &quot;fries&quot;: total = 1.99 if item == &quot;burger&quot;: total = 3.99 if item == &quot;drink&quot;: total = .99 #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . # prices of the different meals menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0.0 current_order = [] # order of the user # this is where the user prints the order print(&quot;Menu:&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) item = input(&quot;Select an Item&quot;) item = item.lower() while item in menu.keys(): quantity = float(input(&quot;How Many&quot;)) current_order.append(str(item) + &quot; X &quot; + str(quantity)) total += (menu[item] * quantity) print(str(int(quantity)) + &quot; &quot; + item + &quot;(s)&quot; + &quot; added&quot;) # user orders more or finishes order item = input(&quot;Would you like to add more or finish order &#39;done&#39;&quot;) item = item.lower() #order is being printed print(&quot;Order:&quot;) print(current_order) print(&quot;Price:&quot;) print(&quot;$&quot; + str(round(total,2))) # single item code # if item == &quot;burger&quot; or item == &quot;fries&quot; or item == &quot;drink&quot;: # print(&quot;! The total of the order is&quot;, item, &quot;will be &quot;,menu[item]) # else: # print(&quot;Try again!&quot;) . Menu: burger $3.99 fries $1.99 drink $0.99 4 burger(s) added 19 fries(s) added 2 drink(s) added Order: [&#39;burger X 4.0&#39;, &#39;fries X 19.0&#39;, &#39;drink X 2.0&#39;] Price: $55.75 .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Error-Documentation.html",
            "relUrl": "/errors/2022/10/03/Error-Documentation.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "AP Prep Multiple Choice",
            "content": "AP Practice Screen Shot . . Confusing Questions and Understanding . Week 6 Quiz . Collaboration Quiz - 100% . The questions were easy to understand since we were already implementing these things and activities into our daily work as a SCRUM team! :) . Program Design and Development Quiz - 33% . Documentation for Procedure with a loop:odd numbers then even are printed!! Becuase the count starts at 1 and increases every 2 making the count odd!! Then the loop is terminated when it is at max. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Program Function and Purpose Quiz (MCQs) - 50% . Behavior of code that multiplies inside a loop: I need to work on figuring out loop code! . Correct first portion which ia 2(5^3) but the second part is wrong where it needs to be multiplying the result by 5 3 times! . &gt; value displays when y=true and when x is negative . Week 7 Quiz . Identifying and Correcting Errors Quiz . . Instead of changing line 1 to IF(score + penalty &lt; 0) change the lines 3 and 7 | . Check plus is displayed as intended so the code will not dispkay the numbers 8 and 7 | The Internet Quiz . Correct first portion but the packets can be recived in any order and can be reassembled . | Instead of being acessed by a data stream it is acessed by a network . |",
            "url": "https://lunaiwa.github.io/iwazaki/ap/2022/10/02/AP.html",
            "relUrl": "/ap/2022/10/02/AP.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "SCRUM Team Project",
            "content": "SCRUM Team Roles . Each team member is given a role and assigns themselfs tasks to do before the next Daily Scrum meet. . Roles . These roles were given to each teammeber based on their performance for certain tasks and/or leadership in the team. Ethan Tran is the Scrum Leader who helps the team remain organized while also managing the lengths of team sprints. Parav Salaniwal and Rohin Sood are responsible for the backend development, both of them are responsible for maintaining, testing, and debugging the backend. Luna and Taiyo Iwazaki are responsible for the front end development, they are responsible for the design and structure of the website which the user sees. Below is a visual of the scrum process. . . Project CS CONNECT . Purpose . We are creating a website that allows its users to connect with others! You can see other user&#39;s accounts and posts that they make. Each post contains something about them which others can connect to. Users can like another&#39;s post if they find it relatable to them. Down below is an unfinished mock up so the coloring or format will be changed in the future! . .",
            "url": "https://lunaiwa.github.io/iwazaki/scrum/2022/09/25/Scrum-Team.html",
            "relUrl": "/scrum/2022/09/25/Scrum-Team.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Stress, Science, and Choice Habit Making",
            "content": "What? . What kinds of goals and habits do happy people have? 9:34--&gt;cont. . Physcology and the Good Life . most students are too stressed to enjoy life and do life | ie. not being able to enjoy a book | even Yale wants students to perform | lots of lack of performance in class | . Classroom Habits . wasting whole day and big pile-up of homework | being an active listener and taking notes or going along with the class | . Take Aways . Most students don&#39;t spen their time wisley in class and end up having to stress over it during the weekend. Using the time given in class will allow a student to be more successful and happier. Without that much work outside of class students will be able to spend more time doing what they love and be less stressed. Being able to balence life and school is difficult but, when you are able to have a perfect harmony between both you can enjoy life more. Goals and habits most people have to acheive this are, being able to do the most work they have when they have the oppertunity to, and not wasting their time and save it for later. And second goal most people have is, to be able to hold onto any oppertunity they are given and to take them and use them wisley (do their work when they are given the oppertunity to in class). Habits most happy people have are to be happy and use the time they have to do somthing they really enjoy then doing somthing that would just waste their time. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/15/Human-Day.html",
            "relUrl": "/notes/2022/09/15/Human-Day.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "APCSP Test Prep",
            "content": "Take Notes . Whatever the teacher says is helpful and vocab words are important to use during code. The vocab words can also be helpful in the MC and are helpful during the trimester | Do practice testing and time them to prep for the real AP test to simulate the situation | Creating tasks that are unique and creative and not just normal | Looking at past examples of other works form other students that have recived a 5 on the Ap test | REVIEW, REVIEW REVIEW | . Task Ideas . any create game that isn&#39;t used (everyone typically uses GPA calculator) | don&#39;t use a basic game like hang man or anything do somthing out of the box | do a game that is simple yet creative!!! | .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/12/AP-Testing-Prep.html",
            "relUrl": "/planning/2022/09/12/AP-Testing-Prep.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Performance Task Planning/Draft",
            "content": "Purpose . Creating awarness of other running athleates and gaining more traction to running as a sport | Bringing other athleates from other sports into cross country and track becuase it can help them inprove in their other sport | Helping those who don&#39;t have resources to help them run by repourposing old running shoes and making them look new | Donating old or new running shoes to those in need of shoes or in need of shoes for their sport | Saftey, bringing different exercises and stretches on the website to help those experiencening shinsplints ect. to help them find out what stretch, exercise, or help they might need for their issue | . Initial Thougts . Using all of the team memebers different coding skills this website can be able to work as a athletic website in a whole. My web design can help make the website look less boring and have videos or images and colors to direct athletes to different pages of the website. Taiyo, who is also in cross country and track can add in his input and help bring real facts onto this website. He can also give us experience as to his sport nd how he deals with problems when running. . My Code . I learned a lot of things this first half of the trimester and can use those ideas to help pull this website together! I mainly explored in the section of web design hence my page having lots of pictures and different colors. To make this website more complete however I need to learn how to add in more tabs and maybe add in a drop down page. I also should learn how to make more interactable items or programs onto the page to make it more user friendly and attact more people to the website. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/11/Performance-Task-Planning.html",
            "relUrl": "/planning/2022/09/11/Performance-Task-Planning.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Findings and New App",
            "content": "Outline - compsci vocab terms . creating a app that has a quiz focusing on the current vocab words | has a purple theme to match the theme of my website and logo | uses different ways to input an answer | has a &quot;fail&quot; and &quot;winning&quot; page | has three questions to make it simple | . Building . Building the app was easier then I thought it would be in the begining. Unlike other codes I have done so far the website had premade codes whcih I used to create the app. I mostly used the &quot;OnEvent&quot;, &quot;Console&quot;, and &quot;setscreen&quot; buttons to creat my quiz. The quiz is made of computer science vocab that we have learned these past weeks. The terms I used are my favorite terms and ones we use most in the class. I also added in a meme if you use the slider in the &quot;fail&quot; screen. It&#39;s a really hidden one. I tried to use different ways to input an answer like the bubble buttons and just clicking the box with the answer in it. I had a theme that matched my website logo and even put the logo in the front. Adding pictures was really nice too and it was easier then the coding way becuase I could just add them from my computer or use the image address. . Link To App on Web . https://studio.code.org/projects/applab/pK0X670gjhU8EmO0NMbaJigSTuvGsCZCO_xMq3SiLls . Finidings . Using the code.org is easier then using Python and other coding programs because the blocks act as a premade coding system. Not only are the blocks helpful to use but you can also veiw the code in the normal format by just clicking a button. This website allows for me and others to easily create different apps and programs by just putting different blocks together. The website also allows you to see what the finished product might look like on the left side of the screen. Any program that you have made can also be run and tested by just the click of a button. Images can be easily imported into the program. This is also easily accessable since this whole program can be run in your own web browser. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/11/Findings-And-New-App.html",
            "relUrl": "/notes/2022/09/11/Findings-And-New-App.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Vocab Notes",
            "content": "Vocabulary . input = instructions given to a computer | sequence = several lines of code | output = infromation computer gives | key -&gt; value | variables = way to name, store data, and reference data | lists and dictionaries = variable with extended fetures for storing + retrieving data | lists = [] the square brackets for grouping and ordering | dictionaries = {} curley brackets for grouping into key-value relationships | data extraction = extracting data using things such as infodb which is data (not a procedure) | . Linux and Ubuntu . pwd = print directory | mkdir = make directory | cd = change directory | ls = list directory | def = procedure | td = table data | print = to write out | . Git Vocab . &quot;git clone&quot; makes local Git repo (decentralized) from cloud (GitHub/Git) | &quot;git commit&quot; makes snapshot of original parent on local database | &quot;git push&quot; | . Collaboration . team = people that come together to work together! | .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/05/Vocab-Notes.html",
            "relUrl": "/notes/2022/09/05/Vocab-Notes.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Variable . Variables have types :string, integer, and float. Lists and Dictionaries is a key type! . name = &quot;Luna Iwazaki&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) print() # variable of type float score = 3.00 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Luna Iwazaki &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 3.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Luna Iwazaki&#39;, &#39;age&#39;: 16, &#39;score&#39;: 3.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luna Iwazaki &lt;class &#39;str&#39;&gt; . Dictionaires . infoDb = [] # Append to List a Dictionary of key/values infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;November 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, &quot;Shapes&quot;: [&quot;heart&quot;, &quot;circle&quot;, &quot;star&quot;] }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemebr 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, &quot;Shapes&quot;: [&quot;square&quot;, &quot;circle&quot;, &quot;triangle&quot;] }) # Print the data structure print(infoDb) . [{&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]}, {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]}] . Loop Output . List printing . def for_loop(): print(&quot;For loop output n&quot;) for record in infoDb: print(record) for_loop() . For loop output {&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]} {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]} . Loops and Index . def print_data(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Game&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Shapes: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Shapes&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop with index output n&quot;) length = len(infoDb) #figures out the length of the list infoDb (which is 2 because there are 2 dictionaries in the list) ran = range(length) #defines ran as the range of the length. (this is 0 and 1 because the length is 2) for index in reversed(ran): #index is 0 and 1 so it takes the indexes of infoDb. 0 would be the first dictionary and 1 would be the second. reversed prints them as 1 0 instead of 0 1 print_data(infoDb[index]) for_loop() . For loop with index output Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star . While Loop Output . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(infoDb): #length is 2 so while i is less than, it will keep printing record = infoDb[i] #defines the record as the index of the list print_data(record) #prints that index using the formatted print function i += 1 #adds 1 and returns to the top till i is no longer &lt;2 return while_loop() . While loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Recursive Loop . def recursive_loop(i): if i &lt; len(infoDb): #ensures the code stops after it recurses through all the indexes since length determines amount of indexes record = infoDb[i] #defines record as the index of infoDb print_data(record) #prints using the formatted print function recursive_loop(i + 1) #adds 1 to the original index and returns until i is no longer &lt;2 return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Add-Search-Delete . infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, }) def print_data2(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Favorite Game:&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print() def data_entry(): #defining the function that asks for user input Firstname = input(&quot;What is your firstname?&quot;) Lastname = input(&quot;What is your lastname&quot;) DOB = input(&quot;When is your birthday&quot;) Email = input(&quot;What is your Email&quot;) Movie = input(&quot;What is your favorite game?&quot;) Residence = input(&quot;Where do you live?&quot;) infoDb.append({ #appends the user input to the dictionary &quot;FirstName&quot;: Firstname, &quot;LastName&quot;: Lastname, &quot;DOB&quot;: DOB, &quot;Email&quot;: Email, &quot;Residence&quot;: Residence, &quot;Fav_Game&quot;: Movie, }) def search_data(firstname): for record in infoDb: if record[&quot;FirstName&quot;] == firstname: #compares the already existing name to the name inputted with the firstname variable return record return NULL def data_delete(firstname): record = search_data(firstname) #defines record as the name inputted with the search function if (record != NULL): #if the record doesn&#39;t equal null (does it exist?) then the next line removes it infoDb.remove(record) print(firstname, &quot;has been deleted!&quot;) else: print(&quot;Record not found!&quot;) def main(): Continue = True #defining continue as true while Continue: lol = input(&quot;What would you like to do (add/search/delete, type no if you want to exit)?&quot;) if lol == &quot;no&quot;: print(&quot;Come back again!&quot;) Continue = False elif lol == &quot;add&quot;: data_entry() elif lol == &quot;search&quot;: firstname = input(&quot;Who do you want to search (firstname)?&quot;) record = search_data(firstname) #defines record as the input &quot;name&quot; and runs it through the search function print_data2(record) elif lol == &quot;delete&quot;: firstname = input(&quot;Who do you want to delete(firstname)&quot;) data_delete(firstname) else: print(&quot;Invalid input. Please try again&quot;) length = len(infoDb) #defines length as the number of records print(&quot;Total Number of Records: &quot;, length) for record in infoDb: print_data2(record) main() . NameError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 15 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; &#34;FirstName&#34;: &#34;Luna&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; &#34;DOB&#34;: &#34;Novemeber 19&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; &#34;Residence&#34;: &#34;San Diego&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Snake&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; &#34;Email&#34;: &#34;lunaiwazaki@gmail.com&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; &#34;FirstName&#34;: &#34;Taiyo&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, (...) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Valorent&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; def print_data2(d_rec): #formatting NameError: name &#39;infoDb&#39; is not defined . Quiz . questions = 5 correct = 0 print(&quot;Take this quiz to test your vocab!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): print(&quot;Correct!&quot;) global correct correct += 1 else: print (&quot;Incorrect!&quot;) return msg Q1 = question_and_answer(&quot;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&quot;, &quot;instructions given to a computer&quot;) Q2 = question_and_answer(&quot;What is a squence? t a line of code t several lines of code t a button&quot;, &quot;several lines of code&quot;) Q3 = question_and_answer(&quot;What is an output? t information a computer gives t a computer tab t going outside&quot;, &quot;information a computer gives&quot;) Q4 = question_and_answer(&quot;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&quot;, &quot;way to name, store data, and reference data&quot;) Q5 = question_and_answer(&quot;What are lists? t something for the grocery t the square brackets for grouping and ordering t a square&quot;, &quot;the square brackets for grouping and ordering&quot;) print(f&#39;You scored {correct} /5 correct answers!&#39;) Quiz = { &quot;Question 1&quot;: Q1, &quot;Question 2&quot;: Q2, &quot;Question 3&quot;: Q3, &quot;Question 4&quot;: Q4, &quot;Question 5&quot;: Q5 } print(&quot;Here is a record of your quiz answers:&quot;,Quiz) . Take this quiz to test your vocab! Question: What is the definition of INPUT? instructions given to a computer computer paper paper instructions Answer: instructions given to a computer Correct! Question: What is a squence? a line of code several lines of code a button . KeyboardInterrupt Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in &lt;cell line: 21&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=17&#39;&gt;18&lt;/a&gt; return msg &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; Q1 = question_and_answer(&#34;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&#34;, &#34;instructions given to a computer&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; Q2 = question_and_answer(&#34;What is a squence? t a line of code t several lines of code t a button&#34;, &#34;several lines of code&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; Q3 = question_and_answer(&#34;What is an output? t information a computer gives t a computer tab t going outside&#34;, &#34;information a computer gives&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; Q4 = question_and_answer(&#34;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&#34;, &#34;way to name, store data, and reference data&#34;) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in question_and_answer(prompt, answer) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; def question_and_answer(prompt, answer): &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print(&#34;Question: &#34; + prompt) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; msg = input() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; print(&#34;Answer: &#34; + msg) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; if answer == msg.lower(): File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1177, in Kernel.raw_input(self, prompt) 1173 if not self._allow_stdin: 1174 raise StdinNotImplementedError( 1175 &#34;raw_input was called, but this frontend does not support input requests.&#34; 1176 ) -&gt; 1177 return self._input_request( 1178 str(prompt), 1179 self._parent_ident[&#34;shell&#34;], 1180 self.get_parent(&#34;shell&#34;), 1181 password=False, 1182 ) File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1219, in Kernel._input_request(self, prompt, ident, parent, password) 1216 break 1217 except KeyboardInterrupt: 1218 # re-raise KeyboardInterrupt, to truncate traceback -&gt; 1219 raise KeyboardInterrupt(&#34;Interrupted by user&#34;) from None 1220 except Exception: 1221 self.log.warning(&#34;Invalid Message:&#34;, exc_info=True) KeyboardInterrupt: Interrupted by user .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/09/05/Lists-and-Dictionaries.html",
            "relUrl": "/python/2022/09/05/Lists-and-Dictionaries.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Alumni Panel Event",
            "content": "Questions and Answers . Q: What did Computer Science make you relize? . C- can code well and did some 3d modeling, though from other organizations like robotics he knew that he wasn&#39;t as great as his competetors . A- always did coding and as a young kid really enjoyed to code CSA really applied to him and he took time to reflect on what he wanted to do . M- didn&#39;t really like compsci as much as most people but found it useful when she interned ans solidified the relization that you would need to learn programing. (she is C&#39;s twin sister) . AL- always artsy and did buisness she now does cognitive which is like phsycology and compsci and she wanted to do web science and took the skills she learned from the CSP class . N- liked compsci when she was younger and when she entered middle school and into high school she started to take it serious, when she was making a program to complie data about Covid-19, it was a pivitol moment for her since she relized she could use these skill in the real world . Q: Some big challeneges that you can face when doing Computer Science . C- keeping motivation, always when programming he got error messages, but there are always answers on the internet, and have disipline . A- egos in the classroom, compsci majors have big egos and it is fustrating, focus on your own path &quot;Steve Jobs beats you 100 out of 100 times&quot; . AN- theory, structures and didn&#39;t really think about it but it is hard transitioning from high school computer science into college computer science . M- finding motivation, someone is always better, smart team members at her inter they hired and wanted a website to be made, specific project and purpose is helpful to learn, syntax was fustrating, google can answer all of your syntax problems . AL- starting and temptation to BS, always have a mindset to go above and beyond then do cookie cutter jobs . N- getting started in a new area, liked to structure, not always have an organized and do things to start coding . Q: Any PBL senarios [project based learning] . C- UCSD always has 1 hands on as a freshman and 1 hands on as a senior, problem solving, designing, and programing, SCRUM and agile flow, PBL won&#39;t go away still will show up in learning . AN- would kinda go away mix of PBL and fun but, PBL is still larger involved in mostly the UCs, and probably if you are taking the compsci course it will show up there . M- both in class and out of class, there are 200+ people in the lecture hall to study in groups and work with others in a larger sized class since you can&#39;t really ask questions. Structured in a way of sprints learning good to get experience beforehand. Many intern hires don&#39;t expect them to know anything so ask questions! . Takeaways and Insights from event . Not only is coding used in the classroom but it can be taken outside and used in many different senarios that you may not think of. Many of the allumni take their coding outside and even use it in their internships and or jobs they work at. Not all of them may have an inspiration for coding but they all have relized that coding will help them in their future and depending how they use it is now up to them! .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/08/29/Extra-Credit-Event.html",
            "relUrl": "/notes/2022/08/29/Extra-Credit-Event.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "APCSP Quiz",
            "content": "True or False . QandA = [ &quot;1. True or False, Def is a key word in Python that defines a function&quot;, &quot;True&quot;, &quot;2. True or False, In Python anatomy of you will NOT be importing libraries and functions?&quot;, &quot;False&quot;, &quot;3. True or False, Hello world is a string literal?&quot;, &quot;True&quot;, &quot;4. True or False,?&quot;, &quot;Answer&quot;, &quot;5. True or False, Input and Output in Jupyter Notebook Input is NOT in line with Output?&quot;, &quot;True&quot;, &quot;6. True or False, an if expression is not evaluated for true or false&quot;, &quot;False&quot;, &quot;7. True or False, return command in function does not return msg input by user&quot;, &quot;False&quot;, &quot;8. True or False, false takes branch of code directly under else command&quot;, &quot;True&quot;, &quot;9. True or False, correct += 1 is NOT the way to add one to the score&quot;, &quot;False&quot;, &quot;10. True or False,?&quot;, &quot;Answer&quot;, ] #total points and using new quiz var points = 0 current = 0 quiz = 1 print (&quot;Welcome to my true or false quiz!&quot;) #Using while lets me loop function while quiz &lt; 11: question = input (QandA[current]) if question == QandA[current+1]: print (&quot;That&#39;s correct!&quot;) points = points +1 current = current +2 else: print (&quot;Sorry, that is incorrect!&quot;) points = points -1 current = current -2 quiz = quiz +1 #Final Message print (&quot;You got &quot; + str(current) + &quot;/&quot; + str(len(QandA)) + &quot; correct&quot;) . Welcome to my true or false quiz! . Quiz . score = 0 # Question 1 answer1 = input(&quot;What does Def do in a function? na. nothing nb. defines a function nc. sudo code nd. changes directory nAnswer: &quot;) if answer1 == &quot;b&quot; or answer1 == &quot;defines a function&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: defines a function.&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 2 answer2 = input(&quot;What is Python3 na. A type of snake nb. A programming language nc. A google game nd. Javascript nAnswer: &quot;) if answer2 == &quot;b&quot; or answer1 == &quot;A programming language&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: A programming language&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 3 answer3 = input(&quot;What is a sequence? na. Two or more lines of code nb. A line of code nc. multiple words nd. I dont know nAnswer: &quot;) if answer3 == &quot;a&quot; or answer1 == &quot;Two or more lines of code&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: Two or more lines of code&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) #Final Message if score &lt;= 1: print (&quot;Your total score is:&quot;, score, &quot;- That&#39;s OK&quot;) elif score == 2: print (&quot;Your total score is:&quot;, score, &quot;- Nice Job&quot;) else: print (&quot;Your total score is:&quot;, score, &quot;-AMAZING!&quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/html/2022/08/26/Quiz.html",
            "relUrl": "/html/2022/08/26/Quiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Installation Check",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /Applications/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.2.0 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h6e9494a_0 conda-forge conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.15.1 pypi_0 pypi ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 python_abi 3.9 2_cp39 conda-forge pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.15.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/sony/Library/Jupyter/kernels/bash javascript /Users/sony/Library/Jupyter/kernels/javascript python2 /Users/sony/Library/Jupyter/kernels/python2 python3 /Applications/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Applications/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/08/25/tool_check.html",
            "relUrl": "/python/2022/08/25/tool_check.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Jupyter",
            "content": "First Code . print(&quot;hello world&quot;) . print(&quot;welcome to the secret code&quot;) print(&quot;cool&quot;) . .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/2022/08/24/Juypter-Notebook.html",
            "relUrl": "/jupyter/2022/08/24/Juypter-Notebook.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Paint Mixing",
            "content": "Starting Colors . Colors that I use are Burnt Sienna, Ivory Black, and Titanium White. The brand I use is specifically Windsor and Newton becuase it paints really smoothly onto my canvas. 1 . 1. You can also use different brands but these are my choice other brands like Gamblin are also really good.↩ . . Video . Here is a helpful video by Anna Wakitsch demoing how to mix this pallet using these colors . .",
            "url": "https://lunaiwa.github.io/iwazaki/art/2022/08/24/First-Post.html",
            "relUrl": "/art/2022/08/24/First-Post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus Bits . +1 | 00000000 | 0 | 0 | 0 | -1 | {BITS} | . Turn on | Turn on | Turn on | Turn on | . | | | | .",
            "url": "https://lunaiwa.github.io/iwazaki/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "API",
          "content": "API .",
          "url": "https://lunaiwa.github.io/iwazaki/_pages/API.html",
          "relUrl": "/_pages/API.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This is Luna Iwazaki’s Website .",
          "url": "https://lunaiwa.github.io/iwazaki/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Week Schedule",
          "content": "Work from the week and the hacks special assignments! . Week Date Hacks . 0 | 2022-08-22 | worklink | . 1 | 2022-08-29 | [issue 1](lunaiwa/iwazaki/issues/3#) | . 2 | 2022-09-06 | [issue 2](lunaiwa/iwazaki/issues/4#) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page8": {
          "title": "sub",
          "content": "[Home](https://lunaiwa.github.io/iwazaki/) . [Repository](https://github.com/lunaiwa/iwazaki) | . [Week Ticket](https://github.com/lunaiwa/iwazaki/issues/7#issue-1386497747) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lunaiwa.github.io/iwazaki/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}