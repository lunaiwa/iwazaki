{
  
    
        "post0": {
            "title": "Title",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/2022/12/01/Untitled1.html",
            "relUrl": "/2022/12/01/Untitled1.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/2022/12/01/Untitled.html",
            "relUrl": "/2022/12/01/Untitled.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 3.3-3.4 HACKS",
            "content": ". Describe the different parts of an algorithm, sequencing, selection, and iteration in the image below . Set item to number to search for. | Get text number in the list. | If number = item, display &quot;item found&quot; | If he are more numbers in the list, go back to Step 2 | Display &quot;item found&quot; | Sequencing: order of how to do a process | Selection: allows algorithm to make a decision based on the status [if a condition is met] | Iteration: loop | . . Evaluating Code . Evaluate the arithmetic expression for this code . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . 3 . . Crossword Puzzle . Finish the crossword puzzle . Iteration | Selection | Sequence | . Challenge . string1 = &quot;degree&quot; string2 = &quot; passenger&quot; FinalString = string1 + string2 print(FinalString[2:9]) print(len(FinalString)) print(len(FinalString[2:9])) . gree pa 16 7 . . Quiz . The length of the string | False | &gt; . | print(&quot;Hello World&quot;[3:8]) . lo Wo . .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/11/29/3.3-3.4HACKS.html",
            "relUrl": "/unit%203/2022/11/29/3.3-3.4HACKS.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Sections 8 and 10 HACKS",
            "content": "Unit 3 Section 8 . Section 8 HACKS . Unit 3 Section 8.1 . Unit 3 Section 8.2 . Unit 3 Section 8.3 . Unit 3 Section 10 . Section 10 HACKS .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/11/28/Unit3.8-3.10HACKS.html",
            "relUrl": "/unit%203/2022/11/28/Unit3.8-3.10HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 3 Sections 8 and 10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statements | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop . . Unit 3 Section 8.1 . Unit 3 Section 8.1 - Taiyo Iwazaki . Lesson Objective: Express an algorithm that uses iteration without using a programming language . LESSON . . Unit 3 Section 8.2 . Unit 3 Section 8.2 - Parav Saliwani . Lesson Objective: Determine the result or side effect of iteration statements . LESSON . . Unit 3 Section 8.3 . Unit 3 Section 8.3 - Nikhil . Lesson Objective: Write iteration statements . LESSON . . HACKS Unit 3 Section 8 . Hacks Unit 3 Section 8.1 . Put Hacks Here . Hacks Unit 3 Section 8.2 . Put Hacks Here . Hacks Unit 3 Section 8.3 . Put Hacks Here . . Section 10 - Lists - Luna Iwazaki, Ethan Tran . Section Objectives: . For list operations, write expressions that use list indexing and list procedures | For algorithms involving elements of a list, write iteration statements to traverse a list | For list operations, evaluate expression that use list indexing and list procedures | For algorithms involving elements of a list, determine the result of an algorithm that includes list traversals | . Section Vocabulary: . Traversing Lists: where all elements in the list are accessed, or a partial traversal, where only a portion of elements are accessed (can be a complete traversal) . Essential Knowledge: . List procedures are implemented in accordance with the syntax rules of the programming language . | Iteration Statements can be used to traverse a list . | !!! AP EXAM provides pseudocode for loops | Knowledge of existing algorithms that use iteration can help in constructing new algorithms: | . Unit 3 Section 10 . Unit 3 Section 10 - Luna Iwazaki . . HACKS Unit 3 Section 10 .",
            "url": "https://lunaiwa.github.io/iwazaki/lesson%20plans/2022/11/28/Unit3.8-3.10.html",
            "relUrl": "/lesson%20plans/2022/11/28/Unit3.8-3.10.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 3.1-3.2 HACKS",
            "content": ". Essential Knowledge Questions . 1. What is a variable . abstraction inside program that holds value&gt;associated data storage that rep. single value at a time . 2. What is the best type of data to represent someone&#39;s dog&#39;s name . variable . 3. Why is it important to give variables specific names before containing values . call them while coding . 4. What is the best way to print someone&#39;s phone number . string . 5. Explain what an assignment operator is . the equal sign in coding . 6. In Collegeboard pseudocode, what symbol is used to assign values to variables? . &quot;&lt;--&quot; . 7. A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? . It will display 22 . 8. What is a list . sequence of elements with each one (element) being a variable . 9. What is an element . items in a list . 10. What is an easy way to reference the elements in a list or string . print . 11. What is an example of string . &quot;Hello World&quot; . . List Examples . thanksgivingList = [&quot;cranberry pie&quot;, &quot;casserole&quot;, &quot;mashed potatoes&quot;, &quot;turkey&quot;] print(thanksgivingList) . [&#39;cranberry pie&#39;, &#39;casserole&#39;, &#39;mashed potatoes&#39;, &#39;turkey&#39;] . . Create a list . namelist = [&quot;Luna&quot;, &quot;Ethan&quot;, &quot;Taiyo&quot;, &quot;Parav&quot;, &quot;Nikhil&quot;] # printing the end print(namelist) . [&#39;Luna&#39;, &#39;Ethan&#39;, &#39;Taiyo&#39;, &#39;Parav&#39;, &#39;Nikhil&#39;] . name = &quot;Luna&quot; food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(name, food) . Luna [&#39;grapes&#39;, &#39;apples&#39;, &#39;bananas&#39;] . food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(food[1]) print(food[-1]) . apples bananas . . Variables . age = &quot;16&quot; name = &quot;Luna&quot; print(name + &quot; is &quot; + age) . Luna is 16 . . Number Input . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code numlist = [int(num1), int(num2), int(num3)] # shows the original numbers to the user print(&quot;Original-&gt;&quot;,numlist) # add the new number to the original input print(&quot;Add-&gt;&quot;,add) # code that adds the inputted addend to the other numbers for i in range(len(numlist)): numlist[i -1] += int(add) print(&quot;New-&gt;&quot;,numlist) . Original-&gt; [10, 20, 30] Add-&gt; 4 New-&gt; [14, 24, 34] . . Python Quiz . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, lunaiwazaki running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program complexity is correct! Question: Lists are a form of data ______ abstraction is correct! Question: Which brackets are used to assign values to a variable to make a list? [] is correct! lunaiwazaki you scored 3/4 . . Simplify Foods . food1 = &quot;pizza&quot; food2 = &quot;hot dog&quot; food3 = &quot;sushi&quot; food4 = &quot;strawberry&quot; food5 = &quot;sandwich&quot; print(food1, food2, food3, food4, food5) . pizza hot dog sushi strawberry sandwich . food = [&quot;pizza&quot;, &quot;hotdog&quot;, &quot;sushi&quot;, &quot;strawberry&quot;, &quot;sandwich&quot;] # change all the foods to share a list and use brackets print(food) . [&#39;pizza&#39;, &#39;hotdog&#39;, &#39;sushi&#39;, &#39;strawberry&#39;, &#39;sandwich&#39;] . color = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;] # change all foods to color print(color) . [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;] .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/python/2022/11/28/3.1-3.2HACKS.html",
            "relUrl": "/jupyter/python/2022/11/28/3.1-3.2HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 3.1-3.2 Class Jupyter Notebook Period 4",
            "content": "Unit 3, Section 1.1: Data Types and Variables - Ederick . Essential Knowledge (College Board&#39;s Must Knows): . A variable is an abstraction inside a program that holds a value, where each variable has associated data storage that represents a single value at a time (However, if the value is a collection type such as a list, then the value can contain multiple values). | Variables typically have meaningful names that helps with the overall organization of the code and understanding of what is being represented by the variables | Some programming languages provide a variety of methods to represent data, which are referenced using variables 9Booleans, numbers, lists, and strings) | One form of a value is better suited for representation than antoher. | . What is a Variable? . A variable is an abstraction made inside a program that holds a value. These variables are used in code to refer to more comples values that the variable contains and makes the program code more organized and smoother to run. . Variables can be seen as &quot;containers&quot; and each container has a name that holds what it is supposed to hold. In the following code, we can see that a variable has the value of &quot;Alex.&quot; How can we make the variable appear more organized in the code? . x = &quot;alex&quot; print(x) . alex . Choosing Variables . When choosing variables, it is important to assign the variables name to something that correlates with what the function of the variable is supposed to do. For example, we do not want a variable that is supposed to hold a name be named &quot;age&quot; becaue it can be confusing and mistakes may be more prevalent. . Example: . age = &quot;Timmy&quot; name = &quot;25&quot; print(name + &quot; is &quot; + age) . 25 is Timmy . Notice how age is going to be seen when printing the code. That can lead to confusion | . Data Types . Variables have different data types that store specific kinds of data depending on what is being represented. Some examples are shown below: . integer (numbers) | string (or text/letters) | Boolean (True/False statements) | . These types of data types can be useful when trying to represent a value. For example, you would not want a variable meant to represent someone&#39;s name with an integer. . Questions (College Board&#39;s Essential Knowledge): . What exactly IS a variable? | What is the best data type to represent someone&#39;s dog&#39;s name? | Why is it important to give variables specific names before containing values? | What is the best way to represent someone&#39;s phone number? | Bonus (Not required but important to know): . How can we update a variable&#39;s value | What function is used to recieve a user&#39;s input? | Variables (3.1.2) - Noor . Learning objective for 3.1.2: . Determine the value of a variable as a result of an assignment . done through looking at how we can use the assignment operator | . Note: . Collegeboard uses &lt;-- as the assignment operator . The assignment operator looks different for different types of coding languages A variable will take the most recent value assigned | . How do you even store a value inside a variable? . Let&#39;s use python for our example: . In python, the assignment operator is the equal sign (=) | In order to store a value inside a variable, we must: Give the variable a name | place the assignment operator | input the variable value | . | . highscore = 100 # How do you store a number like 3.72? money = 3.72 # What about storing your username (string)? username = &quot;name&quot; # What if it is raining outside and you want to store that fact (boolean)? is_raining = True # What about a list of groceries? groceries = [&quot;eggs&quot;, &quot;flour&quot;, &quot;bread&quot;, &quot;milk&quot;] . Lets Look at an Example: . x = 10 y = 20 z = 30 x = y z = x # what do you think z will be? print(z) . Let&#39;s get a little more practical here . Imagine that you are making a calendar and have just finished the html code that is needed: . You now want to be able to switch between the months of the year by using the &quot;next&quot; or &quot;prev&quot; buttons you will need to take the html elements and use them to your advantage but how? | . | . | . &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;calendar&quot;&gt; &lt;div class=&quot;month&quot;&gt; &lt;button class=&quot;prev&quot;&gt;Prev&lt;/button&gt; &lt;button class=&quot;next&quot;&gt;Next&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; // to make our lives a little easier, we can store the div next and prev into variables // this way we don&#39;t need to type out as much // Note: You CAN just add the event listener to document.querySelector(.next) or prev and get the same desired outcome nextButton = document.querySelector(.next) prevButton = document.querySelector(.prev) // we can go make the buttons functional by adding an addeventlistner to them &lt;/script&gt; . Recap: . We learned what is a assignment operator | We learned how to use the assignment operator | We learned how to store a value inside a variable using the assignment operator | We experimented with a few examples | . Hacks: . Answer these: . In your own words, briefly explain by writing down what an assignment operator is | In Collegeboard pseudocode, what symbol is used to assign values to variables? | A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? | . Hacks: . Copy the all the html code into a markdown file and run your local server. You will then see a decimal to binary converter near the html code. The problem is that it is not converting the decimal to binary. This is because the variables are not defined properly and it is your job to use the information learned today to fix the converter. Don&#39;t change the css . Bonus (optional): . There&#39;s more than one way to define the variable. List two ways to do it. . Rubric . For .15: . Student has followed directions properly and has the converter working | . For .18: . Student has completed some of the bonus material alongside requirement for 2.7 | . For .20: . Student has completed all of the material, answered thoughtfully, and met requirements for 2.7 | . List and Strings Using Variables- Nathan . Strings . Strings is a series of characters (numbers, letters, etc), one example of a string is your name or your id because strings can contain both numbers and letters. . The following are all examples of strings being used in code, in this case, within print functions. . print(&quot;hello world&quot;) print(&#39;hello&#39;) . hello world hello . Lists . Lists are sequences of elements with each element being a variable. An example of a list can be the names of the students in this classroom. . Features of Lists . The elements within the list can be accessed by index. | Can store various elements | The list is in order | . Example of a list . thanksgivingList = [&quot;cranberry pie&quot;, &quot;casserole&quot;, &quot;mashed potatoes&quot;, &quot;turkey&quot;] print(thanksgivingList) . [&#39;cranberry pie&#39;, &#39;casserole&#39;, &#39;mashed potatoes&#39;, &#39;turkey&#39;] . List Index . An index is an element of a string. Indices typically start with 0, but Collegeboard has the index start at 1. . print(thanksgivingList[1]) #In this case, the index starts at 0, but in collegeboard, the index starts at 1 print(thanksgivingList[-3]) #Python can index from the end, in this case, &quot;turkey&quot; would be index -1 and 3. . casserole casserole . Hacks . Questions . What is a list? | What is an element | What is an easy way to reference the elements in a list or string? | What is an example of a string? | . Hacks . Create a list with indices | Index a part of the list that you created. | Try to index from the end | . Create an index of your favorite foods . Tips: Index starts at 1, Strings are ordered sequences of characters . Extra work: Try to create an index that lists your favorite food and print the element at index 3. More work: Create a list of your favorite foods and create an index to access them. . marks = [&quot;food1&quot;] . Rubric . Creating a list . Shows great knowledge in creating lists | . Indexing . Is able to index both from the start and from the end | . Data Abstraction with Lists - Steven . Data abstraction can be created with lists. . Lists bundle together multiple elements and/or variables under one name are not defined with specified lengths. | The variables that are stored in a list do not have to be limited to one kind of variable. | The user does not need to know how the list stores data (this gives way for data abstraction). | . In the code below, the logic itself works with a list, but the code abstracts it into a sequence of bits in a string (as seen in the input and output). To make this work, the splitbits lists is created and processed. At the end of the code, the result is outputted as a string rather than a list (abstraction). . bits = input(&quot;Input a sequence of bits to invert: &quot;) splitbits = list(bits) for i in range(len(splitbits)): if splitbits[i] == &#39;0&#39;: splitbits[i] = &#39;1&#39; elif splitbits[i] == &#39;1&#39;: splitbits[i] = &#39;0&#39; print(&quot;&quot;.join(splitbits)) . Hacks . The following code is incomplete. Its intended purpose is to increase three numbers, all of which ask for user input, by an amount specified the user. The input code is abstracted, but the actual logic isn&#39;t connected to the abstraction. | . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code in the space below # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in numlist: numlist[i -1] += int(add) print(numlist) . The following provides a rubric for my hacks (scored out of 0.20) . 0.20 - Fully functioning data abstraction with a list | 0.10 - not functioning, but attempt at making a list | 0.00 - not functioning, no evidence of attempt based upon the guidelines | . Managing Complexity with lists - Liav . Long and slow way . By now, everyone should know the &quot;long and slow way&quot; to print a list of something in python It is easy to just assign a value to a single variable | This method is displayed in this example with test scores: | . | . score1 = 95 score2 = 24 score3 = 87 score4 = 92 print(score1, score2, score3, score4) . As you can see, each score is assigned to its relative variable such as &quot;score1 = 95&quot; and then you just print each variable. | However you can make the code segment faster, easier to read, and more efficient... | . Assinging values to one variable . Use square brackets &quot;[]&quot; to store the values of a certain variable, then you can simply print the variable to output your desired list: | . scores = [95, 24, 87, 92] print(scores) . Now instead of having a difference variable and new line of code for each value, the list is simply displayed by assigning each value to a single value that you can now print. | . How lists manage complexity of a program . Simplification . It is much simpler, faster, and easier to code lists this way | Makes the code segment much easier to read | . | Variables . You do not need as many variables, because you can just assign all corresponding values to a single variable | To change a value you don&#39;t have to edit/add/remove an entire variable | . | . Python Quiz . Now everyone should take this short python quiz and screenshot your score. | . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, lunaiwazaki running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program is incorrect! Question: Lists are a form of data ______ is incorrect! Question: Which brackets are used to assign values to a variable to make a list? is incorrect! lunaiwazaki you scored 0/4 . Simplify Foods List . Now simplify this foods list using what you have learned | . food1 = &quot;pizza&quot; food2 = &quot;hot dog&quot; food3 = &quot;sushi&quot; food4 = &quot;strawberry&quot; food5 = &quot;sandwich&quot; print(food1, food2, food3, food4, food5) . Hacks . On a single markdown file: Insert a screenshot of your score on the python quiz | Insert a screenshot of your simplifying of the food list | Why are using lists better for a program, rather than writing out each line of code? | Make your own list the &quot;long and slow way&quot; then manage the complexity of the list | . | . Rubric . In ordere to earn a .20/.20 you must On a markdown post: | make an attempt at the python quiz | Successfully simplify the food list | Answer the question in detail | Provide evidence of your own list that you coded | . | .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/python/2022/11/26/LessonPlan3.1-3.2.html",
            "relUrl": "/jupyter/python/2022/11/26/LessonPlan3.1-3.2.html",
            "date": " • Nov 26, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 3 Sections 8 and 10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statements | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop . Section 10 - Lists . Section Objectives: . For list operations, write expressions that use list indexing and list procedures | For algorithms involving elements of a list, write iteration statements to traverse a list | For list operations, evaluate expression that use list indexing and list procedures | For algorithms involving elements of a list, determine the result of an algorithm that includes list traversals | . Section Vocabulary: .",
            "url": "https://lunaiwa.github.io/iwazaki/lesson%20plans/2022/11/14/LessonPlans.html",
            "relUrl": "/lesson%20plans/2022/11/14/LessonPlans.html",
            "date": " • Nov 14, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Final Trimester 1 Editing",
            "content": "Questions . Q1 Behavior of code that multiplies inside a loop . Image . The code segment displays the value of 2(5^3) by initializing result to 2 and then multiplying result by 5 a total of three times. . Related -- . Topic 1.2 . Program&#39;s function and purpose and a programs input and output . Video Notes . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Q16 How information is transmitted on the Internet . Which of the following best explains how messages are typically transmitted over the Internet? . The message is broken into packets. The packets can be received in any order and still be reassembled by the recipient’s device. . Related -- Topic 4.1 . The internet and bandwidth . Video Notes . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Q34 Music instrument lists after assignments . firstList ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . secondList ← [&quot;flute&quot;, &quot;violin&quot;] . thirdList ← [] . thirdList ← firstList . firstList ← secondList . secondList ← thirdList . [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . Related -- . Topic 3.2 . Strings, and examples of data extraction . [] ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] | [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] ← [&quot;flute&quot;, &quot;violin&quot;] | [&quot;flute&quot;, &quot;violin&quot;] ← [] | . Q40 Value displayed by IF ELSE block . Image . -2 | . Something will be displayed no matter what the values of x and y are. . Related -- . Topic 3.6 . Executing outcome based on conditions . Q48 Which variables are equal to 50 after assignments . x ← 25 . y ← 50 . z ← 75 . x ← y . y ← z . z ← x . x and z only . The fourth statement assigns the value 50 to x. The sixth statement assigns the value 50 to z. . Related -- . Topic 3.1 . Variable abstractions and storing data as numbers . 25 ← 50 | 50 ← 75 | 75 ← 25 | . N@TM Review . !()[https://lh3.googleusercontent.com/tmKXv7Sbn6e2R_0rIOwrYiIOcOY5eunfxZsMY6BWueIv1v4zwAskJsXFuT8WYXABct6mZVY6P8Ay0eBIhtksJgfkJ4ehB0Ruwx-RCQ-IL41gYMc0v8o0_jGio9AJUHLEBkB2zRtG3xRAZkqaMo-KMajozq2eFZIzMd5a0IbdQrLvLNGD23d-0DM3XVxoWr8Mw7hHEIr-EwDKj3oEN79l5CxpeZuPsA9dTcAIezKM1zIfhZISg_u0k9Fjklk-5P3mZeoGNyS-hk3IcyhV1DGFhNWJO-QNTo5l7p9AlREXcFuOvrk7RTZSzkkoeUu2mMYwLHHl-fIzbCBQetuh9ghh-6ksZIST0RZ2UQ6gnotaDTU-hLZCh0ArQU1ouboY9bwFrvhdmixIHpdA-6B1wpNljQtDT18ZDNT5VWjv9ZJPsosOVwKK_fA9xpvn_p0qEKD2c8XIosmQlpZ_9iNdFaoG7-sRNBgPnWftb3yPY1-MmBUsBhHpkf13xebOra9lbKoeNRdsdU5HoJzLgqXPZB-8lx_rgXQgImbTgIVMYQFs304V0bUFJKv_tczxiN4T0EHEJo4H0s7cH_tVRKuTEmlyb_aWJxOyXITF_6Q1ZNOGZSXYUyqt3jJ34dWOX237iCisMscs7Y0B45IUrvBMsOSd543NDKk2XDDmEhH9h22T9yPEdyhwnpRLUyQX7n-bnafiGgul08oZaGewieImJ46qwjArk-sAhkf0ez4Ehke-z6U0xZcj11obpnWvQrqNGgtDvBZgPTf20gMatYb0HnitEuYaNCEc9UygAlcSYdrN-VWAQsAxToDds5pR3hM71uouWWjsoiWXJTR1sUZFZUJvBTU4o-IsW9lnK6Gwb0TTnR5kSjA1SFFGsi9EvYDknRI4rPcgVMfcVr3OLZppFmgEDZ5zW3OyGrBjIrkJ6LdmHIHyNcYgQ2AiXUM68WR_Yb5ArSYlFfudrNWYEWKNyHw0=w1194-h1592-no?authuser=0] . NIght at the measuem was an amazing experiecne and I was able to let others see the project that the group made. I was also able to see other peoples projects! Some projects that I really enjoyed was; Ava&#39;s ASB merch website. Their website was able to keep track of stock and see how many in the stock are left. I also really enjoyed Edrick&#39;s calender page which shows what is up next in your schedule. Another amazing project was Tay&#39;s study quiz website where you are able to quiz yourself on the quizes you take and you are able to recive your score. .",
            "url": "https://lunaiwa.github.io/iwazaki/final/2022/11/05/Final-Edit.html",
            "relUrl": "/final/2022/11/05/Final-Edit.html",
            "date": " • Nov 5, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "USA Computing Olympiad",
            "content": "Problem 1. Milk Pails - Bronze . fin = open(&#39;pails.in&#39;, &#39;r&#39;) buck1, buck2, buck3 = map(int, fin.readline().split()) ans = 0 # x and y below take care of all # possible combinations of the two buckets. for x in range(1001): if (buck1 * x) &gt; buck3: break for y in range(1001): current = (buck1 * x) + (buck2 * y) if current &gt; buck3: break ans = max(ans, current) with open(&#39;pails.out&#39;, &#39;w&#39;) as fout: fout.write(str(ans) + &#39; n&#39;) . FileNotFoundError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb Cell 4 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; fin = open(&#39;pails.in&#39;, &#39;r&#39;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; buck1, buck2, buck3 = map(int, fin.readline().split()) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; ans = 0 FileNotFoundError: [Errno 2] No such file or directory: &#39;pails.in&#39; . Diamond Collector .",
            "url": "https://lunaiwa.github.io/iwazaki/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "relUrl": "/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Chess Wireframes",
            "content": "Chess Home Page . Chess Page Wireframes . These are the possible chess wireframes for when the user is looking at the chess set page . . User Page Wireframes . -- .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/18/Chess-Wireframe.html",
            "relUrl": "/planning/2022/10/18/Chess-Wireframe.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Big Idea Notes",
            "content": "Unit 1 . 1.1 : Collaboration . Video 1 . colaboration introduces different views and perspectives and prevents the use of bias | without collaboration many differnt well enjoyed games wouldn&#39;t be here today | communitcation, consensus building, conflict resolution, and negotiation are four most important things | . Video 2 . pair share programing is one way to collaborate in computer science, not only will you be collaborating but you will also be able to edit your work and get help for some problems | think-pair-share is also another way to collaborate in computer science, when you have a problem you can get another&#39;s opinon and work through it together | you can also share your github repository and let others edit your code | . 1.2 : Program Function and Purpose . Video 1 . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Video 2 . in event driven progra, program statements are excluded when triggered, rather than through the sequential flow of contorl | input can come from a user or other programs | program outputs are any data sent from a program to a device. Program output can come in a varitey of forms, such as tactile, audio, visual, or text | program output is usually based on a program&#39;s input or prior state | . Video 3 . program is a collection of program statments that performs a specific task when run by a computer | program is often reffered to a software | code segment is a collection of program statements that is part of program | program needs to work for a variety of inputs and situations | . 1.3 : Program Design and Development . Video 1 . developing program using a development process | design a program and its user interface | program is developed by testing occuring at the micro and macro level | devs refine and revise through testing, feedback, and reflection | . Video 2 . important to acknowledge any code segments that were developed collaborativly or by another source | programs are rarely developed by a solo force and is usally made by a team | . Video 3 . program documentation is a wirtten segment of how this was made, how it should work, and the event | comments are a form of program and is read by people it doesn&#39;t effect the code! | programmers should document their code through the making! | program documention helps developing and mainitaining correct programs when working by yourself or in a teamwork envrioment | not all programing enviroments support comments! | . 1.4 : Identifying and Correcting Errors . Video 1 . logic error is a mistake in algorithim or program that cuases it to behave incorrectly | syntax error is a mistake in the program where rules of programing do not apply (ex: using python in markdown) | run-time error is a mistake in program during execution | program languages define their own runtime errors | overflow error is an error that occurs when a computer attempts to handel a number that is outside of the defined range of value | . Video 2 . you can correct errors using; test cases, hand tracing, visualizations, debuggers, adding extra output statment(s) | . Video 3 . in development process, testing uses defined inputs to ensure algoritim or program is producing the expected outcomes | programmers use the results from testing to revise their algorithms or programs | defined inputs used to test a program should demonstrate the different expected outcomes that are at or just beyond the extremes (minimum and maximum) of input data | program reqirements are needed to identify appropirate definece inputs for testing | . Unit 2 . 2.1 : Binary Numbers . Video 1 . abstraction is process of reducting complexity by focusing on the main idea | hiding details irrelevant to the question at hand | brings together related and useful details, reduces complexity and allows one to focus on the data | grouped to represent abstractions | inclue but not limited to, numebrs, characters, and color | . Video 2 . integers are represented by a fixed number of bits | limits the range of integer values and mathmatical operations | limitation can result in overflow or errors | other program languages provide abstraction limited only by size of the computer&#39;s memory | fixed numeber of bits used to represent real numbers limits the range and mathmatical operations on these values | limitation can result in round-off and other errors | real numbers are represented as approximations in computer storages | . Video 3 . number bases including binary and decimal are used to represent data | binary (base 2) use only combination of the digits zero and one | decimal (base 10) use only combination of the digits 0-9 | . 2.2 : Data Compression . Video 1 . lossy data compression algorithms can usally reduce the number of bits stored or transmitted more than lossless compression algorithms | in situations where quality or ability is used to reconstruct the original is max important | lossless compression algorithims are typically chosen | when minimizing data size or transmission time is max important | lossy compression algoristhims are typically chosen | . 2.3 : Extracting Information from Data . Video 1 . size of data set affects the amount of information that can be extracted from it | large data sets are difficult to process using a single computer and needs or may need parallel systems | scalabiltiy of systems is an important consideration when working with data sets | computationsal capacity of a system affects how the data sets can be porcessed and stored | . Video 2 . metadata are data about data | changes and deletions made to metadata do not change the primary data | metadata are used for finding, organizing, and managing information | metadata can increase the effective use of data or data sets by providing additional information | metadata allow data to be structured and organized | . 2.4 : Using Programs with Data . Video 1 . programs are used in iterative and interactive way when processing information to allow users to gain insight and knowledge about data | programmer can use programs to filter and clean digital data, therby gaining insight and knowlege from data | combining data sources, clustering data, and classifying data are also parts of this process | insight can also be obtained by translating and transforming digitally represented information | patterns can emerge when data is transformed using programs | . Video 2 . -transforming every elements of a data set . filtering a data set | combining or comparing data in some way visualizing a data set through a chart, graph, or other visual represention | . Unit 3 . 3.1 : Variables and Assignments . Video 1 . Video 2 . 3.2 : Data Abstraction . Video 1 . Video 2 . Video 3 . 3.3 : Mathmatical Expressions . Video 1 . Video 2 . Video 3 . 3.4 : Strings . Video 1 . 3.5 : Boolean Expressions . Video 1 . Video 2 . Video 3 . 3.6 : Conditionals . Video 1 . Video 2 . Video 3 . 3.7 : Nested Conditionals . Video 1 . Video 2 . 3.8 : Iteration . Video 1 . Video 2 . Video 3 . 3.9 : Developing Algorithms . Video 1 . Video 2 . Video 3 . 3.10 : Lists . Video 1 . Video 2 . Video 3 . 3.11 : Binary Search . Video 1 . 3.12 : Calling Procedures . Video 1 . Video 2 . 3.13 : Developing Procedures . Video 1 . Video 2 . 3.14 : Libraries . Video 1 . 3.15 : Random Values . Video 1 . Video 2 . 3.16 : Simulations . Video 1 . Video 2 . 3.17 : Algorithmic Efficiency . Video 1 . Video 2 . 3.18 : Undecidable Problems . Video 1 . Unit 4 . 4.1 : The Internet . Video 1 . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Video 2 . internet is a computer network consisting of interconnected netwokrs thst use standard, open (nonproprietary) communitcation protocols | acesss to the internet dependes on the ability to connect a computinf device to an internet connected device | protocol is an agreed-upon set of rules that specify the behavior of a system | protocols used in the internet are open, allowing users to easily connect additional computing devices to the internet | routing on the internet is dynamic, if not specified | scalability of the system is cap for the system to change in size and scale and meet new demands | internet was designed to be scalable | . 4.2 : Fault Tolerence . Video 1 . redundancy in a system often requires additional reasources but can provide the benefit of fault tolerence | redundancy of routing options between two points increases the realiability of the internet | helps scale to more devices and people | . Video 2 . the interent is engineered to be fault-tolerant | with abstractions for routing and transmitting data | redundancy is the inclusiion of extra components that can be used to mitigate failure of a system if other components fail | one way to accomplish network redundancy is by having more than one path between any to connected devices | . 4.3 : Parallel and Distributed Coding . Video 1 . parallel computing consists of parallele portions and a sequential portion | solution that use parallel computing can scale more effectivly than solutions that use sequential computing | distributed computing allows problems to be solved that could not be solved on a single computer | ^ then the processing time or storage needs to be involved | distributed computing allows much larger problems to be solved quicker than they could be solved when using a single computer | when increasing the use of parallel computing in a solution, the efficiency of the solution is still limited by the sequential portion | ^ meaning at some point adding parallel portions will no longer meaningfully increase effciency | . Unit 5 . 5.1 : Benefical and Harmful Effects . Video 1 . people make computing inventions | people complete tasks differently to incorporate new computing inventions | not every computing invention effect is anticipated | single effect can be view as both beneficial and harmful | advances in computing have gereated and increased creativity in different fields: medicne, engineering, communications, and arts | . Video 2 . responsible programmers try to consider uninteneded ways of their computing innovations | ^ potential benefical + harmful effects of the new uses | not possible for a programmer to consider all the ways a computing innovation can be used | rapid sharing of a program or running a program with a large number of users can result in significant impacts beyond inteneded purpose or control of programer | . 5.2 : Digital Divide . Video 1 . internet acess varies between socioeco., geographical, and demographic characteristcs | digital divde refers to differing acess to computing devices and the Internet, based on socioeconomic, geographic, or demographic characteristics | digital divde can affect both groups and individuals | digital divide raises issues of equity, acess, and influence, both globally and locally | digital divde is affected by the actions of individuals, organizations, and governments | . 5.3 : Computing Bias . Video 1 . computing innovations can reflect existing human biasese becuase of biases written into the algorithms | biases in data used by the innovation | programs should take action to reduce bias in algorithms used for computing innovations as a way of combating existing human biases | biases can be embedded at all levels of software development | . 5.4 : Crowdsourcing . Video 1 . widespread acesss to information and public data facilitates the identification of problems | development of solutions and dissemination of results | science has been affected by using distributed and &quot;citizen science&quot; to solve scientific problems | citizen science is scientific research conducted in whole or part by distributed individual | ^many of whom may not be scientists who contribute relevant data to research using their own computing devices | . 5.5 : Legal and Ethical Concerns . Video 1 . open source are programs that are made to be freely available and may be redistributed and modified | open acess is online research output free of any and all restriction on acess and free of many restrictions on use | ^such as copyright or license restrictions | . 5.6 : Safe Computing . Video 1 . Video 2 . Video 3 .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/17/APCS-Notes.html",
            "relUrl": "/notes/2022/10/17/APCS-Notes.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Trimester Final Plan",
            "content": "Outline . The code that will be created is a website that allows the user to be able to see different openings in chess. These openings will be shown by user interactive buttons and different ways you can open on chess. The goal of the website is to help the user become a better chess player by using these different openings provided by the website. Another goal is to allow the user able to see different openings and provide feedback to the website. The website&#39;s name is planned to be called &#39;Rookie&#39; and has a rook as it&#39;s logo. The mock design color&#39;s or design will be changed in the future. . . The sets on the top bar represent the different chess openings that can be played. The moves bar on the right shows the different chess pieces and where they moved on the chess board. The board on the right will show the different chess pieces and where they move. User feedback will be represented below by comments or the like button which will be an image which changes. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/10/Plan-Chnged.html",
            "relUrl": "/planning/2022/10/10/Plan-Chnged.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "API",
            "content": "import http.client conn = http.client.HTTPSConnection(&quot;weatherbit-v1-mashape.p.rapidapi.com&quot;) headers = { &#39;X-RapidAPI-Key&#39;: &quot;4d84578a4bmshef588b2a5b86609p11c974jsnf5b5615ebc33&quot;, &#39;X-RapidAPI-Host&#39;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } conn.request(&quot;GET&quot;, &quot;/forecast/3hourly?lat=35.5&amp;lon=-78.5&quot;, headers=headers) res = conn.getresponse() data = res.read() print(data.decode(&quot;utf-8&quot;)) # key value print try extracting one value . {&#34;country_code&#34;:&#34;US&#34;,&#34;state_code&#34;:&#34;NC&#34;,&#34;data&#34;:[{&#34;timestamp_utc&#34;:&#34;2022-10-10T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:1.42,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:61,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:100,&#34;vis&#34;:28.288,&#34;wind_spd&#34;:0.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-10-10:18&#34;,&#34;ts&#34;:1665424800,&#34;snow&#34;:0,&#34;dewpt&#34;:12,&#34;uv&#34;:1.7,&#34;wind_dir&#34;:39,&#34;ghi&#34;:729.33,&#34;dhi&#34;:111.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:19.8,&#34;app_temp&#34;:19.4,&#34;dni&#34;:880.54,&#34;solar_rad&#34;:158.62384,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-10T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:294,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:38,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015,&#34;clouds&#34;:38,&#34;vis&#34;:38.272,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-10:21&#34;,&#34;ts&#34;:1665435600,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:329,&#34;ghi&#34;:292.24,&#34;dhi&#34;:76.52,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:20.8,&#34;app_temp&#34;:20.3,&#34;dni&#34;:667.87,&#34;solar_rad&#34;:282.43954,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:290.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:7,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:7,&#34;vis&#34;:31.488,&#34;wind_spd&#34;:2.24,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-11:00&#34;,&#34;ts&#34;:1665446400,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:72,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:17.1,&#34;app_temp&#34;:17.1,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.39,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:71,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:2,&#34;vis&#34;:22.288,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:03&#34;,&#34;ts&#34;:1665457200,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:49,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:14,&#34;app_temp&#34;:14,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:285.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.23,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:19.2,&#34;wind_spd&#34;:2.13,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:06&#34;,&#34;ts&#34;:1665468000,&#34;snow&#34;:0,&#34;dewpt&#34;:8,&#34;uv&#34;:0,&#34;wind_dir&#34;:22,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.9,&#34;app_temp&#34;:11.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:3,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.86,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1018,&#34;clouds&#34;:3,&#34;vis&#34;:14.496,&#34;wind_spd&#34;:1.72,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:09&#34;,&#34;ts&#34;:1665478800,&#34;snow&#34;:0,&#34;dewpt&#34;:7.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.7,&#34;app_temp&#34;:9.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.89,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:88,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1019,&#34;clouds&#34;:5,&#34;vis&#34;:14.696,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:12&#34;,&#34;ts&#34;:1665489600,&#34;snow&#34;:0,&#34;dewpt&#34;:7.4,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:354,&#34;ghi&#34;:91.33,&#34;dhi&#34;:45.58,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.3,&#34;app_temp&#34;:9.3,&#34;dni&#34;:406.55,&#34;solar_rad&#34;:91.326904,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1020,&#34;clouds&#34;:0,&#34;vis&#34;:31.2,&#34;wind_spd&#34;:1.79,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:15&#34;,&#34;ts&#34;:1665500400,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:4.3,&#34;wind_dir&#34;:73,&#34;ghi&#34;:627.13,&#34;dhi&#34;:105.12,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:17.8,&#34;dni&#34;:846.66,&#34;solar_rad&#34;:627.13,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:284.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.36,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:37,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.536,&#34;wind_spd&#34;:2.1,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:18&#34;,&#34;ts&#34;:1665511200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.4,&#34;uv&#34;:5.5,&#34;wind_dir&#34;:61,&#34;ghi&#34;:724.09,&#34;dhi&#34;:111.33,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:20.9,&#34;dni&#34;:879.31,&#34;solar_rad&#34;:724.09,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.43,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.577,&#34;wind_spd&#34;:2.15,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:21&#34;,&#34;ts&#34;:1665522000,&#34;snow&#34;:0,&#34;dewpt&#34;:5.3,&#34;uv&#34;:2,&#34;wind_dir&#34;:77,&#34;ghi&#34;:287.08,&#34;dhi&#34;:75.97,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.8,&#34;app_temp&#34;:20.9,&#34;dni&#34;:663.93,&#34;solar_rad&#34;:287.08,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.98,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:46,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:25,&#34;vis&#34;:41.792,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:00&#34;,&#34;ts&#34;:1665532800,&#34;snow&#34;:0,&#34;dewpt&#34;:4.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:16.6,&#34;app_temp&#34;:16.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.44,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:59,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:30.592,&#34;wind_spd&#34;:2.26,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:03&#34;,&#34;ts&#34;:1665543600,&#34;snow&#34;:0,&#34;dewpt&#34;:5.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:70,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:13.3,&#34;app_temp&#34;:13.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.83,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:25,&#34;vis&#34;:23.088,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:06&#34;,&#34;ts&#34;:1665554400,&#34;snow&#34;:0,&#34;dewpt&#34;:5.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:46,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:11,&#34;app_temp&#34;:11,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:277.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:1,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.71,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:25,&#34;vis&#34;:15.896,&#34;wind_spd&#34;:1.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:09&#34;,&#34;ts&#34;:1665565200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:36,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.4,&#34;app_temp&#34;:9.4,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:4,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:3.34,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:92,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:5,&#34;vis&#34;:12.496,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-12:12&#34;,&#34;ts&#34;:1665576000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:55,&#34;ghi&#34;:88.61,&#34;dhi&#34;:44.96,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.2,&#34;app_temp&#34;:9.2,&#34;dni&#34;:400.45,&#34;solar_rad&#34;:88.606995,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.4,&#34;wind_cdir&#34;:&#34;ESE&#34;,&#34;rh&#34;:66,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:5,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:15&#34;,&#34;ts&#34;:1665586800,&#34;snow&#34;:0,&#34;dewpt&#34;:12.2,&#34;uv&#34;:4.1,&#34;wind_dir&#34;:110,&#34;ghi&#34;:622.79,&#34;dhi&#34;:104.87,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:18.7,&#34;app_temp&#34;:18.3,&#34;dni&#34;:845.43,&#34;solar_rad&#34;:601.5654,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:1.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:53,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.66,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1021,&#34;datetime&#34;:&#34;2022-10-12:18&#34;,&#34;ts&#34;:1665597600,&#34;snow&#34;:0,&#34;dewpt&#34;:11.7,&#34;uv&#34;:5.4,&#34;wind_dir&#34;:127,&#34;ghi&#34;:718.85,&#34;dhi&#34;:111.05,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:21.3,&#34;dni&#34;:878.05,&#34;solar_rad&#34;:695.1358,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.8,&#34;clouds_hi&#34;:4,&#34;clouds_low&#34;:9,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:2.3,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:54,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1011,&#34;clouds&#34;:9,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-12:21&#34;,&#34;ts&#34;:1665608400,&#34;snow&#34;:0,&#34;dewpt&#34;:12.3,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:154,&#34;ghi&#34;:281.97,&#34;dhi&#34;:75.41,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22,&#34;app_temp&#34;:21.6,&#34;dni&#34;:659.94,&#34;solar_rad&#34;:272.25607,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:74,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:2.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:18,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.91,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1018,&#34;datetime&#34;:&#34;2022-10-13:00&#34;,&#34;ts&#34;:1665619200,&#34;snow&#34;:0,&#34;dewpt&#34;:12.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:138,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:19.5,&#34;app_temp&#34;:19.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:100,&#34;wind_gust_spd&#34;:9.7,&#34;wind_cdir&#34;:&#34;S&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.79,&#34;wind_cdir_full&#34;:&#34;south&#34;,&#34;slp&#34;:1017,&#34;datetime&#34;:&#34;2022-10-13:03&#34;,&#34;ts&#34;:1665630000,&#34;snow&#34;:0,&#34;dewpt&#34;:13.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:169,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.2,&#34;app_temp&#34;:17.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:99,&#34;wind_gust_spd&#34;:8.52,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.74,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-13:06&#34;,&#34;ts&#34;:1665640800,&#34;snow&#34;:0,&#34;dewpt&#34;:14.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:137,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.3,&#34;app_temp&#34;:17.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T09:00:00&#34;,&#34;pop&#34;:70,&#34;ozone&#34;:287.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:80,&#34;clouds_mid&#34;:48,&#34;wind_gust_spd&#34;:11.52,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1003.5,&#34;clouds&#34;:80,&#34;vis&#34;:4.644,&#34;wind_spd&#34;:2.59,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1011,&#34;datetime&#34;:&#34;2022-10-13:09&#34;,&#34;ts&#34;:1665651600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:159,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:1.6875,&#34;weather&#34;:{&#34;code&#34;:520,&#34;description&#34;:&#34;Light shower rain&#34;,&#34;icon&#34;:&#34;r04n&#34;},&#34;temp&#34;:17.5,&#34;app_temp&#34;:17.5,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T12:00:00&#34;,&#34;pop&#34;:35,&#34;ozone&#34;:287.8,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:98,&#34;clouds_mid&#34;:88,&#34;wind_gust_spd&#34;:7.1,&#34;wind_cdir&#34;:&#34;SSW&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1002,&#34;clouds&#34;:98,&#34;vis&#34;:11.968,&#34;wind_spd&#34;:1.92,&#34;wind_cdir_full&#34;:&#34;south-southwest&#34;,&#34;slp&#34;:1010,&#34;datetime&#34;:&#34;2022-10-13:12&#34;,&#34;ts&#34;:1665662400,&#34;snow&#34;:0,&#34;dewpt&#34;:18.6,&#34;uv&#34;:0.5,&#34;wind_dir&#34;:205,&#34;ghi&#34;:85.88,&#34;dhi&#34;:44.33,&#34;precip&#34;:0.4375,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:18.9,&#34;app_temp&#34;:19.4,&#34;dni&#34;:394.19,&#34;solar_rad&#34;:53.639946,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:89,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.12,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-13:15&#34;,&#34;ts&#34;:1665673200,&#34;snow&#34;:0,&#34;dewpt&#34;:18.3,&#34;uv&#34;:1.3,&#34;wind_dir&#34;:223,&#34;ghi&#34;:618.42,&#34;dhi&#34;:104.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:20.5,&#34;app_temp&#34;:20.9,&#34;dni&#34;:844.18,&#34;solar_rad&#34;:133.56374,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T18:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:9,&#34;wind_gust_spd&#34;:9.41,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.1,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1006,&#34;datetime&#34;:&#34;2022-10-13:18&#34;,&#34;ts&#34;:1665684000,&#34;snow&#34;:0,&#34;dewpt&#34;:17.9,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:224,&#34;ghi&#34;:713.59,&#34;dhi&#34;:110.77,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:23.8,&#34;app_temp&#34;:24,&#34;dni&#34;:876.77,&#34;solar_rad&#34;:145.37724,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T21:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:292.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:29,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.51,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:997,&#34;clouds&#34;:29,&#34;vis&#34;:21.056,&#34;wind_spd&#34;:4.46,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1005,&#34;datetime&#34;:&#34;2022-10-13:21&#34;,&#34;ts&#34;:1665694800,&#34;snow&#34;:0,&#34;dewpt&#34;:18.2,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:225,&#34;ghi&#34;:276.89,&#34;dhi&#34;:74.85,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22.5,&#34;app_temp&#34;:22.8,&#34;dni&#34;:655.91,&#34;solar_rad&#34;:259.41742,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T00:00:00&#34;,&#34;pop&#34;:45,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:44,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.01,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:94,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:44,&#34;vis&#34;:11.16,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1006.5,&#34;datetime&#34;:&#34;2022-10-14:00&#34;,&#34;ts&#34;:1665705600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:251,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.5625,&#34;weather&#34;:{&#34;code&#34;:301,&#34;description&#34;:&#34;Drizzle&#34;,&#34;icon&#34;:&#34;d02n&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:18.8,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:296,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:99,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.43,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:79,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:999.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.94,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1007.5,&#34;datetime&#34;:&#34;2022-10-14:03&#34;,&#34;ts&#34;:1665716400,&#34;snow&#34;:0,&#34;dewpt&#34;:13.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.6,&#34;app_temp&#34;:17.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.92,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.53,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-14:06&#34;,&#34;ts&#34;:1665727200,&#34;snow&#34;:0,&#34;dewpt&#34;:10.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:328,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:14.3,&#34;app_temp&#34;:14.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:300.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:10.41,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1002.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.76,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1010.5,&#34;datetime&#34;:&#34;2022-10-14:09&#34;,&#34;ts&#34;:1665738000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:312,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.6,&#34;app_temp&#34;:11.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:298.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:11.6,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1004.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.98,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1012.5,&#34;datetime&#34;:&#34;2022-10-14:12&#34;,&#34;ts&#34;:1665748800,&#34;snow&#34;:0,&#34;dewpt&#34;:3.6,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:315,&#34;ghi&#34;:83.16,&#34;dhi&#34;:43.69,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:387.77,&#34;solar_rad&#34;:83.16,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.61,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.03,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-14:15&#34;,&#34;ts&#34;:1665759600,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.4,&#34;uv&#34;:4.2,&#34;wind_dir&#34;:317,&#34;ghi&#34;:614.03,&#34;dhi&#34;:104.35,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:16.1,&#34;app_temp&#34;:16.1,&#34;dni&#34;:842.9,&#34;solar_rad&#34;:614.03,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:302.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.02,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:21,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1005.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:5.71,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1013.5,&#34;datetime&#34;:&#34;2022-10-14:18&#34;,&#34;ts&#34;:1665770400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.3,&#34;uv&#34;:5.2,&#34;wind_dir&#34;:311,&#34;ghi&#34;:708.34,&#34;dhi&#34;:110.48,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.3,&#34;app_temp&#34;:16.8,&#34;dni&#34;:875.48,&#34;solar_rad&#34;:708.34,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:301,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.21,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.81,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014,&#34;datetime&#34;:&#34;2022-10-14:21&#34;,&#34;ts&#34;:1665781200,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.9,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:317,&#34;ghi&#34;:271.86,&#34;dhi&#34;:74.28,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:17.9,&#34;app_temp&#34;:17.9,&#34;dni&#34;:651.84,&#34;solar_rad&#34;:271.86,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:305.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.57,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016.5,&#34;datetime&#34;:&#34;2022-10-15:00&#34;,&#34;ts&#34;:1665792000,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:12.2,&#34;app_temp&#34;:12.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:311,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:36,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.24,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-15:03&#34;,&#34;ts&#34;:1665802800,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:351,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:307,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.3,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:40,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1011.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.17,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1020,&#34;datetime&#34;:&#34;2022-10-15:06&#34;,&#34;ts&#34;:1665813600,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:354,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:8.2,&#34;app_temp&#34;:8.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:306,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7,&#34;wind_cdir&#34;:&#34;N&#34;,&#34;rh&#34;:43,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1012.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.1,&#34;wind_cdir_full&#34;:&#34;north&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-10-15:09&#34;,&#34;ts&#34;:1665824400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:3,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:4.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:309.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.4,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.4,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-10-15:12&#34;,&#34;ts&#34;:1665835200,&#34;snow&#34;:0,&#34;dewpt&#34;:-2.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:25,&#34;ghi&#34;:80.44,&#34;dhi&#34;:43.04,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:5.1,&#34;dni&#34;:381.17,&#34;solar_rad&#34;:80.44,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:310.8,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:33,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1014.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-15:15&#34;,&#34;ts&#34;:1665846000,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.3,&#34;uv&#34;:4,&#34;wind_dir&#34;:57,&#34;ghi&#34;:609.61,&#34;dhi&#34;:104.08,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:14.8,&#34;app_temp&#34;:14.8,&#34;dni&#34;:841.6,&#34;solar_rad&#34;:609.6098,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T11:00:00&#34;}],&#34;lon&#34;:-78.5,&#34;lat&#34;:35.5,&#34;timezone&#34;:&#34;America /New_York&#34;,&#34;city_name&#34;:&#34;Four Oaks&#34;} .",
            "url": "https://lunaiwa.github.io/iwazaki/api/2022/10/10/API.html",
            "relUrl": "/api/2022/10/10/API.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Sociology Questions",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/06/Sociology-Questions.html",
            "relUrl": "/notes/2022/10/06/Sociology-Questions.html",
            "date": " • Oct 6, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Poster Draft and Final",
            "content": "Poster Ideas and Draft . Want to add different steps . Give Instructions | Plan Sprints | Assign Jobs | Assign Weekly work | Sprint | Daily Scrum + Meeting and Planning | Finished | . Got poster approved but then needs to change finished into iterate or repreat since we always use these steps for success! Need to change how the words are arranged in the numbers to make it asthetically pleasing . . Finished and added in color (blue and green)! Changed the way where the words were in the numbers! .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/03/Poster.html",
            "relUrl": "/planning/2022/10/03/Poster.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Errors and How to Correct them in Code",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . Determines where the alphabet is in the loop . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 0 letter in the alphabet . When adding in a letter you can find where the letter is in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 0 letter in the alphabet . changing outcome to odd numbers . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . outputs 0-10 . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . 0-10 using the loops .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Errors-In-Code.html",
            "relUrl": "/errors/2022/10/03/Errors-In-Code.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Error Documentation",
            "content": "Questions in Errors . What errors may arise in your project? . Errors that may arise are the frontend not showing what it might need or the backend not performing as it should! . Make sure to document any bugs you encounter and how you solved the problem. . Most bugs might be a changed letter or number error in the code, another error that might be encountered is missing lines of code! . What are “single” tests that you will perform on your project? Or, your part of the project? . Single tests that might be performed on the project is the frontend testing and seeing if the user see what is needed and not the code. . Errors Documentation . 1.ERROR 2.ERROR 3.404 . Error Challenge . What are some ways to (user) error proof this code? . First add in a single test for the expectation, then test input and output, run the test!!! . The code should be able to calculate the cost of the meal of the user . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) if item == &quot;fries&quot;: total = 1.99 if item == &quot;burger&quot;: total = 3.99 if item == &quot;drink&quot;: total = .99 #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . # prices of the different meals menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0.0 current_order = [] # order of the user # this is where the user prints the order print(&quot;Menu:&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) item = input(&quot;Select an Item&quot;) item = item.lower() while item in menu.keys(): quantity = float(input(&quot;How Many&quot;)) current_order.append(str(item) + &quot; X &quot; + str(quantity)) total += (menu[item] * quantity) print(str(int(quantity)) + &quot; &quot; + item + &quot;(s)&quot; + &quot; added&quot;) # user orders more or finishes order item = input(&quot;Would you like to add more or finish order &#39;done&#39;&quot;) item = item.lower() #order is being printed print(&quot;Order:&quot;) print(current_order) print(&quot;Price:&quot;) print(&quot;$&quot; + str(round(total,2))) # single item code # if item == &quot;burger&quot; or item == &quot;fries&quot; or item == &quot;drink&quot;: # print(&quot;! The total of the order is&quot;, item, &quot;will be &quot;,menu[item]) # else: # print(&quot;Try again!&quot;) . Menu: burger $3.99 fries $1.99 drink $0.99 4 burger(s) added 19 fries(s) added 2 drink(s) added Order: [&#39;burger X 4.0&#39;, &#39;fries X 19.0&#39;, &#39;drink X 2.0&#39;] Price: $55.75 .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Error-Documentation.html",
            "relUrl": "/errors/2022/10/03/Error-Documentation.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "AP Prep Multiple Choice",
            "content": "AP Practice Screen Shot . . Confusing Questions and Understanding . Week 6 Quiz . Collaboration Quiz - 100% . The questions were easy to understand since we were already implementing these things and activities into our daily work as a SCRUM team! :) . Program Design and Development Quiz - 33% . Documentation for Procedure with a loop:odd numbers then even are printed!! Becuase the count starts at 1 and increases every 2 making the count odd!! Then the loop is terminated when it is at max. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Program Function and Purpose Quiz (MCQs) - 50% . Behavior of code that multiplies inside a loop: I need to work on figuring out loop code! . Correct first portion which ia 2(5^3) but the second part is wrong where it needs to be multiplying the result by 5 3 times! . &gt; value displays when y=true and when x is negative . Week 7 Quiz . Identifying and Correcting Errors Quiz . . Instead of changing line 1 to IF(score + penalty &lt; 0) change the lines 3 and 7 | . Check plus is displayed as intended so the code will not dispkay the numbers 8 and 7 | The Internet Quiz . Correct first portion but the packets can be recived in any order and can be reassembled . | Instead of being acessed by a data stream it is acessed by a network . |",
            "url": "https://lunaiwa.github.io/iwazaki/ap/2022/10/02/AP.html",
            "relUrl": "/ap/2022/10/02/AP.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "SCRUM Team Project",
            "content": "SCRUM Team Roles . Each team member is given a role and assigns themselfs tasks to do before the next Daily Scrum meet. . Roles . These roles were given to each teammeber based on their performance for certain tasks and/or leadership in the team. Ethan Tran is the Scrum Leader who helps the team remain organized while also managing the lengths of team sprints. Parav Salaniwal and Rohin Sood are responsible for the backend development, both of them are responsible for maintaining, testing, and debugging the backend. Luna and Taiyo Iwazaki are responsible for the front end development, they are responsible for the design and structure of the website which the user sees. Below is a visual of the scrum process. . . Project CS CONNECT . Purpose . We are creating a website that allows its users to connect with others! You can see other user&#39;s accounts and posts that they make. Each post contains something about them which others can connect to. Users can like another&#39;s post if they find it relatable to them. Down below is an unfinished mock up so the coloring or format will be changed in the future! . .",
            "url": "https://lunaiwa.github.io/iwazaki/scrum/2022/09/25/Scrum-Team.html",
            "relUrl": "/scrum/2022/09/25/Scrum-Team.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Stress, Science, and Choice Habit Making",
            "content": "What? . What kinds of goals and habits do happy people have? 9:34--&gt;cont. . Physcology and the Good Life . most students are too stressed to enjoy life and do life | ie. not being able to enjoy a book | even Yale wants students to perform | lots of lack of performance in class | . Classroom Habits . wasting whole day and big pile-up of homework | being an active listener and taking notes or going along with the class | . Take Aways . Most students don&#39;t spen their time wisley in class and end up having to stress over it during the weekend. Using the time given in class will allow a student to be more successful and happier. Without that much work outside of class students will be able to spend more time doing what they love and be less stressed. Being able to balence life and school is difficult but, when you are able to have a perfect harmony between both you can enjoy life more. Goals and habits most people have to acheive this are, being able to do the most work they have when they have the oppertunity to, and not wasting their time and save it for later. And second goal most people have is, to be able to hold onto any oppertunity they are given and to take them and use them wisley (do their work when they are given the oppertunity to in class). Habits most happy people have are to be happy and use the time they have to do somthing they really enjoy then doing somthing that would just waste their time. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/15/Human-Day.html",
            "relUrl": "/notes/2022/09/15/Human-Day.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "APCSP Test Prep",
            "content": "Take Notes . Whatever the teacher says is helpful and vocab words are important to use during code. The vocab words can also be helpful in the MC and are helpful during the trimester | Do practice testing and time them to prep for the real AP test to simulate the situation | Creating tasks that are unique and creative and not just normal | Looking at past examples of other works form other students that have recived a 5 on the Ap test | REVIEW, REVIEW REVIEW | . Task Ideas . any create game that isn&#39;t used (everyone typically uses GPA calculator) | don&#39;t use a basic game like hang man or anything do somthing out of the box | do a game that is simple yet creative!!! | .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/12/AP-Testing-Prep.html",
            "relUrl": "/planning/2022/09/12/AP-Testing-Prep.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Performance Task Planning/Draft",
            "content": "Purpose . Creating awarness of other running athleates and gaining more traction to running as a sport | Bringing other athleates from other sports into cross country and track becuase it can help them inprove in their other sport | Helping those who don&#39;t have resources to help them run by repourposing old running shoes and making them look new | Donating old or new running shoes to those in need of shoes or in need of shoes for their sport | Saftey, bringing different exercises and stretches on the website to help those experiencening shinsplints ect. to help them find out what stretch, exercise, or help they might need for their issue | . Initial Thougts . Using all of the team memebers different coding skills this website can be able to work as a athletic website in a whole. My web design can help make the website look less boring and have videos or images and colors to direct athletes to different pages of the website. Taiyo, who is also in cross country and track can add in his input and help bring real facts onto this website. He can also give us experience as to his sport nd how he deals with problems when running. . My Code . I learned a lot of things this first half of the trimester and can use those ideas to help pull this website together! I mainly explored in the section of web design hence my page having lots of pictures and different colors. To make this website more complete however I need to learn how to add in more tabs and maybe add in a drop down page. I also should learn how to make more interactable items or programs onto the page to make it more user friendly and attact more people to the website. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/11/Performance-Task-Planning.html",
            "relUrl": "/planning/2022/09/11/Performance-Task-Planning.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Findings and New App",
            "content": "Outline - compsci vocab terms . creating a app that has a quiz focusing on the current vocab words | has a purple theme to match the theme of my website and logo | uses different ways to input an answer | has a &quot;fail&quot; and &quot;winning&quot; page | has three questions to make it simple | . Building . Building the app was easier then I thought it would be in the begining. Unlike other codes I have done so far the website had premade codes whcih I used to create the app. I mostly used the &quot;OnEvent&quot;, &quot;Console&quot;, and &quot;setscreen&quot; buttons to creat my quiz. The quiz is made of computer science vocab that we have learned these past weeks. The terms I used are my favorite terms and ones we use most in the class. I also added in a meme if you use the slider in the &quot;fail&quot; screen. It&#39;s a really hidden one. I tried to use different ways to input an answer like the bubble buttons and just clicking the box with the answer in it. I had a theme that matched my website logo and even put the logo in the front. Adding pictures was really nice too and it was easier then the coding way becuase I could just add them from my computer or use the image address. . Link To App on Web . https://studio.code.org/projects/applab/pK0X670gjhU8EmO0NMbaJigSTuvGsCZCO_xMq3SiLls . Finidings . Using the code.org is easier then using Python and other coding programs because the blocks act as a premade coding system. Not only are the blocks helpful to use but you can also veiw the code in the normal format by just clicking a button. This website allows for me and others to easily create different apps and programs by just putting different blocks together. The website also allows you to see what the finished product might look like on the left side of the screen. Any program that you have made can also be run and tested by just the click of a button. Images can be easily imported into the program. This is also easily accessable since this whole program can be run in your own web browser. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/11/Findings-And-New-App.html",
            "relUrl": "/notes/2022/09/11/Findings-And-New-App.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Vocab Notes",
            "content": "Vocabulary . input = instructions given to a computer | sequence = several lines of code | output = infromation computer gives | key -&gt; value | variables = way to name, store data, and reference data | lists and dictionaries = variable with extended fetures for storing + retrieving data | lists = [] the square brackets for grouping and ordering | dictionaries = {} curley brackets for grouping into key-value relationships | data extraction = extracting data using things such as infodb which is data (not a procedure) | . Linux and Ubuntu . pwd = print directory | mkdir = make directory | cd = change directory | ls = list directory | def = procedure | td = table data | print = to write out | . Git Vocab . &quot;git clone&quot; makes local Git repo (decentralized) from cloud (GitHub/Git) | &quot;git commit&quot; makes snapshot of original parent on local database | &quot;git push&quot; | . Collaboration . team = people that come together to work together! | .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/05/Vocab-Notes.html",
            "relUrl": "/notes/2022/09/05/Vocab-Notes.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Variable . Variables have types :string, integer, and float. Lists and Dictionaries is a key type! . name = &quot;Luna Iwazaki&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) print() # variable of type float score = 3.00 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Luna Iwazaki &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 3.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Luna Iwazaki&#39;, &#39;age&#39;: 16, &#39;score&#39;: 3.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luna Iwazaki &lt;class &#39;str&#39;&gt; . Dictionaires . infoDb = [] # Append to List a Dictionary of key/values infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;November 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, &quot;Shapes&quot;: [&quot;heart&quot;, &quot;circle&quot;, &quot;star&quot;] }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemebr 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, &quot;Shapes&quot;: [&quot;square&quot;, &quot;circle&quot;, &quot;triangle&quot;] }) # Print the data structure print(infoDb) . [{&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]}, {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]}] . Loop Output . List printing . def for_loop(): print(&quot;For loop output n&quot;) for record in infoDb: print(record) for_loop() . For loop output {&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]} {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]} . Loops and Index . def print_data(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Game&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Shapes: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Shapes&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop with index output n&quot;) length = len(infoDb) #figures out the length of the list infoDb (which is 2 because there are 2 dictionaries in the list) ran = range(length) #defines ran as the range of the length. (this is 0 and 1 because the length is 2) for index in reversed(ran): #index is 0 and 1 so it takes the indexes of infoDb. 0 would be the first dictionary and 1 would be the second. reversed prints them as 1 0 instead of 0 1 print_data(infoDb[index]) for_loop() . For loop with index output Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star . While Loop Output . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(infoDb): #length is 2 so while i is less than, it will keep printing record = infoDb[i] #defines the record as the index of the list print_data(record) #prints that index using the formatted print function i += 1 #adds 1 and returns to the top till i is no longer &lt;2 return while_loop() . While loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Recursive Loop . def recursive_loop(i): if i &lt; len(infoDb): #ensures the code stops after it recurses through all the indexes since length determines amount of indexes record = infoDb[i] #defines record as the index of infoDb print_data(record) #prints using the formatted print function recursive_loop(i + 1) #adds 1 to the original index and returns until i is no longer &lt;2 return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Add-Search-Delete . infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, }) def print_data2(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Favorite Game:&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print() def data_entry(): #defining the function that asks for user input Firstname = input(&quot;What is your firstname?&quot;) Lastname = input(&quot;What is your lastname&quot;) DOB = input(&quot;When is your birthday&quot;) Email = input(&quot;What is your Email&quot;) Movie = input(&quot;What is your favorite game?&quot;) Residence = input(&quot;Where do you live?&quot;) infoDb.append({ #appends the user input to the dictionary &quot;FirstName&quot;: Firstname, &quot;LastName&quot;: Lastname, &quot;DOB&quot;: DOB, &quot;Email&quot;: Email, &quot;Residence&quot;: Residence, &quot;Fav_Game&quot;: Movie, }) def search_data(firstname): for record in infoDb: if record[&quot;FirstName&quot;] == firstname: #compares the already existing name to the name inputted with the firstname variable return record return NULL def data_delete(firstname): record = search_data(firstname) #defines record as the name inputted with the search function if (record != NULL): #if the record doesn&#39;t equal null (does it exist?) then the next line removes it infoDb.remove(record) print(firstname, &quot;has been deleted!&quot;) else: print(&quot;Record not found!&quot;) def main(): Continue = True #defining continue as true while Continue: lol = input(&quot;What would you like to do (add/search/delete, type no if you want to exit)?&quot;) if lol == &quot;no&quot;: print(&quot;Come back again!&quot;) Continue = False elif lol == &quot;add&quot;: data_entry() elif lol == &quot;search&quot;: firstname = input(&quot;Who do you want to search (firstname)?&quot;) record = search_data(firstname) #defines record as the input &quot;name&quot; and runs it through the search function print_data2(record) elif lol == &quot;delete&quot;: firstname = input(&quot;Who do you want to delete(firstname)&quot;) data_delete(firstname) else: print(&quot;Invalid input. Please try again&quot;) length = len(infoDb) #defines length as the number of records print(&quot;Total Number of Records: &quot;, length) for record in infoDb: print_data2(record) main() . NameError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 15 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; &#34;FirstName&#34;: &#34;Luna&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; &#34;DOB&#34;: &#34;Novemeber 19&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; &#34;Residence&#34;: &#34;San Diego&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Snake&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; &#34;Email&#34;: &#34;lunaiwazaki@gmail.com&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; &#34;FirstName&#34;: &#34;Taiyo&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, (...) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Valorent&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; def print_data2(d_rec): #formatting NameError: name &#39;infoDb&#39; is not defined . Quiz . questions = 5 correct = 0 print(&quot;Take this quiz to test your vocab!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): print(&quot;Correct!&quot;) global correct correct += 1 else: print (&quot;Incorrect!&quot;) return msg Q1 = question_and_answer(&quot;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&quot;, &quot;instructions given to a computer&quot;) Q2 = question_and_answer(&quot;What is a squence? t a line of code t several lines of code t a button&quot;, &quot;several lines of code&quot;) Q3 = question_and_answer(&quot;What is an output? t information a computer gives t a computer tab t going outside&quot;, &quot;information a computer gives&quot;) Q4 = question_and_answer(&quot;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&quot;, &quot;way to name, store data, and reference data&quot;) Q5 = question_and_answer(&quot;What are lists? t something for the grocery t the square brackets for grouping and ordering t a square&quot;, &quot;the square brackets for grouping and ordering&quot;) print(f&#39;You scored {correct} /5 correct answers!&#39;) Quiz = { &quot;Question 1&quot;: Q1, &quot;Question 2&quot;: Q2, &quot;Question 3&quot;: Q3, &quot;Question 4&quot;: Q4, &quot;Question 5&quot;: Q5 } print(&quot;Here is a record of your quiz answers:&quot;,Quiz) . Take this quiz to test your vocab! Question: What is the definition of INPUT? instructions given to a computer computer paper paper instructions Answer: instructions given to a computer Correct! Question: What is a squence? a line of code several lines of code a button . KeyboardInterrupt Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in &lt;cell line: 21&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=17&#39;&gt;18&lt;/a&gt; return msg &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; Q1 = question_and_answer(&#34;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&#34;, &#34;instructions given to a computer&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; Q2 = question_and_answer(&#34;What is a squence? t a line of code t several lines of code t a button&#34;, &#34;several lines of code&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; Q3 = question_and_answer(&#34;What is an output? t information a computer gives t a computer tab t going outside&#34;, &#34;information a computer gives&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; Q4 = question_and_answer(&#34;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&#34;, &#34;way to name, store data, and reference data&#34;) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in question_and_answer(prompt, answer) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; def question_and_answer(prompt, answer): &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print(&#34;Question: &#34; + prompt) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; msg = input() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; print(&#34;Answer: &#34; + msg) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; if answer == msg.lower(): File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1177, in Kernel.raw_input(self, prompt) 1173 if not self._allow_stdin: 1174 raise StdinNotImplementedError( 1175 &#34;raw_input was called, but this frontend does not support input requests.&#34; 1176 ) -&gt; 1177 return self._input_request( 1178 str(prompt), 1179 self._parent_ident[&#34;shell&#34;], 1180 self.get_parent(&#34;shell&#34;), 1181 password=False, 1182 ) File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1219, in Kernel._input_request(self, prompt, ident, parent, password) 1216 break 1217 except KeyboardInterrupt: 1218 # re-raise KeyboardInterrupt, to truncate traceback -&gt; 1219 raise KeyboardInterrupt(&#34;Interrupted by user&#34;) from None 1220 except Exception: 1221 self.log.warning(&#34;Invalid Message:&#34;, exc_info=True) KeyboardInterrupt: Interrupted by user .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/09/05/Lists-and-Dictionaries.html",
            "relUrl": "/python/2022/09/05/Lists-and-Dictionaries.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Alumni Panel Event",
            "content": "Questions and Answers . Q: What did Computer Science make you relize? . C- can code well and did some 3d modeling, though from other organizations like robotics he knew that he wasn&#39;t as great as his competetors . A- always did coding and as a young kid really enjoyed to code CSA really applied to him and he took time to reflect on what he wanted to do . M- didn&#39;t really like compsci as much as most people but found it useful when she interned ans solidified the relization that you would need to learn programing. (she is C&#39;s twin sister) . AL- always artsy and did buisness she now does cognitive which is like phsycology and compsci and she wanted to do web science and took the skills she learned from the CSP class . N- liked compsci when she was younger and when she entered middle school and into high school she started to take it serious, when she was making a program to complie data about Covid-19, it was a pivitol moment for her since she relized she could use these skill in the real world . Q: Some big challeneges that you can face when doing Computer Science . C- keeping motivation, always when programming he got error messages, but there are always answers on the internet, and have disipline . A- egos in the classroom, compsci majors have big egos and it is fustrating, focus on your own path &quot;Steve Jobs beats you 100 out of 100 times&quot; . AN- theory, structures and didn&#39;t really think about it but it is hard transitioning from high school computer science into college computer science . M- finding motivation, someone is always better, smart team members at her inter they hired and wanted a website to be made, specific project and purpose is helpful to learn, syntax was fustrating, google can answer all of your syntax problems . AL- starting and temptation to BS, always have a mindset to go above and beyond then do cookie cutter jobs . N- getting started in a new area, liked to structure, not always have an organized and do things to start coding . Q: Any PBL senarios [project based learning] . C- UCSD always has 1 hands on as a freshman and 1 hands on as a senior, problem solving, designing, and programing, SCRUM and agile flow, PBL won&#39;t go away still will show up in learning . AN- would kinda go away mix of PBL and fun but, PBL is still larger involved in mostly the UCs, and probably if you are taking the compsci course it will show up there . M- both in class and out of class, there are 200+ people in the lecture hall to study in groups and work with others in a larger sized class since you can&#39;t really ask questions. Structured in a way of sprints learning good to get experience beforehand. Many intern hires don&#39;t expect them to know anything so ask questions! . Takeaways and Insights from event . Not only is coding used in the classroom but it can be taken outside and used in many different senarios that you may not think of. Many of the allumni take their coding outside and even use it in their internships and or jobs they work at. Not all of them may have an inspiration for coding but they all have relized that coding will help them in their future and depending how they use it is now up to them! .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/08/29/Extra-Credit-Event.html",
            "relUrl": "/notes/2022/08/29/Extra-Credit-Event.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "APCSP Quiz",
            "content": "True or False . QandA = [ &quot;1. True or False, Def is a key word in Python that defines a function&quot;, &quot;True&quot;, &quot;2. True or False, In Python anatomy of you will NOT be importing libraries and functions?&quot;, &quot;False&quot;, &quot;3. True or False, Hello world is a string literal?&quot;, &quot;True&quot;, &quot;4. True or False,?&quot;, &quot;Answer&quot;, &quot;5. True or False, Input and Output in Jupyter Notebook Input is NOT in line with Output?&quot;, &quot;True&quot;, &quot;6. True or False, an if expression is not evaluated for true or false&quot;, &quot;False&quot;, &quot;7. True or False, return command in function does not return msg input by user&quot;, &quot;False&quot;, &quot;8. True or False, false takes branch of code directly under else command&quot;, &quot;True&quot;, &quot;9. True or False, correct += 1 is NOT the way to add one to the score&quot;, &quot;False&quot;, &quot;10. True or False,?&quot;, &quot;Answer&quot;, ] #total points and using new quiz var points = 0 current = 0 quiz = 1 print (&quot;Welcome to my true or false quiz!&quot;) #Using while lets me loop function while quiz &lt; 11: question = input (QandA[current]) if question == QandA[current+1]: print (&quot;That&#39;s correct!&quot;) points = points +1 current = current +2 else: print (&quot;Sorry, that is incorrect!&quot;) points = points -1 current = current -2 quiz = quiz +1 #Final Message print (&quot;You got &quot; + str(current) + &quot;/&quot; + str(len(QandA)) + &quot; correct&quot;) . Welcome to my true or false quiz! . Quiz . score = 0 # Question 1 answer1 = input(&quot;What does Def do in a function? na. nothing nb. defines a function nc. sudo code nd. changes directory nAnswer: &quot;) if answer1 == &quot;b&quot; or answer1 == &quot;defines a function&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: defines a function.&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 2 answer2 = input(&quot;What is Python3 na. A type of snake nb. A programming language nc. A google game nd. Javascript nAnswer: &quot;) if answer2 == &quot;b&quot; or answer1 == &quot;A programming language&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: A programming language&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 3 answer3 = input(&quot;What is a sequence? na. Two or more lines of code nb. A line of code nc. multiple words nd. I dont know nAnswer: &quot;) if answer3 == &quot;a&quot; or answer1 == &quot;Two or more lines of code&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: Two or more lines of code&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) #Final Message if score &lt;= 1: print (&quot;Your total score is:&quot;, score, &quot;- That&#39;s OK&quot;) elif score == 2: print (&quot;Your total score is:&quot;, score, &quot;- Nice Job&quot;) else: print (&quot;Your total score is:&quot;, score, &quot;-AMAZING!&quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/html/2022/08/26/Quiz.html",
            "relUrl": "/html/2022/08/26/Quiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Installation Check",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /Applications/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.2.0 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h6e9494a_0 conda-forge conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.15.1 pypi_0 pypi ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 python_abi 3.9 2_cp39 conda-forge pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.15.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/sony/Library/Jupyter/kernels/bash javascript /Users/sony/Library/Jupyter/kernels/javascript python2 /Users/sony/Library/Jupyter/kernels/python2 python3 /Applications/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Applications/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/08/25/tool_check.html",
            "relUrl": "/python/2022/08/25/tool_check.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Jupyter",
            "content": "First Code . print(&quot;hello world&quot;) . print(&quot;welcome to the secret code&quot;) print(&quot;cool&quot;) . .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/2022/08/24/Juypter-Notebook.html",
            "relUrl": "/jupyter/2022/08/24/Juypter-Notebook.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Paint Mixing",
            "content": "Starting Colors . Colors that I use are Burnt Sienna, Ivory Black, and Titanium White. The brand I use is specifically Windsor and Newton becuase it paints really smoothly onto my canvas. 1 . 1. You can also use different brands but these are my choice other brands like Gamblin are also really good.↩ . . Video . Here is a helpful video by Anna Wakitsch demoing how to mix this pallet using these colors . .",
            "url": "https://lunaiwa.github.io/iwazaki/art/2022/08/24/First-Post.html",
            "relUrl": "/art/2022/08/24/First-Post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus Bits . +1 | 00000000 | 0 | 0 | 0 | -1 | {BITS} | . Turn on | Turn on | Turn on | Turn on | . | | | | .",
            "url": "https://lunaiwa.github.io/iwazaki/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "API",
          "content": "API .",
          "url": "https://lunaiwa.github.io/iwazaki/_pages/API.html",
          "relUrl": "/_pages/API.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This is Luna Iwazaki’s Website .",
          "url": "https://lunaiwa.github.io/iwazaki/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Week Schedule",
          "content": "Work from the week and the hacks special assignments! . Week Date Hacks . 0 | 2022-08-22 | worklink | . 1 | 2022-08-29 | [issue 1](lunaiwa/iwazaki/issues/3#) | . 2 | 2022-09-06 | [issue 2](lunaiwa/iwazaki/issues/4#) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page8": {
          "title": "sub",
          "content": "[Home](https://lunaiwa.github.io/iwazaki/) . [Repository](https://github.com/lunaiwa/iwazaki) | . [Week Ticket](https://github.com/lunaiwa/iwazaki/issues/7#issue-1386497747) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lunaiwa.github.io/iwazaki/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}