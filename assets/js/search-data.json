{
  
    
        "post0": {
            "title": "HACKS 3-7",
            "content": ". Essential Knowledge Questions . Explain in your own words what each logical operator does | a. NOT : displays opposite of data inputted b. AND : determine if two conditions are met c. OR : determine if one of the conditions is met . . Logical Operators . Code your own scenario that makes sense for each logical operator . AND . water = 10 if water &gt; 5 and water &lt;= 20: print(&quot;drink more water&quot;) . OR . water = 1 ice = 21 if water &lt;= 0 or ice &gt; 20: print(&quot;too cold&quot;) . NOT . clouds = False result = not(clouds) print(result) . . Grader . Create an array with integers, each integer representing one score from a student&#39;s taken tests. If the average of the student&#39;s test scores are at least 75 percent, then display that the student is elligible for credit, and if not, display that the student must retake the tests over break. . grades = [&#39;30&#39;, &#39;80&#39;, &#39;90&#39;, &#39;89&#39;, &#39;75&#39;, &#39;60&#39;] average = sum(grades)/len(grades) # printing extra credit if average &gt; 75: print(&quot;extra credit!&quot;) # if less then 75 if average &lt; 75: print (&quot;retake :(&quot;) . . Algorithm Calculator . Create an algorithm that calculates the sum of two numbers, then determines whether the sum is greater than or less than 100. (number oriented and creative) . # user input of data numbers x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) # adding the numbers sum = int(x) + int(y) # printing the sum print(&quot;the sum is:&quot;, sum) . x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) sum = int(x) + int(y) # if it is greater than if sum &gt; 100: print(&quot;the number is less than 100!&quot;) # if it is less than else: num = list(range(sum,101,1)) print(&quot;the number is more than 100&quot;) . . Flowcharts in Code . Create 3 different flow charts representing nested statements and transfer them into code. . . 1 . weather = &quot;sunny&quot; temp = &quot;80&quot; if weather == &quot;sunny&quot;: if temp ==&quot;80&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;80&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;wrong weather and right size&quot;) . 2 . weather = &quot;cloudy&quot; temp = &quot;40&quot; if weather == &quot;cloudy&quot;: if temp ==&quot;40&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;40&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;wrong weather and right size&quot;) . 3 . if temp &gt; 80: if weather == &quot;hot&quot;: print(&quot;wear light clothes&quot;) elif store == &quot;cold&quot;: print(&quot;wear a jacket&quot;) else: print(&quot;no weather report today&quot;) . . Four Statement Code . Create a piece of code that displays four statements instead of three. Try to do more if you can. . if temp &gt; 100: if weather == &quot;cold&quot;: print(&quot;it will be cold today&quot;) elif clouds == &quot;rainy&quot;: print(&quot;bring an umbrella&quot;) elif sunny == &quot;it will be a nice day&quot;: print(&quot;go outside&quot;) # if temp is &lt; than 100 else: print(&quot;it&#39;s too hot&quot;) . . Class Recommendations . Make piece of code that gives three different recommendations for possible classes to take at a school based on two different condtions. These conditions could be if the student likes STEM or not. . STEM = True ART = True # if STEM was chosen if STEM: print(&quot;APCalculus, APChem, APBiology&quot;) # if ART was chosen elif ART: print(&quot;APArtandDesign, APArtHistory, APMusicTheory &quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2023/04/02/Unit5-7HACKS.html",
            "relUrl": "/unit%203/2023/04/02/Unit5-7HACKS.html",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "MCQ Test",
            "content": "Q23 Searching patterns in large sets of data - 5B, 2.3 - Extracting Information from Data . Directions: The question or incomplete statement below is followed by four suggested answers or completions. Select the one that is best in each case. . Computers are often used to search through large sets of data to find useful patterns in the data. Which of the following tasks is NOT an example where searching for patterns is needed to produce useful information? . A) A credit card company analyzing credit card purchases to identify potential fraudulent charges . B) A grocery store analyzing customers’ past purchases to suggest new products the customer may be interested in . C) A high school analyzing student grades to identify the students with the top ten highest grade point averages . D) An online retailer analyzing customers’ viewing habits to suggest other products based on the purchasing history of other customers . Answer C . This option is correct. By current standards, a single high school’s list of student grades is not considered a large set of data. Furthermore, identifying 10 students with the highest grade point averages is not an example of finding patterns. . Q24 The table below shows the time a computer - 5D, 2.3 - Extracting Information from Data . The table below shows the time a computer system takes to complete a specified task on the customer data of different-sized companies. . The figure shows a table with 4 columns and 5 rows. The top row contains the column labels, from left to right; column 1, Task; column 2, Small Company (approximately 100 customers); column 3, Medium Company (approximately 1,000 customers); column 4, Large Company (approximately 10,000 customers). From top to bottom, the data is as follows: Row 2; Task, Backing up data, Small Company, 2 hours, Medium Company, 20 hours, Large Company, 200 hours. Row 3; Task, Deleting entries from data, Small Company, 100 hours, Medium Company, 200 hours, Large Company, 300 hours. Row 4; Task, Searching through data, Small Company, 250 hours, Medium Company, 300 hours, Large Company, 350 hours. Row 5; Task, Sorting data, Small Company, 0.01 hours, Medium Company, 1 hour, Large Company, 100 hours. . Based on the information in the table, which of the following tasks is likely to take the longest amount of time when scaled up for a very large company of approximately 100,000 customers? . A) Backing Up Data . B) Deleting Entries from Data . C) Searching Through Data . D) Sorting Data . Answer D . Q44 Use of procedure to search a dictionary - 3C, 3.13 - Developing Procedures . A student is developing a program that allows users to look up the definitions of words that appear in a book. . The student plans to perform a large number of searches through a dictionary containing words and their definitions. The student will use a procedure written by a computer scientist to quickly search the dictionary (and knows that the procedure will return a definition if one is available). The student cannot modify the search procedure written by the computer scientist but can call the procedure by supplying a word. . Which of the following is a true statement about the student’s use of the computer scientist’s search procedure? . A) The student is changing the search procedure&#39;s internal abstractions. . B) The student is modifying the search procedure to take a definition as an argument and return the corresponding word. . C) The student is reusing the computer scientist&#39;s procedural abstraction by knowing what the procedure does without knowing how it does it. . D) The student is reusing the computer scientist&#39;s procedural abstraction by using duplicate code each time a search needs to occur. . Answer D . Incorrect. The use of a procedural abstraction generalizes the search functionality instead of duplicating code. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/04/02/CSPGrade.html",
            "relUrl": "/apcsp/2023/04/02/CSPGrade.html",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Data Structures- Hashmaps, Sets, Hash Tables, Hashing and Collisions",
            "content": "What is a Hashtable/Hashmap? . A hashtable is a data structure that with a collection of key-value pairs, where each key maps to a value, and the keys must be unique and hashable. . In Python there is a built in hashtable known as a DICTIONARY. | . The primary purpose of a hashtable is to provide efficient lookup, insertion, and deletion operations. When an element is to be inserted into the hashtable, a hash function is used to map the key to a specific index in the underlying array that is used to store the key-value pairs. The value is then stored at that index. When searching for a value, the hash function is used again to find the index where the value is stored. . The key advantage of a hashtable over other data structures like arrays and linked lists is its average-case time complexity for lookup, insertion, and deletion operations. . The typical time complexity of a hashtable is CONSTANT. | . What is Hashing and Collision? . Hashing is the process of mapping a given key to a value in a hash table or hashmap, using a hash function. The hash function takes the key as input and produces a hash value or hash code, which is then used to determine the index in the underlying array where the value is stored. The purpose of hashing is to provide a quick and efficient way to access data, by eliminating the need to search through an entire data structure to find a value. . However, it is possible for two different keys to map to the same hash value, resulting in a collision. When a collision occurs, there are different ways to resolve it, depending on the collision resolution strategy used. . Python&#39;s dictionary implementation is optimized to handle collisions efficiently, and the performance of the dictionary is generally very good, even in the presence of collisions. However, if the number of collisions is very high, the performance of the dictionary can degrade, so it is important to choose a good hash function that minimizes collisions when designing a Python dictionary. . What is a Set? . my_set = set([1, 2, 3, 2, 1]) print(my_set) # What do you notice in the output? # # The output only displays 1, 2, 3 and not the repeated numbers, they are in order from least to greatest # # Why do you think Sets are in the same tech talk as Hashmaps/Hashtables? # # Sets are in the same lesson because this shows how to organize the data and only shows one set of the data # . Dictionary Example . Below are just some basic features of a dictionary. As always, documentation is always the main source for all the full capablilties. . lover_album = { &quot;title&quot;: &quot;Lover&quot;, &quot;artist&quot;: &quot;Taylor Swift&quot;, &quot;year&quot;: 2019, &quot;genre&quot;: [&quot;Pop&quot;, &quot;Synth-pop&quot;], &quot;tracks&quot;: { 1: &quot;I Forgot That You Existed&quot;, 2: &quot;Cruel Summer&quot;, 3: &quot;Lover&quot;, 4: &quot;The Man&quot;, 5: &quot;The Archer&quot;, 6: &quot;I Think He Knows&quot;, 7: &quot;Miss Americana &amp; The Heartbreak Prince&quot;, 8: &quot;Paper Rings&quot;, 9: &quot;Cornelia Street&quot;, 10: &quot;Death By A Thousand Cuts&quot;, 11: &quot;London Boy&quot;, 12: &quot;Soon You&#39;ll Get Better (feat. Dixie Chicks)&quot;, 13: &quot;False God&quot;, 14: &quot;You Need To Calm Down&quot;, 15: &quot;Afterglow&quot;, 16: &quot;Me! (feat. Brendon Urie of Panic! At The Disco)&quot;, 17: &quot;It&#39;s Nice To Have A Friend&quot;, 18: &quot;Daylight&quot; } } # What data structures do you see? # # list for genre and dictionary for the tracks # # Printing the dictionary print(lover_album) . print(lover_album.get(&#39;tracks&#39;)) # or print(lover_album[&#39;tracks&#39;]) . print(lover_album.get(&#39;tracks&#39;)[4]) # or print(lover_album[&#39;tracks&#39;][4]) . lover_album[&quot;producer&quot;] = [&#39;Taylor Swift&#39;, &#39;Jack Antonoff&#39;, &#39;Joel Little&#39;, &#39;Taylor Swift&#39;, &#39;Louis Bell&#39;, &#39;Frank Dukes&#39;] # What can you change to make sure there are no duplicate producers? # # can make it into a set and set function, make lover_album[&quot;producer&quot;] = ..set([&#39;Taylor Swift, ect.&#39;])... # # Printing the dictionary print(lover_album) . lover_album[&quot;tracks&quot;].update({19: &quot;All Of The Girls You Loved Before&quot;}) # How would add an additional genre to the dictionary, like electropop? # # cannot use .update and genre is updating a list so have to figure out another way &gt;&gt;&gt; # lover_album[&quot;genre&quot;].append(&quot;electropop&quot;) # # Printing the dictionary print(lover_album) . for k,v in lover_album.items(): # iterate using a for loop for key and value print(str(k) + &quot;: &quot; + str(v)) # Write your own code to print tracks in readable format # # iterate so use k for key and v for value # . Printing Tracks to a readable format . #printing the separate genres so they can be organized #printing the title print(f&quot;TITLE: {lover_album[&#39;title&#39;]}&quot;) #print the artist aka ily TAYLOR :) print(f&quot;ARTIST: {lover_album[&#39;artist&#39;]}&quot;) #print the year print(f&quot;YEAR: {lover_album[&#39;year&#39;]}&quot;) #print the separate genres print(&quot;GENRE:&quot;) for genre in lover_album[&#39;genre&#39;]: print(f&quot;{genre}&quot;) #print all of the tracks and add the numbers and titles print(&quot;TRACKS:&quot;) for track_number, track_title in lover_album[&#39;tracks&#39;].items(): print(f&quot;{track_number}.{track_title}&quot;) . def search(): search = input(&quot;What would you like to know about the album?&quot;) if lover_album.get(search.lower()) == None: print(&quot;Invalid Search&quot;) else: print(lover_album.get(search.lower())) search() # This is a very basic code segment, how can you improve upon this code? # #also make it so that the search is better and more focused on options #this is an easy search option and not much error checking and doesn&#39;t tell or let to do something else, display property option and format output in loop menu # . def search(): search = input(&quot;What would you like to know about the album?&quot;) if lover_album.get(search.lower()) == None: print(&quot;Property not found. Please try again. n&quot;) else: print(lover_album.get(search.lower())) # Define the options as a list options = [] for k,v in lover_album.items(): # iterate using a for loop for key and value options.append(str(k.lower())) # Define the menu function def menu(): # Display the menu options print(&#39; n Select an option from the list below:&#39;) for option in options: print(option) # Get the user&#39;s choice search = input(&quot;What would you like to know about the album from the list of properties shown? Type the full word or press enter to exit.&quot;).lower() # Find the selected option in the options list selected_option = None for option in options: if search == str(option): selected_option = str(option) break if selected_option == &quot;title&quot;: print(f&#39; n Title: {lover_album[options[0]]} n&#39;) elif selected_option == &quot;artist&quot;: print(f&#39; n Artist: {lover_album[options[1]]} n&#39;) elif selected_option == &quot;year&quot;: print(f&#39; n Year: {lover_album[options[2]]} n&#39;) elif selected_option == &quot;genre&quot;: print(&quot; n Genre(s):&quot;) for g in lover_album[&#39;genre&#39;]: print(f&quot;- {g}&quot;) elif selected_option == &quot;tracks&quot;: print(&quot; n Tracks:&quot;) for track_number, track_title in lover_album[&#39;tracks&#39;].items(): print(f&quot;{track_number}) {track_title}&quot;) elif selected_option == &quot;producer&quot;: print(&quot; n Producer(s):&quot;) for p in lover_album[&#39;producer&#39;]: print(f&quot;- {p}&quot;) elif search == &quot;&quot;: return else: print(&quot; n Property not found. Please try again. n&quot;) # Repeat the menu menu() menu() . Hacks . Answer ALL questions in the code segments | Create a diagram or comparison illustration (Canva). What are the pro and cons of using this data structure? | Dictionary vs List | . | Expand upon the code given to you, possible improvements in comments | Build your own album showing features of a python dictionary . | For Mr. Yeung&#39;s class: Justify your favorite Taylor Swift song, answer may effect seed . | . Own Album . noway_album = { &quot;title&quot;: &quot;No Way!!!&quot;, # lists for the genre and the artists [] &quot;artist&quot;: [&quot;EW&quot;, &quot;KV&quot;, &quot;PBC&quot;], &quot;year&quot;: 2022, &quot;genre&quot;: [&quot;Rap&quot;, &quot;Hip-Hop&quot;], # dictionary for the tracks {} &quot;tracks&quot;: { 1: &quot;Cash Sh*t&quot;, 2: &quot;Doja&quot;, 3: &quot;The Grinch&quot;, 4: &quot;#miles&quot;, 5: &quot;Took Her To The O&quot;, 6: &quot;Top&quot;, 7: &quot;Disaster&quot;, 8: &quot;North Memphis&quot;, 9: &quot;Runnin&quot;, 10: &quot;Hardy Boys&quot;, 11: &quot;STATS&quot;, 12: &quot;Drunk And Nasty&quot;, 13: &quot;Watch This - ARIZONATEARS&quot;, 14: &quot;Fast&quot;, 15: &quot;Time To Live&quot;, 16: &quot;Twin Nem&quot;, 17: &quot;R.I.P.&quot;, 18: &quot;16&quot;, 20: &quot;ILoveUIHateU&quot;, 21: &quot;vent&quot;, 22: &quot;TURN IT UP&quot;, 23: &quot;booman&quot;, 24: &quot;D*MN HOMIE (feat. Lil Yachty)&quot;, 25: &quot;BENZO&quot;, 26: &quot;Maytag (Tax Free)&quot;, 27: &quot;HONEST&quot;, 28: &quot;Tonka 2&quot;, 29: &quot;Dreaming&quot;, 30: &quot;Talk&quot;, } } # Printing the dictionary print(noway_album) . {&#39;title&#39;: &#39;No Way!!!&#39;, &#39;artist&#39;: [&#39;EW&#39;, &#39;KV&#39;, &#39;PBC&#39;], &#39;year&#39;: 2022, &#39;genre&#39;: [&#39;Rap&#39;, &#39;Hip-Hop&#39;], &#39;tracks&#39;: {1: &#39;Cash Sh*t&#39;, 2: &#39;Doja&#39;, 3: &#39;The Grinch&#39;, 4: &#39;#miles&#39;, 5: &#39;Took Her To The O&#39;, 6: &#39;Top&#39;, 7: &#39;Disaster&#39;, 8: &#39;North Memphis&#39;, 9: &#39;Runnin&#39;, 10: &#39;Hardy Boys&#39;, 11: &#39;STATS&#39;, 12: &#39;Drunk And Nasty&#39;, 13: &#39;Watch This - ARIZONATEARS&#39;, 14: &#39;Fast&#39;, 15: &#39;Time To Live&#39;, 16: &#39;Twin Nem&#39;, 17: &#39;R.I.P.&#39;, 18: &#39;16&#39;, 20: &#39;ILoveUIHateU&#39;, 21: &#39;vent&#39;, 22: &#39;TURN IT UP&#39;, 23: &#39;booman&#39;, 24: &#39;D*MN HOMIE (feat. Lil Yachty)&#39;, 25: &#39;BENZO&#39;, 26: &#39;Maytag (Tax Free)&#39;, 27: &#39;HONEST&#39;, 28: &#39;Tonka 2&#39;, 29: &#39;Dreaming&#39;, 30: &#39;Talk&#39;}} . def search(): search = input(&quot;What would you like to know about the album?&quot;) if noway_album.get(search.lower()) == None: print(&quot;Property not found. Please try again. n&quot;) else: print(noway_album.get(search.lower())) # Define the options as a list options = [] for k,v in noway_album.items(): # iterate using a for loop for key and value options.append(str(k.lower())) # Define the menu function def menu(): # Display the menu options print(&#39; n Select an option from the list below:&#39;) for option in options: print(option) # Get the user&#39;s choice search = input(&quot;What would you like to know about the album from the list of properties shown? Type the full word or press enter to exit.&quot;).lower() # Find the selected option in the options list selected_option = None for option in options: if search == str(option): selected_option = str(option) break if selected_option == &quot;title&quot;: print(f&#39; n Title: {noway_album[options[0]]} n&#39;) elif selected_option == &quot;artist&quot;: print(&quot; n Artist(s): &quot;) for a in noway_album[&#39;artist&#39;]: print(f&quot;- {a}&quot;) elif selected_option == &quot;year&quot;: print(f&#39; n Year: {noway_album[options[2]]} n&#39;) elif selected_option == &quot;genre&quot;: print(&quot; n Genre(s):&quot;) for g in noway_album[&#39;genre&#39;]: print(f&quot;- {g}&quot;) elif selected_option == &quot;tracks&quot;: print(&quot; n Tracks:&quot;) for track_number, track_title in noway_album[&#39;tracks&#39;].items(): print(f&quot;{track_number}) {track_title}&quot;) elif selected_option == &quot;producer&quot;: print(&quot; n Producer(s):&quot;) for p in noway_album[&#39;producer&#39;]: print(f&quot;- {p}&quot;) elif search == &quot;&quot;: return else: print(&quot; n Property not found. Please try again. n&quot;) # Repeat the menu menu() menu() . Select an option from the list below: title artist year genre tracks Title: No Way!!! Select an option from the list below: title artist year genre tracks Artist(s): - EW - KV - PBC Select an option from the list below: title artist year genre tracks Year: 2022 Select an option from the list below: title artist year genre tracks Genre(s): - Rap - Hip-Hop Select an option from the list below: title artist year genre tracks .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/03/29/DS-hashmaps.html",
            "relUrl": "/2023/03/29/DS-hashmaps.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Computer Science and Information Systems (CSIS)",
            "content": "Summary . According to the speaker, CSUSM is an excellent choice for students interested in pursuing a career in engineering or computer science. The university is known for its high-quality programs, experienced faculty, and modern facilities. Additionally, CSUSM is located in a region that is home to many thriving tech companies, providing students with opportunities to gain practical experience and network with industry professionals. . The speaker also emphasized the value of a CSUSM education in terms of career prospects. Graduates of the engineering and computer science program are in high demand, and many go on to work for top companies in the tech industry. Furthermore, CSUSM has a strong record of alumni success, with graduates often achieving high salaries and positions of leadership. . Overall, the speech made a compelling case for why students interested in engineering or computer science should consider joining CSUSM. With its exceptional programs, talented faculty, and supportive community, the university seems like an excellent choice for those looking to build a successful career in these fields. . STEM AT CSUSM . Speakers . Speakers: . John does computer science and recently graduated | Ashley degree in applied physics and recently graduated | . Ashley: . Works in quantum computing group | Took APPhysics and got a D in first trimester but kept doing it cause she loved it | Wasn&#39;t easy transition and failed Calc 1 and 3 | Never let the failures define her and kept going on | Inspired to go for a PHD for material sciences and engineering | Doesn&#39;t matter if bad score or struggle since they don&#39;t define | CSUSM was a great support system and opened many doors for her | . John: . From Escondido | Was a diliquent | Started at Palomar college the week after graduating | Math and COmputer science | During pandemic started CSUSM | Was interesting since only saw campus the last trimester there | 6 years to get PHD and is taking a mini gap year | Computer science degree is versitile | . Fun Facts . One of the newer Cal States and is the 21 out of 23 | Lots of new buildings and there are more to come | Lots of new buildings for engineering and biology | Highest turnover from social economic status | San Diego has lots of industries wanting to hire new students | Lots of stairs (LEG DAY!) | . Path Ways . Chemical Education | Minor in electronics | Minor in applied physics | Biological Sciences | Wildlife Science | Computer Science | Option in Computer Information Systems | Cybersecurity | Minor in mathematics | Electrical Engineering | ECT. | . Departments . Physics Dr. Stephen Tsul&lt;/li&gt; Chemistry and BioChemistry Dr. Sajith Jayasinghe&lt;/li&gt; Biotechnology Dr. Moorthy Palanki&lt;/li&gt; Biological Sciences Dr. Matthew Escobar&lt;/li&gt; Math Dr. Amber Puha&lt;/li&gt; Computer Science Dr. Ali Ahmadina&lt;/li&gt; Software Engineering Dr.Simon Fan&lt;/li&gt; Electrical Engineering Dr.Reza Kamali Sarvestan&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Clubs . Cybersecurity Club | Robotics Club | 3D Printing Club | Women in STEM Club | Society of Women Engineer Club | Society of Physics Club | . Internship . Internships: period of work experience offered by an organization for a limited period of time . Join clubs (they give applying) | Net working | Checking your emails | Google | . Tips: . Try to avoid when they are unpaid because there is many oppertunities that provide for a paid intern | Get help from faculty | . Programs . Many can better interests, Summer Scholars Program can gain better interest and gain money 500 for full time and 300 for half time and get paid while pursuing interests . Quantum bridge program 4 week program and get paid a 15000 siphon . Research . Cancer Cell | Quantum | AI | Micro Plastics | . Paying For College . Grant vs Scholarship: A grant is government funded while a scholarship is usally privatly funded . 6 months after you graduate college you have to pay your loans . Subsided Loan does not acure interest while you are in school at lease half time or during deferment periods . Unsubsided Loans does acure interes while yo are in school and during grace periods . Life After CSUSM . Many go into the private industry like general atomics, and other companies but some go into the public like teaching since CSUSM is a very teaching based school . &lt;/div&gt; . | . | . | . | . | . | . | . | .",
            "url": "https://lunaiwa.github.io/iwazaki/presentation/2023/03/28/Presentation.html",
            "relUrl": "/presentation/2023/03/28/Presentation.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "CPT Project Plan",
            "content": "March . Week 1 . Create a design mockup: Use wireframes, flowcharts, and other design tools to create a visual representation of the feature. This will help you determine the layout, functionality, and user flow. . Make a new repository for the project and add the formatting . April . Week 2 . Develop the feature: Once you have a design mockup, you can start developing the feature. This may involve coding, testing, and debugging. . Week 3 . Test and iterate: Test the feature thoroughly to ensure that it works as intended. Make any necessary changes and continue testing until the feature is ready to be launched. . Week 4 . Launch the feature: Once the feature is ready, launch it on the website. Monitor its performance and make any necessary adjustments based on user feedback. . Have peers use the feature and give feedback to the feature . Week 5 . Use the grading guidelines of College Board . Evaluate the feature: After the feature has been live for a while, evaluate its success. Use analytics and user feedback to determine if it met the goals you set earlier. .",
            "url": "https://lunaiwa.github.io/iwazaki/cpt/2023/03/26/CPT.html",
            "relUrl": "/cpt/2023/03/26/CPT.html",
            "date": " • Mar 26, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Creating a Database",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/20/database.html",
            "relUrl": "/apcsp/2023/03/20/database.html",
            "date": " • Mar 20, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Big Idea 2 Test Corrections",
            "content": "Q21 Museum photograph spreadsheet . Assume that applying either of the filters will not change the relative order of the rows remaining in the spreadsheet. . (B) Filter by photographer then year then sort by year . Filtering by photographer will remove any entries with unknown photographers. Filtering by year will remove any entries with unknown years. Sorting by year will sort the remaining entries in column C from least to greatest, putting the photograph with the lowest year value in the first row of the spreadsheet. . Q23 Radio Show Spreadsheet . A student wants to count the number of shows that meet both of the following criteria. . Is a talk show Is on Saturday or Sunday For a given row in the spreadsheet, suppose genre contains the genre as a string and day contains the day as a string. Which of the following expressions will evaluate to true if the show should be counted and evaluates to false otherwise? . (B) (genre = &quot;talk&quot;) AND ((day = &quot;Saturday&quot;) OR (day = &quot;Sunday&quot;)) . Correct. For a show to be counted, the value of genre must be &quot;talk&quot; and the value of day must be &quot;Saturday&quot; or &quot;Sunday&quot;. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/19/bigidea2.html",
            "relUrl": "/apcsp/2023/03/19/bigidea2.html",
            "date": " • Mar 19, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . The Tri 2 Final Project is an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . What is the purpose of identity Column in SQL database? describes the different rows and records of the data | What is the purpose of a primary key in SQL database? The uid is treated as the key because that is what we use as the key in coding but the primary key is id (cen be achieved by making it unique). The data base primary key is the row or record number like 012345. | What are the Data Types in SQL table? | . A database schema is a blueprint or plan that outlines the structure of a database. It defines how data is organized, stored, and accessed within a database system. The schema includes a description of the tables, columns, relationships, and constraints that are used to store and manipulate data. . | An identity column is a column in a SQL database that automatically generates a unique numeric value for each new row that is inserted into the table. It is commonly used as a primary key for the table and ensures that each row has a unique identifier. . | A primary key in a SQL database is a column or set of columns that uniquely identifies each row in a table. It is used to enforce data integrity by ensuring that each row is uniquely identifiable and cannot be duplicated. The primary key is often used as a foreign key in other tables to establish relationships between data. . | SQL table data types define the type of data that can be stored in a particular column of a table. Common data types in SQL include: . | Integer: stores whole numbers Float/Double: stores floating-point numbers with decimal values Char/Varchar: stores strings of characters with a fixed or variable length Date/Time: stores date and time values Boolean: stores true/false values Binary: stores binary data such as images or files. . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; import sqlite3 #change to database=&#39;instance/sqlite.db&#39; database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # a schema is a different data base property # Close the database connection #meta data is a data that describes data conn.close() schema() . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? Connection object is the sqlite3.db and it makes a conn which is a variable data type. The conn extanciates the object which connects to the database. And connects to it in order for it to interact with the database. . | Same for cursor object? . | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? . | Is &quot;results&quot; an object? How do you know? . | . A connection object is an object used in programming to connect to a database. After researching, I believe that a connection object is responsible for establishing a connection to a database and provides methods for executing SQL statements and managing transactions. . | Similarly, a cursor object is an object used in programming to interact with the results of a SQL query. It allows you to iterate over the rows returned by a query and perform operations such as updating or deleting data. . | The attributes of a connection object and a cursor object can vary depending on the specific programming language and database being used. However, common attributes of a connection object in Python&#39;s sqlite3 module include database, row_factory, and isolation_level. Common attributes of a cursor object include description, rowcount, and lastrowid. . | &quot;Results&quot; alone is not enough information to determine whether it is an object or not. It could be a variable or a function, for example. However, if &quot;results&quot; refers to the output of a SQL query, then it is likely an object, such as a list of tuples or a pandas DataFrame. . | import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM cars&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . (1, &#39;274920&#39;, &#39;Tesla&#39;, &#39;SUV&#39;, &#39;111000&#39;, &#39;red&#39;) (2, &#39;285039&#39;, &#39;Tesla&#39;, &#39;Crossover&#39;, &#39;334000&#39;, &#39;grey&#39;) (3, &#39;682100&#39;, &#39;Subaru&#39;, &#39;Convertible&#39;, &#39;450000&#39;, &#39;white&#39;) (4, &#39;472940&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;270000&#39;, &#39;blue&#39;) (5, &#39;819408&#39;, &#39;Tesla&#39;, &#39;Minivan&#39;, &#39;150000&#39;, &#39;orange&#39;) (6, &#39;159502&#39;, &#39;Honda&#39;, &#39;Hatchback&#39;, &#39;603000&#39;, &#39;black&#39;) (8, &#39;120934&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;234000&#39;, &#39;Blue&#39;) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . The create() function in SQL can vary depending on the specific database management system being used. However, generally speaking, the CREATE TABLE statement is used to create a new table in a database. In the two SQL lessons, both implementations use the CREATE TABLE statement to create a new table. One difference between the two implementations is that in the first lesson, the data types for each column are specified explicitly, while in the second lesson, the data types are inferred based on the values in the first row of the table. This can be an advantage in the second implementation because it allows for more flexibility in the data types used in the table. On the other hand, explicitly specifying the data types can help ensure data integrity and prevent errors. . | The purpose of the SQL INSERT statement is to insert new rows of data into a table. It is used to add new data to an existing table or create a new table with initial data. The INSERT statement allows you to specify the values to be inserted for each column in the table. This is different from the init method in object-oriented programming, which is used to initialize an object&#39;s attributes with specific values when the object is created. The INSERT statement is used to add data to a table, while init is used to initialize an object&#39;s attributes with specific values. . | import sqlite3 def create(): license = input(&quot;Enter your license plate:&quot;) maker = input(&quot;Enter your car maker:&quot;) model = input(&quot;Enter your car model:&quot;) price = input(&quot;Enter the price of your car:&quot;) color = input(&quot;Enter the color of your car:&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO cars (_license, _maker, _model, _price, _color) VALUES (?, ?, ?, ?, ?)&quot;, (license, maker, model, price, color)) # Commit the changes to the database conn.commit() print(f&quot;A new car record {license} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() create() . A new car record 123456 has been created . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): license = input(&quot;Enter license to update&quot;) maker = input(&quot;Enter updated maker&quot;) if len(maker) &lt; 2: message = &quot;error&quot; maker = &#39;xxx&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE cars SET _maker = ? WHERE _license = ?&quot;, (maker, license)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No license {license} was not found in the table&quot;) else: print(f&quot;The row with license {license} the maker has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() update() . The row with license 123456 the maker has been successfully updated . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | What is the &quot;f&quot; and {uid} do? | . The DELETE operation in SQL can be dangerous if not used carefully, as it permanently removes data from a table. If you accidentally delete data that is important or critical to your application, it can result in data loss and potential business disruption. It is important to always use caution when performing DELETE operations and to have proper backups in place in case of accidental data loss. . | In the context of a Python script, the &quot;f&quot; likely stands for &quot;format string,&quot; which is a way of dynamically creating strings that contain variable values. The {uid} is a placeholder for the value of the uid variable, which is a user input. By using an f-string and placing the variable inside curly braces, the value of the variable is automatically substituted into the string at runtime. In other words, the f-string allows you to create a dynamic SQL statement that includes the user input as a parameter. This can help prevent SQL injection attacks and improve the security of the application. . | import sqlite3 def delete(): license = input(&quot;Enter license to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM cars WHERE _license = ?&quot;, (license,)) if cursor.rowcount == 0: # The not found print(f&quot;No license {license} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with license {license} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() delete() . The row with license 123456 was successfully deleted . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Could you refactor this menu? Make it work with a List? | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . A new car record 123456 has been created (1, &#39;274920&#39;, &#39;Tesla&#39;, &#39;SUV&#39;, &#39;111000&#39;, &#39;red&#39;) (2, &#39;285039&#39;, &#39;Tesla&#39;, &#39;Crossover&#39;, &#39;334000&#39;, &#39;grey&#39;) (3, &#39;682100&#39;, &#39;Subaru&#39;, &#39;Convertible&#39;, &#39;450000&#39;, &#39;white&#39;) (4, &#39;472940&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;270000&#39;, &#39;blue&#39;) (5, &#39;819408&#39;, &#39;Tesla&#39;, &#39;Minivan&#39;, &#39;150000&#39;, &#39;orange&#39;) (6, &#39;159502&#39;, &#39;Honda&#39;, &#39;Hatchback&#39;, &#39;603000&#39;, &#39;black&#39;) (8, &#39;120934&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;234000&#39;, &#39;Blue&#39;) (9, &#39;123456&#39;, &#39;Honda&#39;, &#39;Civic&#39;, &#39;30000&#39;, &#39;Blue&#39;) (1, &#39;274920&#39;, &#39;Tesla&#39;, &#39;SUV&#39;, &#39;111000&#39;, &#39;red&#39;) (2, &#39;285039&#39;, &#39;Tesla&#39;, &#39;Crossover&#39;, &#39;334000&#39;, &#39;grey&#39;) (3, &#39;682100&#39;, &#39;Subaru&#39;, &#39;Convertible&#39;, &#39;450000&#39;, &#39;white&#39;) (4, &#39;472940&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;270000&#39;, &#39;blue&#39;) (5, &#39;819408&#39;, &#39;Tesla&#39;, &#39;Minivan&#39;, &#39;150000&#39;, &#39;orange&#39;) (6, &#39;159502&#39;, &#39;Honda&#39;, &#39;Hatchback&#39;, &#39;603000&#39;, &#39;black&#39;) (8, &#39;120934&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;234000&#39;, &#39;Blue&#39;) (9, &#39;123456&#39;, &#39;Honda&#39;, &#39;Civic&#39;, &#39;30000&#39;, &#39;Blue&#39;) The row with license 123456 the maker has been successfully updated (1, &#39;274920&#39;, &#39;Tesla&#39;, &#39;SUV&#39;, &#39;111000&#39;, &#39;red&#39;) (2, &#39;285039&#39;, &#39;Tesla&#39;, &#39;Crossover&#39;, &#39;334000&#39;, &#39;grey&#39;) (3, &#39;682100&#39;, &#39;Subaru&#39;, &#39;Convertible&#39;, &#39;450000&#39;, &#39;white&#39;) (4, &#39;472940&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;270000&#39;, &#39;blue&#39;) (5, &#39;819408&#39;, &#39;Tesla&#39;, &#39;Minivan&#39;, &#39;150000&#39;, &#39;orange&#39;) (6, &#39;159502&#39;, &#39;Honda&#39;, &#39;Hatchback&#39;, &#39;603000&#39;, &#39;black&#39;) (8, &#39;120934&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;234000&#39;, &#39;Blue&#39;) (9, &#39;123456&#39;, &#39;Ford&#39;, &#39;Civic&#39;, &#39;30000&#39;, &#39;Blue&#39;) The row with license 123456 was successfully deleted (1, &#39;274920&#39;, &#39;Tesla&#39;, &#39;SUV&#39;, &#39;111000&#39;, &#39;red&#39;) (2, &#39;285039&#39;, &#39;Tesla&#39;, &#39;Crossover&#39;, &#39;334000&#39;, &#39;grey&#39;) (3, &#39;682100&#39;, &#39;Subaru&#39;, &#39;Convertible&#39;, &#39;450000&#39;, &#39;white&#39;) (4, &#39;472940&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;270000&#39;, &#39;blue&#39;) (5, &#39;819408&#39;, &#39;Tesla&#39;, &#39;Minivan&#39;, &#39;150000&#39;, &#39;orange&#39;) (6, &#39;159502&#39;, &#39;Honda&#39;, &#39;Hatchback&#39;, &#39;603000&#39;, &#39;black&#39;) (8, &#39;120934&#39;, &#39;Lexus&#39;, &#39;Sedan&#39;, &#39;234000&#39;, &#39;Blue&#39;) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Create a new Table or do something new, sqlite documentation | In implementation in previous bullet, do you see procedural abstraction? | . &lt;/div&gt; . .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "2.3 College Board Hacks",
            "content": "import pandas as pd # always use when .json or using data . df = pd.read_json(&#39;files/init.json&#39;) # reading print(df) . Number License Plate Phone Number 0 1 1234567 858.234234 1 2 8901234 858.238346 2 3 1234567 908.234234 3 4 2345678 909.465728 4 5 4567890 490.234758 5 6 1357924 294.868329 . print(df[[&#39;Number&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;License Plate&#39;,&#39;Phone Number&#39;]].to_string(index=False)) . Number 0 1 1 2 2 3 3 4 4 5 5 6 License Plate Phone Number 1234567 858.234234 8901234 858.238346 1234567 908.234234 2345678 909.465728 4567890 490.234758 1357924 294.868329 . print(df.sort_values(by=[&#39;License Plate&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;Phone Number&#39;], ascending=False)) . Number License Plate Phone Number 0 1 1234567 858.234234 2 3 1234567 908.234234 5 6 1357924 294.868329 3 4 2345678 909.465728 4 5 4567890 490.234758 1 2 8901234 858.238346 Number License Plate Phone Number 3 4 2345678 909.465728 2 3 1234567 908.234234 1 2 8901234 858.238346 0 1 1234567 858.234234 4 5 4567890 490.234758 5 6 1357924 294.868329 . print(df[df.Number &gt; 3.00]) . Number License Plate Phone Number 3 4 2345678 909.465728 4 5 4567890 490.234758 5 6 1357924 294.868329 . print(df[df.Number == df.Number.max()]) print() print(df[df.Number == df.Number.min()]) . Number License Plate Phone Number 5 6 1357924 294.868329 Number License Plate Phone Number 0 1 1234567 858.234234 . . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;number&quot;: [0,1,2], &quot;phone&quot;: [1234567, 8901234, 1234567] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;user1&quot;, &quot;user2&quot;, &quot;user3&quot;]) print(df) . -Dict_to_DF number phone 0 0 1234567 1 1 8901234 2 2 1234567 -Dict_to_DF_labels-- number phone user1 0 1234567 user2 1 8901234 user3 2 1234567 . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;user1&quot;, &quot;user3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;user1&quot;]) . -Examine Selected Rows number phone user1 0 1234567 user3 2 1234567 --Examine Single Row-- number 0 phone 1234567 Name: user1, dtype: int64 . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, user1 to user3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 number 3 non-null int64 1 phone 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/initials.csv&#39;).sort_values(by=[&#39;number&#39;], ascending=False) print(&quot;--Users&quot;) print(df.head(10)) . --Users number license phone 5 5 1357924 294.868329 4 4 4567890 909.465728 3 3 1234567 908.234234 2 2 8901234 858.238346 1 1 1234567 858.234234 0 0 4567890 490.234758 .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/13/np.html",
            "relUrl": "/apcsp/2023/03/13/np.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. . Focus on objects and objects as being data . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? | . Flask app object | SQLAlchemy object | # see the info on the configs because the data is translated, app is assigned the attributes... called setters &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # app and db were used throughout the year # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; # made a db and got it started db = SQLAlchemy() # break point mean wan to examine the things above which have already happened # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class | class User purpose | db.Model inheritance | init method | @property, @.setter&lt;/li&gt; additional methods | &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash class Car(db.Model): __tablename__ = &#39;cars&#39; id = db.Column(db.Integer, primary_key=True) _license = db.Column(db.String(255), unique=True, nullable=False) _maker = db.Column(db.String(255), unique=False, nullable=False) _model = db.Column(db.String(255), unique=False, nullable=False) _price = db.Column(db.String(255), unique=False, nullable=False) _color = db.Column(db.String(255), unique=False, nullable=False) def __init__(self, license, maker, model, price, color): self._license = license self._maker = maker self._model = model self._price = price self._color = color # license @property def license(self): return self._license @license.setter def license(self, license): self._license = license def is_license(self, license): return self._license == license # maker @property def maker(self): return self._maker @maker.setter def maker(self, maker): self._maker = maker # model @property def model(self): return self._model @model.setter def model(self, model): self._model = model # price @property def price(self): return self._price @price.setter def price(self, price): self._price = price # color @property def color(self): return self._color @color.setter def color(self, color): self._color = color def __str__(self): return json.dumps(self.read()) # new table def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;license&quot;: self.license, &quot;maker&quot;: self.maker, &quot;model&quot;: self.model, &quot;price&quot;: self.price, &quot;color&quot;: self.color } # CRUD update: updates user name, password, phone # returns self def update(self, license=&quot;&quot;, maker=&quot;&quot;, model=&quot;&quot;, price=&quot;&quot;, color=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(license) &gt; 0: self.license = license if len(maker) &gt; 0: self.maker = maker if len(model) &gt; 0: self.model = model if len(price) &gt; 0: self.price = price if len(color) &gt; 0: self.set_phone(color) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? | . Create All Tables from db Object | User Object Constructors | Try / Except | def initCars(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; c1 = Car(license=&#39;274920&#39;, maker=&#39;Toyota&#39;, model=&#39;SUV&#39;, price=&#39;111000&#39;, color=&#39;red&#39;) c2 = Car(license=&#39;285039&#39;, maker=&#39;Tesla&#39;, model=&#39;Crossover&#39;, price=&#39;334000&#39;, color=&#39;grey&#39;) c3 = Car(license=&#39;682100&#39;, maker=&#39;Subaru&#39;, model=&#39;Convertible&#39;, price=&#39;450000&#39;, color=&#39;white&#39;) c4 = Car(license=&#39;472940&#39;, maker=&#39;Lexus&#39;, model=&#39;Sedan&#39;, price=&#39;270000&#39;, color=&#39;blue&#39;) c5 = Car(license=&#39;819408&#39;, maker=&#39;Tesla&#39;, model=&#39;Minivan&#39;, price=&#39;150000&#39;, color=&#39;orange&#39;) c6 = Car(license=&#39;159502&#39;, maker=&#39;Honda&#39;, model=&#39;Hatchback&#39;, price=&#39;603000&#39;, color=&#39;black&#39;) cars = [c1, c2, c3, c4, c5, c6] for car in cars: try: object = car.create() print(f&quot;New Data For {object.license}&quot;) except IntegrityError: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist duplicate {car.license}.&quot;) initCars() . New Data For 274920 New Data For 285039 New Data For 682100 New Data For 472940 New Data For 819408 New Data For 159502 . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following | . User.query.filter_by | user.password | def find_by_license(license): with app.app_context(): car = Car.query.filter_by(_license=license).first() return car # returns user object # Check credentials by finding user and verify password def check_credentials(license, maker): # query email and return user record car = find_by_license(license) if car == None: return False if (car.is_maker(maker)): return True return False check_credentials(&quot;274920&quot;, &quot;Toyota&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following | . user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | def create(): # optimize user time to see if uid exists license = input(&quot;Enter your license plate:&quot;) car = find_by_license(license) try: print(&quot;Found n&quot;, car.read()) return except: pass # keep going # request value that ensure creating valid object maker = input(&quot;Enter the maker of your car:&quot;) model = input(&quot;Enter the model of your car:&quot;) price = input(&quot;Enter the price of your car:&quot;) color = input(&quot;Enter color of your car:&quot;) # Initialize User object before date car = Car(license=license, maker=maker, model=model, price=price, color=color ) # write object to database with app.app_context(): try: object = car.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {license}&quot;) create() . Created {&#39;id&#39;: 7, &#39;license&#39;: &#39;123456&#39;, &#39;maker&#39;: &#39;Tesla&#39;, &#39;model&#39;: &#39;SUV&#39;, &#39;price&#39;: &#39;234000&#39;, &#39;color&#39;: &#39;red&#39;} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following | . User.query.all | json_ready assignment | # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = Car.query.all() json_ready = [car.read() for car in table] # each user adds user.read() to list return json_ready read() . [{&#39;id&#39;: 1, &#39;license&#39;: &#39;274920&#39;, &#39;maker&#39;: &#39;Toyota&#39;, &#39;model&#39;: &#39;SUV&#39;, &#39;price&#39;: &#39;111000&#39;, &#39;color&#39;: &#39;red&#39;}, {&#39;id&#39;: 2, &#39;license&#39;: &#39;285039&#39;, &#39;maker&#39;: &#39;Tesla&#39;, &#39;model&#39;: &#39;Crossover&#39;, &#39;price&#39;: &#39;334000&#39;, &#39;color&#39;: &#39;grey&#39;}, {&#39;id&#39;: 3, &#39;license&#39;: &#39;682100&#39;, &#39;maker&#39;: &#39;Subaru&#39;, &#39;model&#39;: &#39;Convertible&#39;, &#39;price&#39;: &#39;450000&#39;, &#39;color&#39;: &#39;white&#39;}, {&#39;id&#39;: 4, &#39;license&#39;: &#39;472940&#39;, &#39;maker&#39;: &#39;Lexus&#39;, &#39;model&#39;: &#39;Sedan&#39;, &#39;price&#39;: &#39;270000&#39;, &#39;color&#39;: &#39;blue&#39;}, {&#39;id&#39;: 5, &#39;license&#39;: &#39;819408&#39;, &#39;maker&#39;: &#39;Tesla&#39;, &#39;model&#39;: &#39;Minivan&#39;, &#39;price&#39;: &#39;150000&#39;, &#39;color&#39;: &#39;orange&#39;}, {&#39;id&#39;: 6, &#39;license&#39;: &#39;159502&#39;, &#39;maker&#39;: &#39;Honda&#39;, &#39;model&#39;: &#39;Hatchback&#39;, &#39;price&#39;: &#39;603000&#39;, &#39;color&#39;: &#39;black&#39;}, {&#39;id&#39;: 7, &#39;license&#39;: &#39;123456&#39;, &#39;maker&#39;: &#39;Tesla&#39;, &#39;model&#39;: &#39;SUV&#39;, &#39;price&#39;: &#39;234000&#39;, &#39;color&#39;: &#39;red&#39;}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Add Update functionality to this blog. | Add Delete functionality to this blog. | . Update . &lt;/div&gt; | .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Extracting Information and Compressing Information",
            "content": "Data Compression Quiz 1-3 . . Lossless Compression : TIFF or Tagged Image File Format are lossless images files meaning that they do not need to compress or lose any image quality or information (although there are options for compression), allowing for very high-quality images but also larger file sizes. . The &#39;lassen volcano&#39; will be lossless compression due to the complicated nature of the image which means it requires more time to render and uses many different colors compared the the green and blue squares which are small and just one color. . Lossy Compression : Lossy compression refers to compression in which some of the data from the original file (JPEG) is lost. The process is irreversible, once you convert to lossy, you can&#39;t go back. And the more you compress it, the more degradation occurs. JPEGs and GIFs are both lossy image formats. . The &#39;green square&#39; and the &#39;blue square&#39; will be lossy compression ue to the less complicated nature to the image. These are just two colors which requires less rendering. . . Q1 : Advantage of lossless over lossy compression . Skill : 1.D Unit 2.2 Daily Video 1 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Which of the following is an advantage of a lossless compression algorithm over a lossy compression algorithm? . (A) A lossless compression algorithm can guarantee that compressed information is kept secure, while a lossy compression algorithm cannot. . (B) A lossless compression algorithm can guarantee reconstruction of original data, while a lossy compression algorithm cannot. . (C) A lossless compression algorithm typically allows for faster transmission speeds than does a lossy compression algorithm. . (D) A lossless compression algorithm typically provides a greater reduction in the number of bits stored or transmitted than does a lossy compression algorithm. . (A) Wrong - Incorrect. The ability to keep data secure is not a primary function of a compression algorithm. . (B) Correct - Correct. Lossless compression algorithms are guaranteed to be able to reconstruct the original data, while lossy compression algorithms are not. . (C) Wrong - Incorrect. In situations where transmission time is maximally important, lossy compression algorithms are typically chosen, as lossy compression typically provides a greater reduction in file size. . (D) Wrong - Incorrect. Lossless compression algorithms usually achieve less reduction in the number of bits stored or transmitted than do lossy compression algorithms. . . Q2 Compression algorithm for storing a data file . Skill : 1.D Unit 2.2 Daily Video 1 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A user wants to save a data file on an online storage site. The user wants to reduce the size of the file, if possible, and wants to be able to completely restore the file to its original version. Which of the following actions best supports the user’s needs? . (A) Compressing the file using a lossless compression algorithm before uploading it . (B) Compressing the file using a lossy compression algorithm before uploading it . (C) Compressing the file using both lossy and lossless compression algorithms before uploading it . (D) Uploading the original file without using any compression algorithm . (A) Correct - Correct. Lossless compression algorithms allow for complete reconstruction of the original data and typically reduce the size of the data. . (B) Wrong - Incorrect. While a lossy compression algorithm will reduce the size of the data, it does not allow for complete reconstruction of the original data. . (C) Wrong - Incorrect. Applying lossy compression the to file will prevent the user from restoring it to its original version. . (D) Wrong - Incorrect. Uploading the original file allows complete reconstruction of the original data but does not reduce the size of the file. . . Q3 True statement about compression . Skill : 1.D Unit 2.2 Daily Video 1 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A programmer is developing software for a social media platform. The programmer is planning to use compression when users send attachments to other users. Which of the following is a true statement about the use of compression? . (A) Lossless compression of video files will generally save more space than lossy compression of video files. . (B) Lossless compression of an image file will generally result in a file that is equal in size to the original file. . (C) Lossy compression of an image file generally provides a greater reduction in transmission time than lossless compression does. . (D) Sound clips compressed with lossy compression for storage on the platform can be restored to their original quality when they are played. . (A) Wrong - Incorrect. Lossy data compression algorithms can usually provide a greater reduction in the space required than lossless compression algorithms can. . (B) Wrong - Incorrect. Lossless compression usually results in a file that is smaller in size than the original file. . (C) Correct - Correct. Although fewer bits may be stored, information is not necessarily lost when lossy compression is applied to an image. . (D) Wrong - Incorrect. Lossy compression algorithms allow only an approximation of the original data to be reconstructed. . . . Extracting Information from Data Quiz 1-6 . . Q1 Challenge due to lack of unique ID . Skill : 5.D Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A researcher is analyzing data about students in a school district to determine whether there is a relationship between grade point average and number of absences. The researcher plans on compiling data from several sources to create a record for each student. . The researcher has access to a database with the following information about each student. . Last name | First name | Grade level (9, 10, 11, or 12) | Grade point average (on a 0.0 to 4.0 scale) | . The researcher also has access to another database with the following information about each student. . First name | Last name | Number of absences from school | Number of late arrivals to school | . Upon compiling the data, the researcher identifies a problem due to the fact that neither data source uses a unique ID number for each student. Which of the following best describes the problem caused by the lack of unique ID numbers? . (A) Students who have the same name may be confused with each other. . (B) Students who have the same grade point average may be confused with each other. . (C) Students who have the same grade level may be confused with each other. . (D) Students who have the same number of absences may be confused with each other. . (A) Correct - Correct. A unique identifier would be required in order to distinguish between two students with the same first and last names. . (B) Wrong - Incorrect. It is expected that many students in the school district have the same grade point average as each other. These students can be distinguished from each other using their first and last name, except in cases where two students have the same first and last name. . (C) Wrong - Incorrect. It is expected that many students in the school district have the grade level as each other. These students can be distinguished from each other using their first and last names, except in cases where two students have the same first and last name. . (D) Wrong - Incorrect. It is expected that many students in the school district have the same number of absences as each other. These students can be distinguished from each other using their first and last name, except in cases where two students have the same first and last name. . . Q2 Challenge in analyzing data from many counties . Skill : 5.D Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A team of researchers wants to create a program to analyze the amount of pollution reported in roughly 3,000 counties across the United States. The program is intended to combine county data sets and then process the data. Which of the following is most likely to be a challenge in creating the program? . (A) A computer program cannot combine data from different files. . (B) Different counties may organize data in different ways. . (C) The number of counties is too large for the program to process. . (D) The total number of rows of data is too large for the program to process. . (A) Wrong - Incorrect. Computer programs can accept and process multiple data files as input. . (B) Correct - Correct. It will be a challenge to clean the data from the different counties to make the data uniform. The way pollution data is captured and organized may vary significantly from county to county. . (C) Wrong - Incorrect. Even if the number of data sets is large, they can all be processed with a computer program. . (D) Wrong - Incorrect. Even if the data sets are large, they can be processed with a computer program. . . Q3 Challenges with city data entered by users . Skill : 5.D Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A student is creating a Web site that is intended to display information about a city based on a city name that a user enters in a text field. Which of the following are likely to be challenges associated with processing city names that users might provide as input? . Select two answers. . (A) Users might attempt to use the Web site to search for multiple cities. . (B) Users might enter abbreviations for the names of cities. . (C) Users might misspell the name of the city. . (D) Users might be slow at typing a city name in the text field. . (A) Wrong - Incorrect. A user entering data into the Web site to search for multiple cities does not directly affect the quality of the data. If the Web site is working as intended, users should be able to use it as many times as they want. . (B) Correct - Correct. Different users may abbreviate city names differently. This may require the student to clean the data to make it uniform before it can be processed. . (C) Correct - Correct. Misspelled city names will not be an exact match to information stored by the Web site. This may require the student to clean the data to make it uniform before it can be processed. . (D) Wrong - Incorrect. A user’s typing speed does not directly affect the quality of the data. Until a city name is entered, the Web site cannot search for information. . . Q4 Determine artist with the most concert attendees . Skill : 5.B Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A database of information about shows at a concert venue contains the following information. . Name of artist performing at the show | Date of show | Total dollar amount of all tickets sold | . Which of the following additional pieces of information would be most useful in determining the artist with the greatest attendance during a particular month? . (A) Average ticket price . (B) Length of the show in minutes . (C) Start time of the show . (D) Total dollar amount of food and drinks sold during the show . (A) Correct - Correct. The attendance for a particular show can be calculated dividing the total dollar amount of all tickets sold by the average ticket price. . (B) Wrong - Incorrect. The length of the show is not useful for determining attendance at a show. . (C) Wrong - Incorrect. The start time of the show is not useful for determining attendance at a show. . (D) Wrong - Incorrect. The total dollar amount of food and drinks sold during a show may be correlated with the attendance at the show, but cannot be used to determine the exact number of attendees. . . Q5 Information determined using dashboard metadata . Skill : 5.B Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A camera mounted on the dashboard of a car captures an image of the view from the driver’s seat every second. Each image is stored as data. Along with each image, the camera also captures and stores the car’s speed, the date and time, and the car’s GPS location as metadata. Which of the following can best be determined using only the data and none of the metadata? . (A) The average number of hours per day that the car is in use . (B) The car’s average speed on a particular day . (C) The distance the car traveled on a particular day . (D) The number of bicycles the car passed on a particular day . (A) Wrong - Incorrect. The average number of hours per day of use would be based on speed, date, and time, which are part of the metadata. . (B) Wrong - Incorrect. The calculation of average speed would be based on speed and time, which are part of the metadata. . (C) Wrong - Incorrect. The calculation of distance traveled on a particular day would be based on GPS location, date, and time, which are part of the metadata. . (D) Correct - Correct. Determining the number of bicycles the car encountered would require the use of image recognition software to examine the images collected by the camera. The images are the data collected and no metadata would be required. . . Q6 Information from student work habit survey . Skill : 5.B Unit 2.3 Daily Video 1-2 . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; A teacher sends students an anonymous survey in order to learn more about the students’ work habits. The survey contains the following questions. . On average, how long does homework take you each night (in minutes) ? | On average, how long do you study for each test (in minutes) ? | Do you enjoy the subject material of this class (yes or no) ? | . Which of the following questions about the students who responded to the survey can the teacher answer by analyzing the survey results? . I. Do students who enjoy the subject material tend to spend more time on homework each night than the other students do? II. Do students who spend more time on homework each night tend to spend less time studying for tests than the other students do? III. Do students who spend more time studying for tests tend to earn higher grades in the class than the other students do? . (A) I only . (B) III only . (C) I and II . (D) I and III . (A) Wrong - Incorrect. Question II can be answered because the teacher can detect a correlation between responses to questions 1 and 2 on the survey. . (B) Wrong - Incorrect. Question I can be answered because the teacher can detect a correlation between responses to questions 1 and 3 on the survey. Question II can be answered because the teacher can detect a correlation between responses to questions 1 and 2 on the survey. Question III cannot be answered because the survey is anonymous and the teacher cannot compare student grades with the responses to the survey questions. . (C) Correct - Correct. Question I can be answered because the teacher can detect a correlation between responses to questions 1 and 3 on the survey. Question II can be answered because the teacher can detect a correlation between responses to questions 1 and 2 on the survey. Question III cannot be answered because the survey is anonymous and the teacher cannot compare student grades with the responses to the survey questions. . (D) Wrong - Incorrect. Question II can be answered because the teacher can detect a correlation between responses to questions 1 and 2 on the survey. Question III cannot be answered because the survey is anonymous and the teacher cannot compare student grades with the responses to the survey questions. . . . &lt;/div&gt; . .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/10/CB23q.html",
            "relUrl": "/apcsp/2023/03/10/CB23q.html",
            "date": " • Mar 10, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # the grade part of the the data needs to be cleaned since some of the inputs are letters and not numbers, the gpa also needs to be cleaned cause some of the gpas may be unweighted, # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? # a good time to clean the data is when the garbage comes in and not out the less the garbage is being able to be put in the data set the better . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . print(df[[&#39;numbers&#39;]]) print() print(df[[&#39;initials&#39;]]) print() . print(df[[&#39;numbers&#39;,&#39;initials&#39;]].to_string(index=False)) . print(df.sort_values(by=[&#39;numbers&#39;], ascending=False)) print() print(df.sort_values(by=[&#39;numbers&#39;])) . df = pd.read_json(&#39;files/games.json&#39;) print(df[df.number &gt; 10]) . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/09/AP-unit2-3.html",
            "relUrl": "/apcsp/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "5.5 & 5.6 Blog",
            "content": "Notes . Qualcomm wants all derivative work to require a royalty payment payment | closed source: can not just get anywhere | open source: can be open to the public | open source idea is for the community, use, support | GPL is about the community | closed source is about capitalisim making money | Qualcome made money off of hardware and they sold phone chips using open source (their type of buisness model) | . Collaboration 5.5 . Software Licenses/Options : There are different License options, some companies may have a pay wall to their code or they only allow their company workers to access the code. While some code can be accessed to the public, many advanced code is blocked | Digital Rights : Many companies use digital rights and the &quot;Red Hat&quot; company although they had an advanced software they had released it for free, even though this happened they were the first to do it so they gained a good reputation | Legal and Ethical thoughts: Many of the code is ok that they are protected by a paywall or a company because it may be harmful if put in the wrong hands | This can limit the amount of people who are able to access said code and can be the digital divide | . | . Collaboration 5.6 . PII : personal identifyable information, examples like linkin where people show off their information to inform others about their accomplishments. These are simple types of information | . . 5.5 Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. | MIT: The community has access to the code however when they use it they must credit the owner of the code in their &quot;readme&quot; file | OPEN SOURCE: The community has access to the code and is able to use the code freely | CLOSED SOURCE: Only people who have access to the code are able to use it, it is not opened to the public hence the names &quot;closed&quot; and &quot;open&quot; source | . Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. | As a team we decided that the MIT licence was the best to use since we will be able to be cited in the code others use. We want others to use our website freely especially since we learned about the digital divide and some might want to use parts that others use. . 5.6 Reflection . Describe PII you have seen on project in CompSci Principles. | Many of the PII used in the Computer Science projects seen in the class projects are like student emails, names, and date of birth. Many of these types of information found in the class databases are simple and not as personal like a social security password . . What are your feelings about PII and your personal exposure? | PII helps websites and companies to localize users, for example I think cookies are something like PII because they collect the user data in a way and by collecting that data they make the user&#39;s experience much better. . Describe good and bad passwords? What is another step that is used to assist in authentication. | Good passwords must contain capital and lowercase letters, any type of symbol, and numbers that are NOT the user&#39;s birthday! Many people try to reuse their passwords mny times as a way of just remembering one password but if their data is given away in a data leak then almost all of the other accounts with the same password will also be leaked. If you are trying to protect really important data it is crucially important to protect it with a secure one time password. Another step that can be used is to make a security question consisting of simple questions only the user would know. . Try to describe Symmetric and Asymmetric encryption. | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | . Provide an example of encryption we used in AWS deployment. | An example of encryption that we used in the AWS deployment is the different ports and how we only specifically used a secure user and password. And Mort had only activated the ones and shut down the other things. . Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. | ALWAYS USE A VPN WHEN ON NEFARIOUS / ILLEGAL WEBSITES .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/03/08/5.55.6.html",
            "relUrl": "/apcsp%20requirements/2023/03/08/5.55.6.html",
            "date": " • Mar 8, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "2.2 Data Compression",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Luna Iwazaki&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;happyface.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Luna Iwazaki&quot;, &#39;label&#39;: &quot;Happy Face&quot;, &#39;file&#39;: &quot;happyface.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] #image to the happy face and the other for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image # imperitive think of all things need to do, write functions, and write them in that order for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Happy Face Luna Iwazaki PNG RGBA Original size: (692, 692) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from PIL import Image def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def color_image(image): width, height = image.size for x in range(width): for y in range(height): image.putpixel( (x, y), (100, 100, 255) ) return image image = Image.open(&#39;images/happyface.png&#39;) color_image(scale_image(image)) . import numpy as np from PIL import Image import matplotlib.pyplot as plt # blurring of the image use the def blur() # chat gpt has more in depth def blur(I): for i in range(1,I.shape[0]-1): for j in range(1,I.shape[1]-1): I[i,j] = (4*I[i,j] + I[i-1,j] + I[i+1,j] + I[i,j-1] + I[i,j+1])/8.0 return I img = plt.imread(&quot;images/clouds-impression.png&quot;) image = Image.open(&quot;images/clouds-impression.png&quot;) # blurring the image and changing what it looks like blur(img) blur(img) blur(img) #this is required so the image will show and not just numbers aka binary plt.imshow(img, cmap=&quot;gray&quot;) image . PIL . numpy . base64 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . Name in BASE 64 . Binary Luna &gt; 1011 101110 100111 11010 . Base 64 TG9uYQ== .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/07/AP-unit2-2.html",
            "relUrl": "/apcsp/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Hacks 2.2",
            "content": "2.2 : Data Compression and Image Lab . College Board Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Edition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) . Solve the Following . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/07/3notes.html",
            "relUrl": "/apcsp/2023/03/07/3notes.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Hacks 2.3",
            "content": "2.3 : Extracting Information from Data + Pandas . College Board Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. In blog add College Board practice problems for 2.3. . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Dataset . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/07/23notes.html",
            "relUrl": "/apcsp/2023/03/07/23notes.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "APCSP Test Corrections 3",
            "content": "Struggling on unit 3 details . Q5 Benefits of Upgraded System . 5.1 . Answer is D, Incorrect. The upgraded system selects the appropriate department based on the customer’s issue, so the customer does not have the ability to make an incorrect selection. . Q21 Detecting errors in code to sum values in a list . 1.4 . Answer is A, This option is incorrect. The program does not work as intended. On the test case [9, 1, 4, 5], the program displays 28 but the correct sum is 19. . Q31 Algorithm to open gate in parking garage . 3.6 . Answer is C, Incorrect. This algorithm will turn on the motor in some cases when the gate sensor is not activated. . Q33 Loop header to move robot to gray square . 3.8 . Answer is A, Incorrect. This code segment leaves the robot one row above its starting position and one row below the gray square. . Q36 Nested conditionals to set grade . 3.7 . Answer is B, Incorrect. Code segment I does not work correctly because it is not possible for &quot;C&quot; to be the value of grade at the end of the code segment. Code segment III also works correctly. Code segment III assigns &quot;C&quot; when the numeric score is less than 80, or &quot;B&quot; if the numeric score is not less than 80 but is less than or equal to 90, or &quot;A&quot; otherwise. . Q38 If statement code that produces the same result . 3.9 . Answer is A, Incorrect. The given code segment displays &quot;positive&quot; when num is positive, displays &quot;negative&quot; when num is negative, and displays &quot;zero&quot; when num is 0. This code segment does not produce the same result for all values of num. For example, &quot;positive zero&quot; is displayed when num is 0. . Q40 Move robot back to starting place . 3.9 . Answer is A, Incorrect. After moving forward two squares, if the robot were to turn left, then the next move forward would put the robot beyond the edge of the grid. . Q41 Using binary search on list of genetic codes . 3.11 . Answer is A, Incorrect. The values can be stored in any numerical base as long as they are sorted. . Q42 Why binary search will not work . 3.11 . Answer is B, Incorrect. A binary search will work on any sorted list, regardless of whether the list contains duplicate elements. . Q49 Crowd flow simulation . 3.16 . Answer is A, Incorrect. The model used by a simulation can be modified, both before and after running the simulation. In fact, one of the benefits of using a simulation is the ease of modification. . Q50 Which algorithms run in reasonable time . 3.17 . Answer is B, Incorrect. As the size of the list grows, the number of steps needed to sort the list grows at an exponential rate, as the number of steps is equal to 2n for a list of size n. This indicates that the algorithm does not run in a reasonable amount of time. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp/2023/03/06/APTestCorrection.html",
            "relUrl": "/apcsp/2023/03/06/APTestCorrection.html",
            "date": " • Mar 6, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "N@TM Reflection",
            "content": "Capture the Moment ! . img . img . img . Other Groups . img . Describe what they were doing .",
            "url": "https://lunaiwa.github.io/iwazaki/n@tm/2023/02/26/N@TMReflec.html",
            "relUrl": "/n@tm/2023/02/26/N@TMReflec.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "College Board Write-Up",
            "content": "Create Task . Scoring Guidelines . Create Task Examples . Feature: An user input which allows them to add their initials onto our website to indicate that they are a &quot;subscriber&quot; . 3a. . My program works to help users input their names into our database. By inputting their names into the database they are able to show their initials onto the website to show they are part of the subscribers list. By clicking onto the text box users will only be able to insert The first and last initial of your name. Due to the formatting of the text box users will only be allowed to use this format or else there will be a warning screen given to the user&#39;s input. The users then can click the input button and this adds their names into the database. . 3b. . img 2 . The user data is input into the database using the list read_user(). When the button is pressed the user input initial will be put into the database and then shown onto the website. . 3c. . picture 2 and write . 3.d .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/02/26/CollegeBoardWrite.html",
            "relUrl": "/apcsp%20requirements/2023/02/26/CollegeBoardWrite.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "5.5 & 5.6 Blog",
            "content": "Notes . Qualcomm wants all derivative work to require a royalty payment payment | closed source: can not just get anywhere | open source: can be open to the public | open source idea is for the community, use, support | GPL is about the community | closed source is about capitalisim making money | Qualcome made money off of hardware and they sold phone chips using open source (their type of buisness model) | . Collaboration 5.5 . Software Licenses/Options : There are different License options, some companies may have a pay wall to their code or they only allow their company workers to access the code. While some code can be accessed to the public, many advanced code is blocked | Digital Rights : Many companies use digital rights and the &quot;Red Hat&quot; company although they had an advanced software they had released it for free, even though this happened they were the first to do it so they gained a good reputation | Legal and Ethical thoughts: Many of the code is ok that they are protected by a paywall or a company because it may be harmful if put in the wrong hands | This can limit the amount of people who are able to access said code and can be the digital divide | . | . Collaboration 5.6 . PII : personal identifyable information, examples like linkin where people show off their information to inform others about their accomplishments. These are simple types of information | . . 5.5 Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. | MIT: The community has access to the code however when they use it they must credit the owner of the code in their &quot;readme&quot; file | OPEN SOURCE: The community has access to the code and is able to use the code freely | CLOSED SOURCE: Only people who have access to the code are able to use it, it is not opened to the public hence the names &quot;closed&quot; and &quot;open&quot; source | . Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. | As a team we decided that the MIT licence was the best to use since we will be able to be cited in the code others use. We want others to use our website freely especially since we learned about the digital divide and some might want to use parts that others use. . 5.6 Reflection . Describe PII you have seen on project in CompSci Principles. | Many of the PII used in the Computer Science projects seen in the class projects are like student emails, names, and date of birth. Many of these types of information found in the class databases are simple and not as personal like a social security password . . What are your feelings about PII and your personal exposure? | PII helps websites and companies to localize users, for example I think cookies are something like PII because they collect the user data in a way and by collecting that data they make the user&#39;s experience much better. . Describe good and bad passwords? What is another step that is used to assist in authentication. | Good passwords must contain capital and lowercase letters, any type of symbol, and numbers that are NOT the user&#39;s birthday! Many people try to reuse their passwords mny times as a way of just remembering one password but if their data is given away in a data leak then almost all of the other accounts with the same password will also be leaked. If you are trying to protect really important data it is crucially important to protect it with a secure one time password. Another step that can be used is to make a security question consisting of simple questions only the user would know. . Try to describe Symmetric and Asymmetric encryption. | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | . Provide an example of encryption we used in AWS deployment. | An example of encryption that we used in the AWS deployment is the different ports and how we only specifically used a secure user and password. And Mort had only activated the ones and shut down the other things. . Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. | ALWAYS USE A VPN WHEN ON NEFARIOUS / ILLEGAL WEBSITES .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/02/08/5.55.6.html",
            "relUrl": "/apcsp%20requirements/2023/02/08/5.55.6.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "5.3 & 5.4 Blog",
            "content": "Notes . Without admission to bias there cannot be collaboration | Collaboration = Breaking up bias and thinking about bias | Many virtual assistants have female voices | . Collaboration 5.3 . Tiktok is like the new instagram | There is more exposure to harmful things on facbook compared to tiktok | It is hard to censor on tiktok compared to facebook because there are so many videos | Female virtual assistants have more articulate vowels which makes the easier to understand | The virtual assisnant Siri can change their voice whenever they want | Tiktok influences many trends and fast fashion is boosted | Tiktok promotes crimes and unhazardly cooking practices | . Collaboration 5.4 . Have used a car API and last tri used a basketball API | Biggest discovery on Github is that you can find others so it&#39;s like a social media for code | Can make SCRUM boards and see what others have commited in a repository | The history of commits and other things can be seen by others | A lot of the top trending ones are some data that many people might use today | Car APIs are the most popular data asset/set in the voting table | . . 5.3 Reflection: . HP Computers: . It wasn&#39;t intentional because they didn&#39;t test well and they didn&#39;t use enough testers for their program. In the end the program turned unintnetionally racist | To produce a better outcome I would test with a wider variety of testers | . Most of the computer bias is mostly not intentional. CHAT GPT is unintentional and just used the websites in it&#39;s own algorithm. Most of the computer algorithms are not bias becuase they can be it&#39;s becuase they cannot be bias. THey just use whatever come up into their algorithm. But, testing can also affect the outcomes. Like the HP testing they couldn&#39;t test on different types of people with different types of skin colors. Computers are just told what they are supposed to do and what they are max capable of. . 5.4 Reflection: . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment?: . Creating a google form containing all of the main ideas, a short description of what the website does, and screen shots of the project. The then there can be a response box where people can insert what there can be added, improved, and/or removed . What about Del Norte crowdsourcing? Could your project be better with crowdsourcing?: . Yes, the project can be better with crowd sourcing. In fact some of the ideas that were sourced from the classmates during last project presentations were implemented into our project. But, crowd sourcing in Del Norte might be worse since many high schoolers are probably not thinking about buying a car. This means we need a different crowd to present this to, the adults for example, because they are far more likely to buy a car. . What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week.: . Data that my part of the project can collect is the email data. I can have viewers look at my part of the website and insert heir email into my subscriptions part of the site. I can collect data as to what types of emails I recive (e.g. @gmail, @yahoo, ect.). .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/31/5.35.4.html",
            "relUrl": "/apcsp%20requirements/2023/01/31/5.35.4.html",
            "date": " • Jan 31, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "5.1 & 5.2 Blog",
            "content": "Notes . Chat GPT keeps getting sponsored by Microsoft because they beleive it will out compete Google | Although chat GPT is a great resource to use and is very technologically advanced it has it&#39;s own flaws which is it doesn&#39;t cite it&#39;s own sources | Lots of people don&#39;t have access to technology, even us, although we live in a reletivly wealthy community our school blocks things on their wifi | . . 5.1 Reflection: . Dopamine: Today since COVID many people recive their dopamine through TikTok and short 30-10 second videos on the internet. It is hard to regulate this kind of addiction and the easiest way is just deleting Tiktok. Another way people get their dopamine is through video games. As long as the user fairly regulates their use they will be fine. . Benefits of Computers: . Easy for researchers to create simulations | Easy access to information through the internet | Easy to communicate with others even if they live far away | . Harmful Effects of Computers: . Less user privacy | Addictions to one&#39;s digital/phone | People lose their jobs to robots/automation | . 5.2 Reflection: . Lots of people can have different perspectives on how the internet is depending on which side they are on. The internet is a vast space and many different people have different perspectives because of where they are or their expericneces. Because we live in a relativly wealthy area, many of us have expericenced using a computer, have searched somthing up, or just used the internet. But, if you compare us to a less wealthy area some of the people there maybe aren&#39;t able to do things like that. . Three beneficial effects: . Easy for users to find a car of their choosing if they don&#39;t know a lot about cars | Helps user find a car that will fulfill their needs | Shows new information to users | Three harmful effects: . Can lead to more car accidents if those who are irresponsible are promoted to buy a car | Can take the job of those who promote cars | Promotes pollution and emision producing vehicles | Pros/Cons of internet blockers at routers and lack of admin passwords on lab machines at school: . Pros: . Need less management over what students are using | Less distractions during class | . Cons: . Have to use specific online tools just to bypass the blockers | Have to install a VPN when needing to use specific tools (most VPNs require a monthly costly membership) | Sometimes some useful resources for learning are blocked | . Although the cons outweigh the pros, the pros have a larger effect. I think that although we should keep the internet blockers, the school should provide VPNs for the students in the CSP class. Similar to those in engineering, they get provided INVENTOR, the students in CSP should be provided with a VPN which can only be activated during their class time by the admin/teacher. . Digital Divide: . A lot of the high paying jobs today use computers. If many with out technology don&#39;t know how to use computers they probably won&#39;t get the job because they probably are required to know how to use a computer. This means there is an inequallity to those who get jobs and those who don&#39;t. As the social gap grows wider so does the digital divide. Buying and charging the technology requires lts of money but learning how to use the technology also takes time out of people&#39;s day. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/23/5.15.2.html",
            "relUrl": "/apcsp%20requirements/2023/01/23/5.15.2.html",
            "date": " • Jan 23, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "College Board Write-Up",
            "content": "Outline of Goal Plans . Feature: The email subscription part of the CarHub website . Allows users to submit their email into our data base and recive emails from us | Their data will be stored into our database | Use a seperate API to figure out how to email the users | . This feature interacts with Mati&#39;s login and will send emails with data including Taiyo&#39;s inventory system . . Row 1 - Program Purpose and Function: . My program works to help users input their names into our database. By inputting their names into the database they are able to show their initials onto the website to show they are part of the subscribers list. By clicking onto the text box users will only be able to insert The first and last initial of your name. Due to the formatting of the text box users will only be allowed to use this format or else there will be a warning screen given to the user&#39;s input. The users then can click the input button and this adds their names into the database. . Purpose: Allows users to recive emails from our company about new information inputed into our website . Function: Users input their emails into our database . Input: The input is their email, I will have a confirming of a real email system later . Output: The user will recive emails from us . Row 2 - Data Abstraction: . The user inputs their information into the text box/form and when the button is clicked their data is automatically input into the database. Their information is carried from the database into the table in the website. Their initials are then displayed onto the website&#39;s table. The initial information in the text box will only allow initials to be input into the table, this is a measure to make sure that the user&#39;s information will not be as revealed. The text box also has restrictions which only allows the user to input letters and the &quot;.&quot; so then there won&#39;t be any numbers input into the &quot;subscriber&#39;s initials&quot; table. . First Segment: Show the user emails in the database . Second Segment: The data will be used to create emails to send to users emails in the database . Variable: Will be called the &quot;useremails&quot; . Row 3 - Managing Complexity: . Each of the user information is sorted well, . Lists: The user emails will be stored into a list and will be retrived from the database . Explanation: &quot;userinfo&quot; without the user&#39;s email information the program will not be able to email the users and in the end, not work properly . Row 4 - Procedural Abstraction: . Procedure: &quot;user_email&quot; collects the data provided by the user and inserts it into the database . Contribution: &quot;user_email&quot; allows the user to input their data into the database or used for other info for the users . Row 5 - Testing: . Call 1: A wrong email which isn&#39;t &#39;real&#39; Result: The API creates a text anouncment which shows that the email isn&#39;t valid . Call 2: A right email/ &#39;real&#39; email Result: the email is accepted into the database and shows it is inside of the database . . Video Demonstration Considerations . My video will be similar to those with the full points. Using the CSP grading that we did these last two weeks I will be able to identify whether or not my project fulfills the goals. I will input a right and wrong email and show that my API can identify a real email from a fake email. I will also show my API which shows the emails being input into the database. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/21/CBProjectApproval.html",
            "relUrl": "/apcsp%20requirements/2023/01/21/CBProjectApproval.html",
            "date": " • Jan 21, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "College Board Test Corrections",
            "content": "Q8 Laptops being borrowed from a school library . This option is correct. If the difference between the variable borrows and the variable returns is 0, they must have the same value. This would indicate that each time the particular laptop was borrowed it was returned, which would indicate the laptop is not currently borrowed. . Q10 Boolean expressions equivalent to num greater than or equal to 15 . The expression (num greater than 15) or (num equals 15) evaluates to true if (num greater than 15) is true, or if (num equals 15) is true, or if both are true. The original expression (the expression in this problem) evaluates to true if numis greater than or equal to 15. . Q33 Find maximum value algorithms . B is incorrect. Algorithm I does not work correctly when the maximum value is less than -1. Algorithm II works correctly in all cases. . Q42 Car manufacturer simulations . C is incorrect. While statements II and III are correct, statement I is also correct because software simulations can usually be built before a prototype car. . Q49 What problems can be solved with algorithms . C is incorrect. Some problems cannot be solved with an algorithm for all possible inputs. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/21/CBCorrections.html",
            "relUrl": "/apcsp%20requirements/2023/01/21/CBCorrections.html",
            "date": " • Jan 21, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Title",
            "content": "&quot;&quot;&quot; database dependencies to support sqliteDB examples &quot;&quot;&quot; from random import randrange from datetime import date import os, base64 import json from __init__ import app, db from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into Python shell and follow along &#39;&#39;&#39; # Define the Post class to manage actions in &#39;posts&#39; table, with a relationship to &#39;users&#39; table class Post(db.Model): __tablename__ = &#39;posts&#39; # Define the Notes schema id = db.Column(db.Integer, primary_key=True) note = db.Column(db.Text, unique=False, nullable=False) image = db.Column(db.String, unique=False) # Define a relationship in Notes Schema to userID who originates the note, many-to-one (many notes to one user) userID = db.Column(db.Integer, db.ForeignKey(&#39;users.id&#39;)) # Constructor of a Notes object, initializes of instance variables within object def __init__(self, id, note, image): self.userID = id self.note = note self.image = image # Returns a string representation of the Notes object, similar to java toString() # returns string def __repr__(self): return &quot;Notes(&quot; + str(self.id) + &quot;,&quot; + self.note + &quot;,&quot; + str(self.userID) + &quot;)&quot; # CRUD create, adds a new record to the Notes table # returns the object added or None in case of an error def create(self): try: # creates a Notes object from Notes(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Notes table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read, returns dictionary representation of Notes object # returns dictionary def read(self): # encode image path = app.config[&#39;UPLOAD_FOLDER&#39;] file = os.path.join(path, self.image) file_text = open(file, &#39;rb&#39;) file_read = file_text.read() file_encode = base64.encodebytes(file_read) return { &quot;id&quot;: self.id, &quot;userID&quot;: self.userID, &quot;note&quot;: self.note, &quot;image&quot;: self.image, &quot;base64&quot;: str(file_encode) } # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # Defines a relationship between User record and Notes table, one-to-many (one user to many notes) posts = db.relationship(&quot;Post&quot;, cascade=&#39;all, delete&#39;, backref=&#39;users&#39;, lazy=True) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=date.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) in human readable form, uses getter # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, &quot;posts&quot;: [post.read() for post in self.posts] } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;John Mortensen&#39;, uid=&#39;jm1021&#39;, dob=date(1959, 10, 21)) users = [u1, u2, u3, u4, u5] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add a few 1 to 4 notes per user&#39;&#39;&#39; for num in range(randrange(1, 4)): note = &quot;#### &quot; + user.name + &quot; note &quot; + str(num) + &quot;. n Generated by test data.&quot; user.posts.append(Post(id=user.id, note=note, image=&#39;ncs_logo.png&#39;)) &#39;&#39;&#39;add user/post data to table&#39;&#39;&#39; user.create() except IntegrityError: &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; db.session.remove() print(f&quot;Records exist, duplicate email, or error: {user.uid}&quot;) . ModuleNotFoundError Traceback (most recent call last) Cell In[5], line 7 4 import os, base64 5 import json -&gt; 7 from __init__ import app, db 8 from sqlalchemy.exc import IntegrityError 9 from werkzeug.security import generate_password_hash, check_password_hash ModuleNotFoundError: No module named &#39;__init__&#39; .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/01/21/1919.html",
            "relUrl": "/2023/01/21/1919.html",
            "date": " • Jan 21, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Week 18 Design Exploration",
            "content": "Frontend - Luna . Homepage - code behind . link to the finished page . HTML - Homepage . . . CSS - Homepage . . . . About . About - code behind . Email List . Wireframe from canva . . screen shot of the finished page . link to the finished page . code behind the page . . Luna . Usually before I start making a new part of the project or website I draft it out in Canva. Doing this process allows me to only think about the code and not the aesthetics of the website while coding. This week I worked on the emailing list/subscription for users to sign up for with their emails. I also formatted the website from last week and added a new part onto the bottom of the site (index). . I also worked on adding the new pages on the website, aka the &#39;about site&#39;. And I also made an &#39;input&#39; part on the site. The input is the email input where users can add in their emails to join the emailing list. . The email&#39;s / inputs won&#39;t accepted unless it contains a &#39;@&#39; or isn&#39;t a valid email won&#39;t be inputted . In the future I am planning to add a table which will use the user inputs and make the combine into a table. We also plan on using an API which will automatically used the emails to send an email to all the emails avalible in the list. . Frontend - Ethan . Load Screen . . Load Screen - Code Behind . HTML . . CSS . . Ethan . We’re gonna have to add more code what we have is just design. My preloader uses a function that displays the given image/gif while the screen loads, using windows.addEventListener We’re going to have to add some sort of input table and then start some backend fetching which I don’t think have either atm . Frontend - Taiyo . Product Cards . Images . Taiyo . This code is the Inventory/ catalog. This code displays the different types of cars that we show on our website. I added a hover feature to enable the user to quickly like or view the description of the car. In the future, we will add hyper links to the hover cards to send the user to a full description of the said car. We also have a small “By:” section on the bottom of the card that when clicked, will lead the user to all the cars made by that manufacturer. .",
            "url": "https://lunaiwa.github.io/iwazaki/project/2023/01/16/Week18work.html",
            "relUrl": "/project/2023/01/16/Week18work.html",
            "date": " • Jan 16, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "APCSP Grading Requirements 2",
            "content": "Submission Scoring . Submission 1 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . The purpose of the project was not well described and clear! Most of all of the explinations made were not clear or consice enough to meet the college board standards. Their explinations most of the time don&#39;t connect to their program. But, the testing was clear and showed understanding of the college board standards. This student needed thourogh explinations and more connection to their code to recive their full points. . Submission 2 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . This student was very clear with their work! They had alternative ideas and showed they had full understanding with the college board requirements. They fulfilled all the requirments and college board also gave them full points. If I were to do the APCSP tests I would use this as a reference of what my work would look like since it is so well done!! . Submission 3 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . Compared to student 2 I think student 3 had also done a well job. Although they had recived 5/6 points I think this student deserves full points. The student had clearly answered the prompt and described their code well. As Mr.Mort said lots of people struggle with function and purpose and that is where this student had fallen short. They only described the function which is a fatal flaw!! . Function vs. Purpose:Function: the kind of action or activity proper to a person, thing. Purpose: the reason for which something exists or is done, made, used, etc. . Submission 4 . Reflection . on any discrepancies in your scoring versus the ap scoring on what your program will need to fulfill all requirements on the criteria and why a submission may have failed to meet the standard . This student had missed some important components in the CSP project. They were missing the managing complexity and how a list had contributed to their program! They did not earn full points for a row since they did not hit the crieteria for those points. .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/15/CSPGrading2.html",
            "relUrl": "/apcsp%20requirements/2023/01/15/CSPGrading2.html",
            "date": " • Jan 15, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "View and Frontend Coding",
            "content": "CLASS CODE . # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; def __dir__(self): return [&quot;name&quot;, &quot;uid&quot;] # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . HACKS . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, uid, password, dob, classOf): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob self._classOf = classOf @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) #class of getter @property def classOf(self): return self._classOf #class of setter @classOf.setter def classOf(self, classOf): self._classOf = classOf # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age, &quot;class_of&quot;: self.classOf } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password},dob={self._dob}, class_of={self._classOf})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&quot;Luna Iwazaki&quot;, uid=&quot;luiwa&quot;, password=&quot;1234&quot;, dob=date(2006,11,19), classOf=&quot;2025&quot;) print(u2) .",
            "url": "https://lunaiwa.github.io/iwazaki/2023/01/12/PBL-view.html",
            "relUrl": "/2023/01/12/PBL-view.html",
            "date": " • Jan 12, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Database from JavaScript",
            "content": "View of User data . Name ID Actions .",
            "url": "https://lunaiwa.github.io/iwazaki/c4.7/c7.0/c8.1/c8.6/2023/01/10/PBL-users_view.html",
            "relUrl": "/c4.7/c7.0/c8.1/c8.6/2023/01/10/PBL-users_view.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "APCSP Grading Requirements",
            "content": ". Collegeboard Scoring Requirements . Here is the link to the requirements needed for APCSP . -- . Collegeboard Grading Table . Submission # 1 . Reflection: . I feel that college board had graded this student harshly, they had a great overall assignment and most of the time I was surprised when I saw the score since I feel that the student had done well in most parts. | The purpose and function was not well done though, they only described the function and not the purpose | purpose=why this program exists to be done | function=the action of the program | . Submission # 2 . Reflection . The explinations were very through and the videos and writing were able to fulfill all of the requirements that were needed | The student showed amazing work and their steps were very clear and consisice. | Overall this student followed all of the AP Collegeboard requirments needed for this assignment | .",
            "url": "https://lunaiwa.github.io/iwazaki/apcsp%20requirements/2023/01/08/CSP-Grading.html",
            "relUrl": "/apcsp%20requirements/2023/01/08/CSP-Grading.html",
            "date": " • Jan 8, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "HACKS 17-18",
            "content": ". Essential Knowledge . Collatz: Famous unsolved problem in math, and asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1 . Hailstone Numbers: sequence of integers generated by Collatz . Undecidable Problems: gives &quot;yes&quot; or &quot;no&quot; answer, but no algorithm can correctly answer inputs . Unsolvable Problems: No algorithm can ever be written to find the solution . Algorithm Efficiency: Measures number of steps needed to solve a problem . Heuristic Approach: Shortest and most efficient &quot;route&quot; . . Hailstone . Take the two codes above and combine them so one input gives the output that contains both the hailstone numbers and the number of iterations it takes i = 1. The more efficient the code, the higher your grade will be. . def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(int(i)) else: i = (i / 2) list_.append(int(i)) return list_ print(&#39;Please enter a number: &#39;, end=&#39;&#39; + &quot; n&quot;) while True: try: i = int(input()) list_ = [i] break except ValueError: print(&#39;Invaid selection, try again: &#39;, end=&#39;&#39;) l = collatz(i) print(&#39;Sequence: &#39;) print(*l, sep=&quot; &quot;) print(&#39;Number of iterations:&#39;, len(l) - 1) . Please enter a number: Sequence: 9 28 14 7 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1 Number of iterations: 19 . . Effective . Write 2 algorithms: One is efficent and one is innefficent, then explain why one is efficent while the other isn&#39;t. | Explain why one algorithm is more efficient than another using mathematical and/or formal reasoning. | use variables, if statements, and loops to program your algorithm and upload to jupyter notebooks/ fastpages. | . tasks = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] # the tasks / variables def complete_tasks(tasks): for task in tasks: # completing each task if task == &quot;a&quot;: print(&quot;a&quot;) elif task == &quot;b&quot;: print(&quot;b&quot;) elif task == &quot;c&quot;: print(&quot;c&quot;) # calling the function complete_tasks(tasks) . a b c . tasks = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] tasks.sort () print (tasks) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] . . Daily Tasks . tasks = [&quot;shower&quot;, &quot;brush teeth&quot;, &quot;skincare&quot;, &quot;sleep&quot;] def complete_tasks(tasks): for task in tasks: if task == &quot;shower&quot;: print(&quot;Take a shower!&quot;) elif task == &quot;brush teeth&quot;: print(&quot;Go brush your teeth!&quot;) elif task == &quot;skincare&quot;: print(&quot;Do your skincare!&quot;) elif task == &quot;sleep&quot;: print(&quot;Go to bed!&quot;) complete_tasks(tasks) . Take a shower! Go brush your teeth! Do your skincare! Go to bed! .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/15/Unit1718HACKS.html",
            "relUrl": "/unit%203/2022/12/15/Unit1718HACKS.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Computer Science/Technical Business Panel",
            "content": ". Kathyleen Beveridge . Project Management . Journey though high tech and how it influenced her life . Life Story . Born in Vietnam | Califronia in 1980 | Study abroad in Spain | Move to San Diego in 2004 | Next carrer rotation maybe somewhere in the world | Finance and bachlor in San Francisco | . Quote She Lives by . &quot; mission in life is not to survive but by compassion, humor, and style . Carrer Path . Finance major was an envestment major in bank from 95&#39; to 96&#39; and relized she didn&#39;t like it | Switched carrer to high tech | Was really burnt out so moved to Sand Diego | Learned to surf | Switched to Qualcome | Left five years ago | In biotech but hires people | . Senior director of marketing and sales and directs 15 people and works with directors, and goes through different stage gate (NPI). Before comercializing product they go through &quot;voice of sales and customer&quot; does it make sense. And when they feel that it works well they will work with the SCRUM master to help bring the product to the world. . Loves to take a concept and build it to make an impact onto the world . Companies . &quot;Create tech that makes life better everywhere&quot; | &quot;In venting tech everyone loves&quot; | &quot;Enable customers to help the world&quot; | . Commonalities are that they all use tech for the good of the people and the world, or for the benefit of the people. This is the reason why she switched to high tech and why she loves it. When she was in banking she was just helping them retire and she didn&#39;t feel that it wasn&#39;t her calling. . Every company she worked in she had a macro impact on the world and at one point the Qualcome chips were in 95% of all cellphones in the world. Everyday a bilion people are impacted by Qualcome&#39;s technology. . Conclusion . Beveridge really enjoy&#39;s her high-tech job becuase she is able to impact people&#39;s lives daily . . Kris Porter . Developer Operation, SRE, Infastructure, . Life Story . Livermore high school | Math and physics and CS classes when started | Went to USLA for engineering for bachlors and master | First CS class was second | Failed first and second classes | Ended up doing CS anyway | Studies radar and wireless systems | Moved to San Diego with girlfriend | Went to Qualcome -&gt; engineering, devops, and monitoring | Works at Twitter | . Carrer . Undergrad and grad school | Where he got into some things when the stock market crashed | Reasearch project &quot;network internet mech. systems&quot; | Worked at shop which would fix Mac comps. | Deployed machine in enviroment to get info. | Where he learned lynix | Worked at a startup in 2010 and was devop | Stream and media for the Olymics 2012 | . Startup was for email for buisness by automation and basically some secuirty a bit and some networking. Encryption of everything. . Companies . Twitter | Small Start-ups | Qualcome | . Projects . Contiuous learning is better | Gets bored and learns things along the way | Twitter Projects | New data center deployment | New timeline used to be rest API and new to graph ul | . . Q/A . Agile Methodology . P - Different companies have own version of agile and different companies use it on their own way, at Qualcome all people worked together in big meeting no matter how short or long the project was. . B - Projects can go from 6 month to 9 month and do short sprints, what can you do in 3 months, 2 months. . Twitter . P - don&#39;t work at Twitter anymore and works at other company, very interesting and was interesting company and was laided off and requirment to work at their office in San Francisco. . M - from Qualcome to Twitter determined need to find a job earlier when Elon Musk, whenever you see a company shuffle you always look for plan B . Machine Learning . P - project that I was working on was to learn how to use the Python libraries and other machine learning programs to run experiemnts and only used the NDS system. Hosted a fork of GitLab and had about a hundred thousand repositories when they left. Wanted to use information to predict when to arcive and delete repositories. Wanted to know when to delete reposisotires since they were expensive . B - trying to join fragment databases and take massive fragment databases to see where the customers are buying. Are selling massive sensors and when Covid hit they got acess to data bases and sell data who test modification. . Most important skill in tech . P - the most useful overtime is continuous learning, not just learning a particular programing language and all companies have different stats and leanr different. All companies have a different way of doing things, don&#39;t be super concerned about things on the news and learning the skill to learn computer systems is fulfilling. As long as I go to a job for 6 months then as long as I learn it&#39;s ok. Everything falls into place and in tech it is in high demand. . B - 100% continous learning and be adaptive. Carrer path is zigzaggy and jus be adaptive. The best technical person ever workng with is someone who listens to requriements and translate it into how it can slove the requirments in tech. . Biggest Challenges and How they Overcome it . B - close to 14 years at Qualcome and is a semiconducotr industry and went through aqusisitions, learned going through aquisitions and Qualcome went out and took small companies &quot;Serial Aquires&quot; to be adaptive and always continous learning and if you keep those things you will be fine . P - interveiws now adays are really competetive, a series of timed random test, a problem to solve in 20-30 min and it has to work at the end no matter what at the end of the timeline. . Twitter University . P - formal training of their own data and code becuase you can&#39;t just find it on the internet omehwere and all these things you can learn, you can&#39;t learn that way but you have to be affective at the job. Open source framework called enable, they make their own thing since they have to learn how to write a service. A monorepo, everything in the backend sits in this one reposistory and you have to be able to effectivly navigate and learn how to use this. . Learning to code helps in Buisnees . B - friends were academicall softwear but they all move to somewhere in non tech and code. Learning to code is a way o thinking, disecting and learning. How to problem solve. Interveiwing is hard but when you are being interveiwed you are tested with problem solving and why you reach the conclusion that you did . &quot;In a room with whiteboard, notepad, and pen &#39;how many cars are in the US&quot;. Doesn&#39;&#39;t care about the answer but just the method that you did to get there. Understanding patters and learning techniques. . New Learning . P - next role is interested in web3 and clock change tech and haven&#39;t worked in AWS that much in job so that and google cloud things. . . Conclusion and Recap. . It doesn&#39;t matter where you go or major in because Computer Science teaches more then coding. It teaches someone how to adapt and problem solve in idfferent situations and it can teach lifelong lessons which can help you in a future carrer. Like the speakers said today, they all had different paths and they never expected to end up doing compute science, so it doesn&#39;t matter where you are right now, just adapt and explore. .",
            "url": "https://lunaiwa.github.io/iwazaki/speakers/2022/12/14/BuisnessPanel.html",
            "relUrl": "/speakers/2022/12/14/BuisnessPanel.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "HACKS 16",
            "content": ". Essential Knowledge . Experiment: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . . Simulation Description . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | A simulation that sees how traffic can be regulated by adding or removing roads in said simulation . What makes this a simulation? - Creating and removing roads can take a lot of time and energy and since we use roads every day we can&#39;t just keep removing and adding them. . Advantages and Disadvantages? - An advantage with this is you can save time and money by simulating the roads . Experiment? - An experiment in this situation would be unaffective since time and money would be involved when creating this experiement . . Simulation Quiz . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . . Dice Rolling . Describe the rolling dice simulation (answer guiding questions) . The simulation asks how many dice you want to roll and then give a output from 1-6. It simulates the rolling of dice no matter how many time you want to roll it. When you want to roll for example, 100 dice it would be hard to find that many and count all of the results so the simulation is better. . . Feature to Rolling Dice . Add a feature onto the rolling dice simulation above . - ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Enter a number from 1 to 6.&quot;) raise SystemExit(1) import random # rolling of the dice def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results # asking how many dice you want to roll num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) # printing the results of the roll print(&quot;Dice Rolled:&quot;, roll_results) . Dice Rolled: [4, 4, 6, 4, 1, 5] .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/13/Unit16HACKS.html",
            "relUrl": "/unit%203/2022/12/13/Unit16HACKS.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "HACKS 14-15",
            "content": ". Essential Knowledge . Randomization: generates a value between two numbers . import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . Library: a collection of code from an external source that can be used to add functionality to a program, they can be used to save time and effort in the development process (usually included in a program using a special keyword called &quot; &quot;)* . the key word &quot; &quot; tells the program to look for the library and use its code | . anything past import is a library, python doesn&#39;t have all the &quot;books&quot; so you have to add on books . import math math.sqrt(64) . examples of library: . Matplotlib- responsible for plotting numerical data, it is used for data analysis | SciPy- stands for scientific python and is used for high level scientific computations | PyGame- easy interface to the Standard Direct media Library (SDL) platform-independent graphics, audio, and input libraries. It is used for developing video games using computer graphics and audio libraries along with Python programming language. | . . Examples . Why are libraries useful when writing a program? | -- . What keyword is used to add pre-made library? | import . . Library/Libraries . Write a program that uses a library in any sort of manner | Explain your work/code | . import math x = int(input()) # set input which is a number as the value of x math.sqrt(x) . 3.0 . Math is a library which you can use and using this library you can input any value to be squared, it is similar to a calculator . . Implementing import function . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . import random flip = random.randint(1,2) if flip == 1: print(&quot;a&quot;) else: print(&quot;b&quot;) . a . What does import random function do | A random function picks something random in a list . Few other thing that we can import other than random | import math x = int(input()) # set input which is a number as the value of x math.sqrt(x) . 3.0 . . Random Number Generator . For your hacks you need to create a random number generator that will simulate this situation: . | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | . import random spin = random.randint(1,8) if spin &gt;=3: print(&quot;green&quot;) elif spin == 4 or 5: print(&quot;blue&quot;) elif spin == 6: print(&quot;purple&quot;) elif spin == 7: print(&quot;orange&quot;) elif spin == 8: print(&quot;red&quot;) . blue . What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? | Any number from 12-20 is included and numbers under or over 12-20 are excluded .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/12/Unit14-15HACKS.html",
            "relUrl": "/unit%203/2022/12/12/Unit14-15HACKS.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "HACKS 3-7",
            "content": ". Essential Knowledge Questions . Explain in your own words what each logical operator does | a. NOT : displays opposite of data inputted b. AND : determine if two conditions are met c. OR : determine if one of the conditions is met . . Logical Operators . Code your own scenario that makes sense for each logical operator . AND . water = 10 if water &gt; 5 and water &lt;= 20: print(&quot;drink more water&quot;) . OR . water = 1 ice = 21 if water &lt;= 0 or ice &gt; 20: print(&quot;too cold&quot;) . NOT . clouds = False result = not(clouds) print(result) . . Grader . Create an array with integers, each integer representing one score from a student&#39;s taken tests. If the average of the student&#39;s test scores are at least 75 percent, then display that the student is elligible for credit, and if not, display that the student must retake the tests over break. . grades = [&#39;30&#39;, &#39;80&#39;, &#39;90&#39;, &#39;89&#39;, &#39;75&#39;, &#39;60&#39;] average = sum(grades)/len(grades) # printing extra credit if average &gt; 75: print(&quot;extra credit!&quot;) # if less then 75 if average &lt; 75: print (&quot;retake :(&quot;) . . Algorithm Calculator . Create an algorithm that calculates the sum of two numbers, then determines whether the sum is greater than or less than 100. (number oriented and creative) . # user input of data numbers x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) # adding the numbers sum = int(x) + int(y) # printing the sum print(&quot;the sum is:&quot;, sum) . x = input(&quot;type a number:&quot;) y = input(&quot;type your second number:&quot;) sum = int(x) + int(y) # if it is greater than if sum &gt; 100: print(&quot;the number is less than 100!&quot;) # if it is less than else: num = list(range(sum,101,1)) print(&quot;the number is more than 100&quot;) . . Flowcharts in Code . Create 3 different flow charts representing nested statements and transfer them into code. . . 1 . weather = &quot;sunny&quot; temp = &quot;80&quot; if weather == &quot;sunny&quot;: if temp ==&quot;80&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;80&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;80&quot;: print(&quot;wrong weather and right size&quot;) . 2 . weather = &quot;cloudy&quot; temp = &quot;40&quot; if weather == &quot;cloudy&quot;: if temp ==&quot;40&quot;: print(&quot;right weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;right temp and right weather&quot;) else: if temp ==&quot;40&quot;: print(&quot;wrong weather wrong temp&quot;) elif temp ==&quot;40&quot;: print(&quot;wrong weather and right size&quot;) . 3 . if temp &gt; 80: if weather == &quot;hot&quot;: print(&quot;wear light clothes&quot;) elif store == &quot;cold&quot;: print(&quot;wear a jacket&quot;) else: print(&quot;no weather report today&quot;) . . Four Statement Code . Create a piece of code that displays four statements instead of three. Try to do more if you can. . if temp &gt; 100: if weather == &quot;cold&quot;: print(&quot;it will be cold today&quot;) elif clouds == &quot;rainy&quot;: print(&quot;bring an umbrella&quot;) elif sunny == &quot;it will be a nice day&quot;: print(&quot;go outside&quot;) # if temp is &lt; than 100 else: print(&quot;it&#39;s too hot&quot;) . . Class Recommendations . Make piece of code that gives three different recommendations for possible classes to take at a school based on two different condtions. These conditions could be if the student likes STEM or not. . STEM = True ART = True # if STEM was chosen if STEM: print(&quot;APCalculus, APChem, APBiology&quot;) # if ART was chosen elif ART: print(&quot;APArtandDesign, APArtHistory, APMusicTheory &quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/11/Unit5-7HACKS.html",
            "relUrl": "/unit%203/2022/12/11/Unit5-7HACKS.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Vocabulary",
            "content": ". . Binary Data Abstractions . -- . Boolean: Boolean conditionals are often used to decide which sections of code to execute (such as in if statements) or repeat (such as in for loops). 3.7 . Boolean Value: A boolean value is either True or False. Variables with boolean values are often used to keep track of certain conditions within a program. 3.7 . game_active = True can_edit = False . Unicode: International character encoding standard that includes different languages, scripts and symbols. Each letter, digit or symbol has its own unique Unicode value. Unicode is an extension of ASCII that allows many more characters to be represented. . RGB: RGB (red, green, and blue) refers to a system for representing the colors to be used on a computer display. Red, green, and blue can be combined in various proportions to obtain any color in the visible spectrum. . . Unit 3: Algorithm/Programming Terms . . Variables: A value that can change, depending on conditions or on information passed to the program. Typically, a program consists of instruction s that tell the computer what to do and data that the program uses when it is running. 3.4 . # in this case x and you are the variables x = 7 y = 9 print(y + x) . 16 . Data Types: A data type, in programming, is a classification that specifies which type of value a variable has and what type of mathematical, relational or logical operations can be applied to it without causing an error. . . Assignment Operators: operator used to assign a new value to a variable, property, event or indexer element in C# programming language. Assignment operators can also be used for logical operations such as bitwise logical operations or operations on integral operands and Boolean operands. 3.11 . a = 3 b = 5 c = a + b # Output print(c) . Managing Complexity with Variables . -- . Lists: A list is a sequence of several variables, grouped together under a single name. Instead of writing a program with many variables. 3.8 . # make a list letters = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] # get the first item in the list first_letter = letters [0] # get last item in the list last_letter = letters [-1] # looping the list for letter in letters: print(letter) # adding items to the list letters = [] letters.append(&#39;a&#39;) letters.append(&#39;b&#39;) letters.append(&#39;c&#39;) # numbered lists squares = [] for x in range (1,11): squares.append(x**2) # list comprehensions squares = [x**2 for x in range(1,11)] # slicing the list letters = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] first_two = letters[:2] # copy a list copy_of_letters = letters[:] . Dictionaries: Python dictionaries allow you to connect pieces of related information. Each piece of information in a dictionary is stored as a key-value pair. When you provide a key, Python returns the value associated with that key. You can loop through all the key-value pairs, all the keys, or all the values. . # making a dictionary ball = {&#39;color&#39;: &#39;green&#39;, &#39;points&#39;: 5} . Looping Through a Dictionary: You can loop through a dictionary in three ways: you can loop through all the key value pairs, all the keys, or all the values. A dictionary only tracks the connections between keys and values; it doesn&#39;t track the order of items in the dictionary. If you want to process the information in order, you can sort the keys in your loop. . fav_language = { &#39;a&#39;: &#39;python&#39;, &#39;b&#39;: &#39;c&#39;, &#39;d&#39;: &#39;java&#39;, &#39;e&#39;: &#39;python&#39;, } # show each person&#39;s fav language for name, language in fav_languages.items(): print(name + &quot;:&quot; + language) . Class: a template definition of the method s and variable s in a particular kind of object . Thus, an object is a specific instance of a class; it contains real values instead of variables. The class is one of the defining ideas of object-oriented programming. . class MY: x = 5 . Algorithms: a procedure or formula used for solving a problem. It is based on conducting a sequence of specified actions in which these actions describe how to do something, and your computer will do it exactly that way every time. An algorithm works by following a procedure, made up of inputs. 3.4 . List = [1, 2, 3, &quot;A&quot;, 2.3] print(List) . [1, 2, 3, &#39;A&#39;, 2.3] . Sequence: A set of logical steps carried out in order. Computers need instructions in the form of an algorithm in order to complete a desired task, and this algorithm must have the correct order of steps, or sequence. 3.4 . Selection: Selection is a decision or question. At some point, a program may need to ask a question because it has reached a step where one or more options are available. Depending on the answer given, the program will follow a certain step and ignore the others. . Iteration: a sequence of instructions or code being repeated until a specific end result is achieved. Iterative development is sometimes called circular or evolutionary development. 3.10 . Expressions: a combination of values and functions that are combined and interpreted by the compiler to create a new value, as opposed to a “statement” which is just a standalone unit of execution and doesn&#39;t return anything. 3.2 . Comparison Operators: operators that compare values and return true or false . The operators include: &gt; , &lt; , &gt;= , &lt;= , === , and !== . Logical operators — operators that combine multiple boolean expressions or values and provide a single boolean output. 3.7 . a = 3 b = 1 c = 2 if ( a == b ): print (&quot;1 - a is equal to b&quot;) else: print (&quot;1 - a is not equal to b&quot;) if ( a != b ): print (&quot;2 - a is not equal to b&quot;) else: print (&quot;2 - a is equal to b&quot;) if ( a &lt; b ): print (&quot;4 - a is less than b&quot;) else: print (&quot;4 - a is equal to b&quot;) if ( a &gt; b ): print (&quot;5 - a is greater than b&quot;) else: print (&quot;5 - a is not greater than b&quot;) if ( a &lt;= b ): print (&quot;6 - a is either less than or equal to b&quot;) else: print (&quot;6 - a is neither less than nor equal to b&quot;) if ( b &gt;= a ): print (&quot;7 - b is either greater than or equal to b&quot;) else: print (&quot;7 - b is neither greater than nor equal to b&quot;) . 1 - a is not equal to b 2 - a is not equal to b 4 - a is equal to b 5 - a is greater than b 6 - a is neither less than nor equal to b 7 - b is neither greater than nor equal to b . Link to boolean resource . Truth Tables: a breakdown of all the possible truth values returned by a logical expression. A truth value is typically either true or false, or 1 or 0. In some cases, the value might be based on another binary system, such as on and off or open and closed, but these are not as common. 3.11 . Characters: a character is a display unit of information equivalent to one alphabetic letter or symbol. 3.4 . a = &quot;Hello, World!&quot; print(a[1]) . e . Strings: an array of characters. The informal view of a string is a sentence. Strings are almost always written in code as a quoted sequence of characters, i.e., &quot;this is a string&quot;. 3.4 . print(&quot;Hello&quot;) print(&#39;Hello&#39;) . Hello Hello . Length: a code which maps source symbols to a variable number of bits. Variable-length codes can allow sources to be compressed and decompressed with zero error (lossless data compression) and still be read back symbol by symbol. 3.8 . num_responses = len(fav_languages) . Traversing Strings: accessing all the elements of the string one after the other by using the subscript. A string can be traversed using for loop or while loop. 3.8 . string_name = &quot;luna&quot; # Iterate over the string for element in string_name: print(element, end=&#39; &#39;) print(&quot; n&quot;) # Code #2 string_name = &quot;LUNA&quot; # Iterate over index for element in range(0, len(string_name)): print(string_name[element]) . l u n a L U N A . Python . -- . Conditionals with Lists: You can easily test weather a certain value is in a list. You can also test weather a list is empty before trying to loop through the list. 3.6 . &gt;&gt;&gt; players = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] &gt;&gt;&gt; &#39;a&#39; in players True &gt;&gt;&gt; &#39;e&#39; in players False # testing if value is not in a list banned_users = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;] user = &#39;d&#39; if user not in banned_users: print(&quot;We have no players yet&quot;) # checking if list is empty players = [] if players: for players in players: print(&quot;Player: &quot; + player.title()) else: print(&quot;We have no players yet&quot;) . if: a programming conditional statement that, if proved true, performs a function or displays information. If statements are used to test for particular conditions and respond appropriately. 3.4 . # age number age = 19 # if statement if age &gt;= 18: print(&quot;you are old enough to vote&quot;) . elif: used in conditional statements (if statements), and is short for else if 3.5 . . else conditionals: specifies a new condition if the first condition is false 3.5 . age = 17 if age &gt;= 18: print(&quot;You are old enough to vote&quot;) else: print(&quot;You can&#39;t vote yet&quot;) . If, Else, Elif: 3.5 . if age &lt; 4: ticket_price = 0 elif age &lt; 18: ticket_price = 10 else: ticket_price = 15 . # age number age = 12 # if statement if age &lt; 4: price = 0 # elif statement elif age &lt; 18: price = 5 # else statement else: price = 10 # final print print(&quot;Your total cost is $&quot; + str(price) + &quot;.&quot;) . Nested Selection Statements: used when more than one decision must be made before carrying out a task. Nesting is a programming activity, in which one program block is placed inside other program block of the same operation type. . While Loops: A &quot;While&quot; Loop is used to repeat a specific block of code an unknown number of times, until a condition is met. For example, if we want to ask a user for a number between 1 and 10, we don&#39;t know how many times the user may enter a larger number, so we keep asking &quot;while the number is not between 1 and 10&quot;. 3.3 . While loops with range: the range() method and returns a sequence of numbers starting from 0 by default and increments of 1. 3.2 . current_number = 1 while current_number &lt;= 5: print(current_number) current_number += 1 # user quit # prompt that is given to the user prompt = &quot; nTell me something, and I&#39;ll&quot; prompt += &quot;repeat it back to you.&quot; prompt += &quot; nEnter &#39;quit&#39; to end the program&quot; active = True while active: message = input(prompt) if message == &#39;quit&#39;: active = False else: print(message) # using continue in a loop banned_users = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;] prompt = &quot; nAdd a player to your team&quot; prompt += &quot; nEnter &#39;quit&#39; when you are done&quot; players = [] while True: player = input(prompt) if player == &#39;quit&#39;: break elif player in banned_users: print(player + &quot;is banned&quot;) continue else: players.append(player) print(&quot; nYour Team:&quot;) for player in players: print(player) . While loops: A while loop repeats a block of code as long as a certain condition is true 3.2 . # simple loops current_value = 1 while current_value &lt;= 5: print(current_value) current_value += 1 # let the user choose when to quit message = &#39;&#39; while message != &#39;quit&#39;: message = input(&quot;What&#39;s your message?&quot;) print(message) . Combining loops with conditionals to break: . # using break to exit a loop prompt = &quot; nWhat room are in in?&quot; prompt += &quot; nEnter &#39;quit&#39; when you are done&quot; while True: city = input(prompt) if city == &#39;quit&#39;: break else: print(&quot;I&#39;m in the&quot; + room + &quot;!&quot;) . Abstraction: the practice of hiding the details of how a particular code or system works and exposing only the essential features or functions that are necessary for other parts of the program to use 3.13 . . Procedures: is a named set of instructions that can take in parameters and return values. [may be called &quot;method&quot; or &quot;function&quot; in different programming languages] 3.12 . . Parameters: are independent variables used in the procedure to produce a result. It allows a procedure to execute without initially knowing specific input values. [can be classified as sequencing, selection, and iteration] 3.12 . . Return Values: calling script or function when it completes its task . . . Python Coding Essentials . . append(): adding element to the end of the list . names = [&#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # add element to the end of the list names.append(&#39;luna&#39;) # start with empty list names = [] names.append(&#39;taiyo&#39;) names.append(&#39;ethan&#39;) names.append(&#39;parav&#39;) names. append(&#39;nikhil&#39;) . insert(): add an element in a specific position . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # adding in a specific position names.insert(0, &#39;taiyo&#39;) names.insert(3, &#39;ethan&#39;) . remove(): remove an item from the list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # deleting by value names.remove(&#39;parav&#39;) # by position del names[-1] . pop(): takes the item off the top of the &quot;stack&quot; (by default it returns the last element of the list but you can also op from any position) . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # pop last item of list most_recent_name = names.pop() print(most_recent_name) # pop first item of list first_name = names.pop(0) print(first_name) . nikhil luna . len(): returns the number of items in a list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # find length of list num_names = len(names) print(&quot;There are&quot; + str(num_names) + &quot;names.&quot;) . There are5names. . sort(): changes oder of the list permanently . sorted(): returns a copy of the list which leaves the original copy unchanged . # sorted() names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # sort permanently names.sort() # sort permanently in reverse alphabetical order names.sort(reverse=True) # temp. sort print(sorted(names)) print(sorted(names, reverse=True)) # reversing the order of a list names.reverse() . [&#39;ethan&#39;, &#39;luna&#39;, &#39;nikhil&#39;, &#39;parav&#39;, &#39;taiyo&#39;] [&#39;taiyo&#39;, &#39;parav&#39;, &#39;nikhil&#39;, &#39;luna&#39;, &#39;ethan&#39;] . range(): used to work with numbers efficiently . # print numbers 0 to 10 for number in range(11): print(number) # making list of numbers 1 to 10 # using the list() value can generate a large list of numbers numbers = list(range(1, 10)) . 0 1 2 3 4 5 6 7 8 9 10 . min(): finds the least value in a list . nums = [10, 30, 40, 60, 70, 60] least = min(nums) print(min(nums)) . 10 . max(): finds the highest value in list . nums = [10, 30, 40, 60, 70, 60] highest = max(nums) print(max(nums)) . 70 . sum(): sum of all in list . nums = [10, 30, 40, 60, 70, 60] total = sum(nums) print(sum(nums)) . 270 . Libraries . -- . seed(): initialize the random number generator . import random random.seed(10) print(random.random()) . 0.5714025946899135 . getstate(): returns the current internal state of the random number generator . import random # remember this state state = random.getstate() # print 10 random numbers print(random.sample(range(20), k = 10)) # restore state random.setstate(state) # print same first 5 random numbers # as above print(random.sample(range(20), k = 5)) . [6, 16, 10, 8, 4, 2, 12, 15, 18, 1] [6, 16, 10, 8, 4] . setstate(): restores the internal state of the random number generator . import random #print a random number: print(random.random()) #capture the state: state = random.getstate() #print another random number: print(random.random()) #restore the state: random.setstate(state) #and the next random number should be the same as when you captured the state: print(random.random()) . 0.4288890546751146 0.5780913011344704 0.5780913011344704 . getrandbits(): returns a number representing the random bits . import random print(random.getrandbits(8)) . 52 . randrange(): returns a random number between the given range . import random print(random.randrange(3, 9)) . 6 . randint(): returns a random number between the given range . import random print(random.randint(3, 9)) . 9 . choice(): returns a random element from the given sequence . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] print(random.choice(mylist)) . banana . choices(): returns a list with a random selection from the given sequence . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] print(random.choices(mylist, weights = [10, 1, 1], k = 14)) . [&#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;cherry&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;apple&#39;] . shuffle(): takes a sequence and returns the sequence in a random order . import random mylist = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] random.shuffle(mylist) print(mylist) . [&#39;cherry&#39;, &#39;apple&#39;, &#39;banana&#39;] . sample(): returns a given sample of a sequence . # import random from random import sample # Prints list of random items of given length list = [1, 2, 3, 4, 5] print(sample(list,3)) . [3, 5, 1] . random(): returns a random float number between 0 and 1 . . uniform(): returns a random float number between two given parameters . import random # initializing bounds a = 4 b = 9 # printing the random number print(&quot;The random number generated between 4 and 9 is : &quot;, end =&quot;&quot;) print(random.uniform(a, b)) . The random number generated between 4 and 9 is : 8.300245716512697 . betavariate(): return a random float number between 0 and 1 based on the Beta distribution (used in statistics) . import random # determining the values of the parameters a = 5 b = 10 # using the betavariate() method print(random.betavariate(a, b)) . 0.2765672503897696 . expovariate(): returns a random float number based on the Exponential distribution (used in statistics) . import random # determining the values of the parameter num = 1.5 # using the expovariate() method print(random.expovariate(num)) . 0.1791564144726827 . gammavariate(): Returns a random float number based on the Gamma distribution (used in statistics) . import random # determining the values of the parameter a = 100 b = 2 # using the gammavariate() method print(random.gammavariate(a, b)) . 180.87172405471134 . gauss(): Returns a random float number based on the Gaussian distribution (used in probability theories) . import random # determining the values of the parameters a = 100 b = 50 # using the gauss() method print(random.gauss(a, b)) . 104.56915910283324 . lognormvariate(): Returns a random float number based on a log-normal distribution (used in probability theories) . import random # determining the values of the parameters a = 0 b = 0.25 # using the lognormvariate() method print(random.lognormvariate(a, b)) . 1.070776531292022 . normalvariate(): Returns a random float number based on the normal distribution (used in probability theories) . import random # determining the values of the parameters a = 100 b = 50 # using the normalvariate() method print(random.normalvariate(a, b)) . 92.0091083297734 . vonmisesvariate(): Returns a random float number based on the von Mises distribution (used in directional statistics) . import random # determining the values of the parameters a = 0 b = 4 # using the vonmisesvariate() method print(random.vonmisesvariate(a, b)) . 0.7807261280524349 . paretovariate(): Returns a random float number based on the Pareto distribution (used in probability theories) . import random # determining the values of the parameter a = 3 # using the paretovariate() method print(random.paretovariate(a)) . 1.8504392744961453 . weibullvariate(): Returns a random float number based on the Weibull distribution (used in statistics) . import random # determining the values of the parameters a = 1 b = 1.5 # using the weibullvariate() method print(random.weibullvariate(a, b)) . 0.7948789443740898 .",
            "url": "https://lunaiwa.github.io/iwazaki/vocab/2022/12/08/Vocabulary.html",
            "relUrl": "/vocab/2022/12/08/Vocabulary.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "HACKS 11-13",
            "content": "Essential Knowledge . Procedure: also called a function, it is a small section or piece of code which does something specific or does a specific task . Parameter: variable passed into a function . a=1 b=9 # parameters are a and b def addition(a, b): sum = a + b return sum # call function print print(addition(a, b)) . 10 . Return Values: function that returns to called function when the task is completed . Output Parameters: refers to one section of the code as an input to function . Procedure Names: ex. in this code the procedure&#39;s name is 9 and 10 . x = 9 y = 10 . Arguments: a way to give more information to functions . Why abstracting away your program logic into separate, modular functions is effective | It makes the code easier to understand, maintainable, and organized. Breaking the code down makes it easier to debug and organize the code . . Quiz . Complete quiz: . questionNum = 3 correct = 0 questions = [ &quot;What is are correct names for a procedure? n A) Method n B) Function n C) Both&quot;, &quot;What is a procedure? n A) Sequencing n B) Selection n C) Iteration n D) All&quot;, &quot;Use this for following question: n def inchesToFeet(lengthInches): n t lengthFeet = lengthInches / 12 n t return lengthFeet n n What is the procedure name, the parameter, and what the procedure returns? n A) feetToInches, lengthInches, lengthMeters n B) inchesToFeet, lengthInches, lengthFeet n C) inchesToFeet, lengthFeet, lengthInches n D) lengthInches, inchesToFeet, lengthFeet&quot;] answers = [&quot;c&quot;, &quot;d&quot;, &quot;b&quot;] def qna(question, answer): print(&quot;Question:&quot;, question) response = input() print(&quot;Answer:&quot;, response) if response.lower() == answer: print(&quot;Correct :) n&quot;) global correct correct += 1 else: print(&quot;Incorrect :( n&quot;) for x in range(questionNum): qna(questions[x], answers[x]) print(&quot;Score:&quot;, correct, &quot;/ 3&quot;) . Question: What is are correct names for a procedure? A) Method B) Function C) Both Answer: c Correct :) Question: What is a procedure? A) Sequencing B) Selection C) Iteration D) All Answer: d Correct :) Question: Use this for following question: def inchesToFeet(lengthInches): lengthFeet = lengthInches / 12 return lengthFeet What is the procedure name, the parameter, and what the procedure returns? A) feetToInches, lengthInches, lengthMeters B) inchesToFeet, lengthInches, lengthFeet C) inchesToFeet, lengthFeet, lengthInches D) lengthInches, inchesToFeet, lengthFeet Answer: b Correct :) Score: 3 / 3 . . Procedure Code . Code a procedure that finds the square root of any given number. (make sure to call and return the function) . # import import math a = 25 # a is the parameter def sqrt(a): return math.sqrt(a) # calling the func print(sqrt(a)) . 5.0 . # import import math user = float(input()) sqrt = math.sqrt(user) print(&quot;Type a number:&quot; , user) print(sqrt) . Type a number: 25.0 5.0 . . Sub-Procedures . Create a procedure that uses other sub-procedures (other functions) within it and explain why the abstraction was needed (conciseness, shared behavior, ect.) | Add another layer of abstraction to the word counter program (HINT: create a function that can count the number of words starting with ANY character in a given string -- how can we leverage parameters for this?) | a = 5 b = 10 # func def add(a,b): sum = a + b return(sum) # result print(add(a,b)) . 15 . def split_string(s): # listing words and splitting string words = s.split(&quot; &quot;) new_words = [] for word in words: if word != &quot;&quot;: # `words` to `new_words` new_words.append(word) return words # input and returns the number of words # given letter def count_words_starting_with_letter(words, letter): count = 0 # loop through the list for word in words: # use lower() if word.lower().startswith(letter): count += 1 return count # returns the number of words that start with &#39;a&#39; def count_words_starting_with_a_in_string(s): # use the split_string() function to split the input string into a list of words words = split_string(s) # use count_words_starting_with_letter() count = count_words_starting_with_letter(words, &quot;a&quot;) return count def count_words_starting_with_d_in_string(s): words = split_string(s) count = count_words_starting_with_letter(words, &quot;d&quot;) return count def any_count(sentence, letter): words = split_string(sentence) count = count_words_starting_with_letter(words, letter) return count userLetter = input(&quot;Input any letter:&quot;) answer = count_words_starting_with_letter(userLetter, str(userLetter)) print(str(answer) + &quot; word(s) starting with &quot; + str(userLetter)) . 1 word(s) starting with a . . Procedures, Arguments, Parameters . Code some procedures that use arguments and parameters with Javascript and HTML (make sure they are interactive on your hacks page, allowing the user to input numbers and lick a button to produce an output) . add two numbers | subtract two numbers | multiply two numbers | divide two numbers | . x = 14 y = 19 . addition . . subtraction . . divide . . multiply . .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/08/Unit12-13HACKS.html",
            "relUrl": "/unit%203/2022/12/08/Unit12-13HACKS.html",
            "date": " • Dec 8, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "HACKS 9-11",
            "content": ". Essential Knowledge . -- . . Examples . What is the middle number in a Binary Search given the following set of numbers in order: 1, 5, 19, 44, 89 | What is the middle number in a Binary Search given the following set of numbers that are not in order: 3, 87, 12, 66, 22 | . Nested Conditionals . why is it important to know that algorithms that look different can do the same thing and that algorithms that look the same might have different results?(0.15) | for the converted conditional to boolean conversion(0.10) | total: 0.25 | . LotsOfMoney = True Broke = True if LotsOfMoney == True and Broke == False: print(&quot;earn more money&quot;) else: if Broke == True: print(&quot;go to work&quot;) else: print(&quot;earn more money&quot;) # Boolean conversion work = not(LotsOfMoney) or LotsOfMoney and Broke if work == True: print(&quot;go to work and earn more&quot;) if work == False: print(&quot;rich person&quot;) . go to work go to work and earn more . . Complex Algorithms . Develop your own complex algorithm using a flowchart and natural language, then code it! . Requirements: . Includes both a flowchart AND natural language | Working code of the same algorithm | Incorporates selection AND/OR iteration | Make it creative! | . Tips: . This site is good for making flowcharts! | Natural language should just be a list | Think about the whole process, not just the end result | . . money = 45 while (money &gt; 0): money -= 30 print(money) if money == 0: print(&quot;go back to work&quot;) . 15 -15 . . Number Game . Fix the number guessing game . Make a flow chart for the algorithm number guessing game | Make a function that gets the user guess | Modify the existing search function to give more encouraging feedback | import random #sets variables for the game num_guesses = 0 user_guess = -1 upper_bound = 101 lower_bound = 0 #generates a random number number = random.randint(1,101) # print(number) #for testing purposes print(&quot;test 5&quot;) print(&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): gnum = input(&quot;choose a number between 1 to 100&quot;) return gnum #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if int(guess) &lt; int(number): print(&quot;too low&quot;) #change this lower_bound = guess return lower_bound, upper_bound elif int(guess) &gt; int (number): print(&quot;too high&quot;) #change this upper_bound = guess return lower_bound, upper_bound else: upper_bound, lower_bound = guess, guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) if int(upper_bound) == int(number): break else: print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . test 5 I&#39;m thinking of a number between 1 and 100. You guessed 30. too low Guess a number between 30 and 101. You guessed 60. too low Guess a number between 60 and 101. You guessed 80. You guessed the number in 3 guesses! . . Binary Search . calculate the middle index and create a binary tree for each of these lists 12, 14, 43, 57, 79, 80, 99 | 92, 43, 74, 66, 30, 12, 1 | 7, 13, 96, 111, 33, 84, 60 | . | index = [12, 14, 43, 57, 79, 80, 99] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 57 . index =[92, 43, 74, 66, 30, 12, 1] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 43 . index = [7, 13, 96, 111, 33, 84, 60] index.sort() mid = int(len(index) / 2) print(mid) print(&quot;middle&quot;,index[mid]) . 3 middle 60 . Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? | In the third set of numbers, the second number looked at in a binary search if it is more than the middle number would be 96 . Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] . | answer d [is not sorted] .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/12/06/Unit911HACKS.html",
            "relUrl": "/unit%203/2022/12/06/Unit911HACKS.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "HACKS 3-4",
            "content": ". Describe the different parts of an algorithm, sequencing, selection, and iteration in the image below . Set item to number to search for. | Get text number in the list. | If number = item, display &quot;item found&quot; | If he are more numbers in the list, go back to Step 2 | Display &quot;item found&quot; | Sequencing: order of how to do a process | Selection: allows algorithm to make a decision based on the status [if a condition is met] | Iteration: loop | . . Evaluating Code . Evaluate the arithmetic expression for this code . num1 = 5 num2 = num1 * 3 num3 = num2 / num1 * (9 % 2) * 4 result = (num3 % num1 + num2) % num3 * 3 / 5 . 3 . . Crossword Puzzle . Finish the crossword puzzle . Iteration | Selection | Sequence | . Challenge . string1 = &quot;degree&quot; string2 = &quot; passenger&quot; FinalString = string1 + string2 print(FinalString[2:9]) print(len(FinalString)) print(len(FinalString[2:9])) . gree pa 16 7 . . Quiz . The length of the string | False | &gt; . | print(&quot;Hello World&quot;[3:8]) . lo Wo . .",
            "url": "https://lunaiwa.github.io/iwazaki/unit%203/2022/11/29/Unit3-4HACKS.html",
            "relUrl": "/unit%203/2022/11/29/Unit3-4HACKS.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "HACKS 1-2",
            "content": ". Essential Knowledge Questions . 1. What is a variable . abstraction inside program that holds value&gt;associated data storage that rep. single value at a time . 2. What is the best type of data to represent someone&#39;s dog&#39;s name . variable . 3. Why is it important to give variables specific names before containing values . call them while coding . 4. What is the best way to print someone&#39;s phone number . string . 5. Explain what an assignment operator is . the equal sign in coding . 6. In Collegeboard pseudocode, what symbol is used to assign values to variables? . &quot;&lt;--&quot; . 7. A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? . It will display 22 . 8. What is a list . sequence of elements with each one (element) being a variable . 9. What is an element . items in a list . 10. What is an easy way to reference the elements in a list or string . print . 11. What is an example of string . &quot;Hello World&quot; . . List Examples . thanksgivingList = [&quot;cranberry pie&quot;, &quot;casserole&quot;, &quot;mashed potatoes&quot;, &quot;turkey&quot;] print(thanksgivingList) . [&#39;cranberry pie&#39;, &#39;casserole&#39;, &#39;mashed potatoes&#39;, &#39;turkey&#39;] . . Create a list . namelist = [&quot;Luna&quot;, &quot;Ethan&quot;, &quot;Taiyo&quot;, &quot;Parav&quot;, &quot;Nikhil&quot;] # printing the end print(namelist) . [&#39;Luna&#39;, &#39;Ethan&#39;, &#39;Taiyo&#39;, &#39;Parav&#39;, &#39;Nikhil&#39;] . name = &quot;Luna&quot; food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(name, food) . Luna [&#39;grapes&#39;, &#39;apples&#39;, &#39;bananas&#39;] . food = [&quot;grapes&quot;, &quot;apples&quot;,&quot;bananas&quot;] print(food[1]) print(food[-1]) . apples bananas . . Variables . age = &quot;16&quot; name = &quot;Luna&quot; print(name + &quot; is &quot; + age) . Luna is 16 . . Number Input . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code numlist = [int(num1), int(num2), int(num3)] # shows the original numbers to the user print(&quot;Original-&gt;&quot;,numlist) # add the new number to the original input print(&quot;Add-&gt;&quot;,add) # code that adds the inputted addend to the other numbers for i in range(len(numlist)): numlist[i -1] += int(add) print(&quot;New-&gt;&quot;,numlist) . Original-&gt; [10, 20, 30] Add-&gt; 4 New-&gt; [14, 24, 34] . . Python Quiz . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;The purpose of lists and dictionaries are to manage the ____ of a program&quot;) if rsp == &quot;complexity&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Lists are a form of data ______&quot;) if rsp == &quot;abstraction&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Which brackets are used to assign values to a variable to make a list?&quot;) if rsp == &quot;[]&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, lunaiwazaki running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: Are you ready to take a test? Question: The purpose of lists and dictionaries are to manage the ____ of a program complexity is correct! Question: Lists are a form of data ______ abstraction is correct! Question: Which brackets are used to assign values to a variable to make a list? [] is correct! lunaiwazaki you scored 3/4 . . Simplify Foods . food1 = &quot;pizza&quot; food2 = &quot;hot dog&quot; food3 = &quot;sushi&quot; food4 = &quot;strawberry&quot; food5 = &quot;sandwich&quot; print(food1, food2, food3, food4, food5) . pizza hot dog sushi strawberry sandwich . food = [&quot;pizza&quot;, &quot;hotdog&quot;, &quot;sushi&quot;, &quot;strawberry&quot;, &quot;sandwich&quot;] # change all the foods to share a list and use brackets print(food) . [&#39;pizza&#39;, &#39;hotdog&#39;, &#39;sushi&#39;, &#39;strawberry&#39;, &#39;sandwich&#39;] . color = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;] # change all foods to color print(color) . [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;] .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/python/2022/11/28/Unit1-2HACKS.html",
            "relUrl": "/jupyter/python/2022/11/28/Unit1-2HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Lesson 8-10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statement | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop. . . Unit 3 Section 8.1 . Unit 3 Section 8.1 - Taiyo Iwazaki . Lesson Objectives: . Express an algorithm that uses iteration without using a programming language | Define an iteration | The Basics Of Iteration | Examples | LESSON Vocab: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | Before we dive deeper, we need to understand that an iteration is a part of an algorithm. And in that iteration is a set of instructions that need to be followed until a certain desired output is met. . Examples . Here is an example using online shopping: . . Lets say you are looking for a lost item inside of your house... What steps would you take? . Suppose there are n rooms to search... number the rooms 1-n . | Start by searching in room number 1 . | Search each room thoroughly for you item. . | Change the room number to the next highest number . | Repeat steps 3 and 4 until you have found your lost item. . | Enjoy the lost item. . | WAIT! There is a flaw in the program. . This is where a stopping condition is useful for when the iteration already meets the desired requirement and gets out of the loop. . Programming Examples . i = 0 while (i &lt; 5): print(&quot;Hello, World!&quot;) i = i + 1 . Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! . i = 0 while (i &lt; 5): #Try changing the 5 and see what happens! print(&quot;Hello, World!&quot;) i = i + 1 if (i == 3): #Try Changing the 3 and see what happens! break . Hello, World! Hello, World! Hello, World! . These are just a few examples of what you can do with iteration. . Summary: . An Iteration is a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | We can use stopping conditions to stop an iteration if a condition is already met | . Unit 3 Section 3.8.2 . Unit 3 Section 3.8.2 - Parav Salaniwal . Lesson Objectives . Determine the result or side effect of iteration statements | Learn how to use iterations with for loops and while loops | Creating code to learn how to incrementally list numbers | Learn the range function and using variables in code | . Definition: Iteration Statement - cause statements to be executed zero or more times, subject to some loop-termination criteria . The first function we will learn is the range function, which we will use with for loop. As you may be able to guess, this will give us the sum based on the input provided. We always use a variable, such as i, to represent what the range of numbers the output will show. For example, if I wanted to list the numbers from 1-10 using the range function, it would look like this: . for i in range(11): print(i) . 0 1 2 3 4 5 6 7 8 9 10 . Now the first thing you may notice is my input for the range was 11, and you may wonder why is it not 10? This is because when using the range function, the last number, or the ending value, is not included in the output, therefore we would have to add 1 to receive the correct output. Now if we were looking to include a starting value to have it start from 1 and end at 10, the code would look like this: . for i in range(1,11): print(i) . 1 2 3 4 5 6 7 8 9 10 . When using the range with for loop, the you can list much more than just a increment of one, would anyone like to guess how we could include a change in the incremented value? Try making a change in the python code above to change the incremented value. When using the range function: . for i in range(starting value, ending value, incremented value): print(i) . Now with while loops, we can provide a similar output with a variation in the input. Similar to for loops, it requires a variable which is the starting value. . i=1 while i&lt;=10: print(i) i=i+1 . 1 2 3 4 5 6 7 8 9 10 . Based on your knowledge from for loops, which values in the code above are the starting, incrementing, and ending values? . LESSON . . Unit 3 Section 3.8.3 . Unit 3 Section 3.8.3 - Nikhil . Here is some basic code I have created, let&#39;s first look into this one: I created a list of pets, cat, dog, fish, and snake. Then I created a for loop, &quot;for i in pets&quot; and this looks at every element/value in pets, so &quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot; and &quot;snake&quot;. This next if statmenets checks if the element in the list is &quot;fish&quot; and if it is, it breaks the loop. The statement would just print, cat and dog since the loop breaks at fish. . pets = [&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;, &quot;snake&quot;] for i in pets: if i == &quot;fish&quot;: break print(i) . cat dog . This while loop checks if number less than 10 is even and if so, it will print out the even numbers. We set a starting value of number = 0, then while the number is less than 10, the percent sign means modulus so meaning if there is a remaninder when we dvide. So if number divided by 2 has no remainder then it will print number. Then after that it will add 1 to the number and repeat the process untill it reaches 10. So let&#39;s check for 0, while 0 is less than ten, then it moves to next statement, since 0 divded by 2 has a remainder of 0 it will print the value of 0. Now it will add 1 to zero. Then it will see that 1 is less than ten, and then check if 1 divided by 2 has a remainder of 0 which it does not, so it skips the print, and goes straight to addding one, so on so forth. . number = 0 while number &lt; 10: if number % 2 == 0: print(number) number += 1 . 0 2 4 6 8 . The purpose of this code is to find the sum of all the even numbers between and any number of your choosing. The integer input asks for the minimum and maximum value. The next statement puts a starting sum value set to 0. The for i in range (minimum,maximum+1) looks at every number between those two values, in this case 1 and 100. Then the if i modulus 2 checks if any numbers that are divisible by 2 and the remainder comes to 0. If there is a number that has a remainder of 0 when divided by 2, it adds that number to the sum. Then the last print statement, prints out the final sum of all even numbers between the two numbers of your choosing. . minimum = int(input(&quot;please enter a minimum number you want your range to be&quot;)) maximum = int(input(&quot;please enter a number that you want to be the maximum value&quot;)) sum = 0 for i in range(minimum,maximum+1): if i % 2 == 0: sum += i print(&quot;The sum of all the even numbers between&quot;, minimum, &quot;and&quot;, maximum, &quot;:&quot;, sum) . The sum of all the even numbers between 1 and 3 : 2 . LESSON . . HACKS Unit 3 Section 8 . Hacks Unit 3 Section 3.8.1 . Define an Iteration | Make your own example of an iteration with at least 4 steps and a stopping condition(Similar to mine that I did) | Program a simple iteration. | Hacks Unit 3 Section 3.8.2 . What is an iteration statement, in your own words? | Create a descending list of numbers using for loop | Using while loop, make a list of numbers which will form an output of 3,16,29,42,55,68,81 | . Section 10 - Lists - Luna Iwazaki, Ethan Tran . Section Objectives: . For list operations, write expressions that use list indexing and list procedures | For algorithms involving elements of a list, write iteration statements to traverse a list | For list operations, evaluate expression that use list indexing and list procedures | For algorithms involving elements of a list, determine the result of an algorithm that includes list traversals | . Section Vocabulary: . Traversing Lists: where all elements in the list are accessed, or a partial traversal, where only a portion of elements are accessed (can be a complete traversal) . Essential Knowledge: . List procedures are implemented in accordance with the syntax rules of the programming language . | Iteration Statements can be used to traverse a list . | !!! AP EXAM provides pseudocode for loops | Knowledge of existing algorithms that use iteration can help in constructing new algorithms: | . Unit 3 Section 10 . Section 10 - Lists . Lists Recap . append() - adding element to the end of the list . names = [&#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # add element to the end of the list names.append(&#39;luna&#39;) # start with empty list names = [] names.append(&#39;taiyo&#39;) names.append(&#39;ethan&#39;) names.append(&#39;parav&#39;) names. append(&#39;nikhil&#39;) . insert() - adding an element in a specific position . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # adding in a specific position names.insert(0, &#39;taiyo&#39;) names.insert(3, &#39;ethan&#39;) . remove() - remove an item from the list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # deleting by value names.remove(&#39;parav&#39;) # by position del names[-1] . pop() - takes the item off the top of the &quot;stack&quot; (by default it returns the last element of the list but you can also pop from any position) . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # pop last item of list most_recent_name = names.pop() print(most_recent_name) # pop first item of list first_name = names.pop(0) print(first_name) . len() - returns the number of items in a list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # find length of list num_names = len(names) print(&quot;There are&quot; + str(num_names) + &quot;names.&quot;) . sort() - changes order of list permanently . sorted() - returns a copy of the list which leaves the original copy unchanged . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # sort permanently names.sort() # sort permanently in reverse alphabetical order names.sort(reverse=True) # temp. sort print(sorted(names)) print(sorted(names, reverse=True)) # reversing the order of a list names.reverse() . range() - use to work with number efficiently . for number in range(11): print(number) # making list of numbers 1 to 10 # using the list() value can generate a large list of numbers numbers = list(range(1, 10)) . min() - find the least value in list . nums = [10, 30, 40, 60, 70, 60] least = min(nums) print(min(nums)) . max() - find the highest value in list . nums = [10, 30, 40, 60, 70, 60] highest = max(nums) print(max(nums)) . sum() - sum of all in list . nums = [10, 30, 40, 60, 70, 60] total = sum(nums) print(sum(nums)) . Practice Question . Using the information above fill in the missing code . nums = [] nums.#missing code &#39;15&#39; nums.#missing code &#39;43&#39; nums.#missing code &#39;81&#39; nums.#missing code &#39;25&#39; least = #missing code print(#missing code) . AP Exam Reference Sheet . Since CS is taught in different languages the pseudocode represents fundamental programming concepts. . provides basic operations on lists | provides pseudocode for loops | helps you understand code used in questions | students can use this reference sheet in the AP Exam | . APCSP Testing Reference Sheet . If you looked at the reference sheet and seem to not understand some concepts here is a Khan Academy resource which can help you understand specific topics. . Khan Academy Resource . Practice Question . If the list words contain [&#39;song&#39;, &#39;book&#39;, &#39;video&#39;, &#39;book&#39;] what will be the following code output . Unit 3.10 (Ethan Tran) . Traversing a list is the process of visiting each element in a list in a sequential order. It can be used to access, search for, and modify elements in the list. | . Traversing Lists . 1) Complete Traversal: All elements in a list are assessed . 2) Partial Traversal: Only a given portion of elements are assessed . 3) Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. . Quick Lists Reference Sheet . A given element of a list can be evaluated using index, [ ] | . 1) Ex. listName[i] 2) Ex. listName[3] . insert( ) allows a value to be inserted into a list at index i | append( ) allows a value to be added at the end of a list | remove( ) allows an element at index i to be deleted from a list | length( ) returns the number of elements currently in a specific list | . . A loop such as the example above allows a user to access each item within the list . College Board Example Question . &lt;/html&gt; &lt;/div&gt; &lt;/div&gt; . HACKS Unit 3 Section 10 . Find the lowest value in a list (Luna Iwazaki) . Part 1 . Use the list made bellow | Make a variable to hold the minimum and set it to potential minimum value | Loop | Check each element to see if it is less than the minimum variable | If the element is less than the minimum variable, update the minimum | After all the elements of the list have been checked, display the minimum value | . nums = [&#39;38&#39;, &#39;45&#39;, &#39;67&#39;, &#39;83&#39;, &#39;78&#39;] # add code here . Part 2 . look at the apcsp reference sheet and take notes about ones you don&#39;t understand (at least 4) . Lists Quiz (Ethan Tran) . Take a screenshot of your score on put it on your review ticket! . import getpass, sys import random def ask_question (question, answer): print(question) ans = input(question) print(ans) if ans == answer: print(&quot;Correct!&quot;) return 1 else: print(&quot;Wrong&quot;) return 0 question_list = [&quot;What allows a value to be inserted into a list at index i?&quot; , &quot;What allows an element at index i to be deleted from a list?&quot; , &quot;What returns the number of elements currently in a specific list?&quot; , &quot;What allows a value to be added at the end of a list?&quot;] answer_list = [&quot;index()&quot;, &quot;remove()&quot;, &quot;length()&quot; , &quot;append()&quot;] # Set points to 0 at the start of the quiz points = 0 # If the length of the quiz is greater than 0, then random questions will be chosen from the &quot;question_list&quot; set while len(question_list) &gt; 0: index = random.randint(0, len(question_list) - 1) # The points system where a point is rewarded for each correct answer points = points + ask_question(question_list[index], answer_list[index]) # If a question or answer has already been used, then it shall be deleted del question_list[index] del answer_list[index] # Calculating score using the points system and dividing it by the total number of questions (6) score = (points / 4) # Calculating the percentage of correct answers by multiplying the score by 100 percent = (score * 100) # Printing the percentage, and formatting the percentage in a way where two decimals can be shown (through &quot;{:.2f}&quot;) print(&quot;{:.2f}&quot;.format(percent) + &quot;%&quot;) # Adding final remarks based upon the users given scores if points &gt;= 5: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Amazing job!&quot;) elif points == 4: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Not too bad, keep on studying! &quot; ) else: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Its alright, better luck next time!&quot;) . . . College Board Reference Sheets . List Operations . . &lt;/div&gt; .",
            "url": "https://lunaiwa.github.io/iwazaki/lesson%20plans/2022/11/28/Lesson8-10.html",
            "relUrl": "/lesson%20plans/2022/11/28/Lesson8-10.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Final Trimester 1 Editing",
            "content": "Questions . Q1 Behavior of code that multiplies inside a loop . Image . The code segment displays the value of 2(5^3) by initializing result to 2 and then multiplying result by 5 a total of three times. . Related -- . Topic 1.2 . Program&#39;s function and purpose and a programs input and output . Video Notes . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Q16 How information is transmitted on the Internet . Which of the following best explains how messages are typically transmitted over the Internet? . The message is broken into packets. The packets can be received in any order and still be reassembled by the recipient’s device. . Related -- Topic 4.1 . The internet and bandwidth . Video Notes . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Q34 Music instrument lists after assignments . firstList ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . secondList ← [&quot;flute&quot;, &quot;violin&quot;] . thirdList ← [] . thirdList ← firstList . firstList ← secondList . secondList ← thirdList . [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] . Related -- . Topic 3.2 . Strings, and examples of data extraction . [] ← [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] | [&quot;guitar&quot;, &quot;drums&quot;, &quot;bass&quot;] ← [&quot;flute&quot;, &quot;violin&quot;] | [&quot;flute&quot;, &quot;violin&quot;] ← [] | . Q40 Value displayed by IF ELSE block . Image . -2 | . Something will be displayed no matter what the values of x and y are. . Related -- . Topic 3.6 . Executing outcome based on conditions . Q48 Which variables are equal to 50 after assignments . x ← 25 . y ← 50 . z ← 75 . x ← y . y ← z . z ← x . x and z only . The fourth statement assigns the value 50 to x. The sixth statement assigns the value 50 to z. . Related -- . Topic 3.1 . Variable abstractions and storing data as numbers . 25 ← 50 | 50 ← 75 | 75 ← 25 | . N@TM Review . !()[https://lh3.googleusercontent.com/tmKXv7Sbn6e2R_0rIOwrYiIOcOY5eunfxZsMY6BWueIv1v4zwAskJsXFuT8WYXABct6mZVY6P8Ay0eBIhtksJgfkJ4ehB0Ruwx-RCQ-IL41gYMc0v8o0_jGio9AJUHLEBkB2zRtG3xRAZkqaMo-KMajozq2eFZIzMd5a0IbdQrLvLNGD23d-0DM3XVxoWr8Mw7hHEIr-EwDKj3oEN79l5CxpeZuPsA9dTcAIezKM1zIfhZISg_u0k9Fjklk-5P3mZeoGNyS-hk3IcyhV1DGFhNWJO-QNTo5l7p9AlREXcFuOvrk7RTZSzkkoeUu2mMYwLHHl-fIzbCBQetuh9ghh-6ksZIST0RZ2UQ6gnotaDTU-hLZCh0ArQU1ouboY9bwFrvhdmixIHpdA-6B1wpNljQtDT18ZDNT5VWjv9ZJPsosOVwKK_fA9xpvn_p0qEKD2c8XIosmQlpZ_9iNdFaoG7-sRNBgPnWftb3yPY1-MmBUsBhHpkf13xebOra9lbKoeNRdsdU5HoJzLgqXPZB-8lx_rgXQgImbTgIVMYQFs304V0bUFJKv_tczxiN4T0EHEJo4H0s7cH_tVRKuTEmlyb_aWJxOyXITF_6Q1ZNOGZSXYUyqt3jJ34dWOX237iCisMscs7Y0B45IUrvBMsOSd543NDKk2XDDmEhH9h22T9yPEdyhwnpRLUyQX7n-bnafiGgul08oZaGewieImJ46qwjArk-sAhkf0ez4Ehke-z6U0xZcj11obpnWvQrqNGgtDvBZgPTf20gMatYb0HnitEuYaNCEc9UygAlcSYdrN-VWAQsAxToDds5pR3hM71uouWWjsoiWXJTR1sUZFZUJvBTU4o-IsW9lnK6Gwb0TTnR5kSjA1SFFGsi9EvYDknRI4rPcgVMfcVr3OLZppFmgEDZ5zW3OyGrBjIrkJ6LdmHIHyNcYgQ2AiXUM68WR_Yb5ArSYlFfudrNWYEWKNyHw0=w1194-h1592-no?authuser=0] . NIght at the measuem was an amazing experiecne and I was able to let others see the project that the group made. I was also able to see other peoples projects! Some projects that I really enjoyed was; Ava&#39;s ASB merch website. Their website was able to keep track of stock and see how many in the stock are left. I also really enjoyed Edrick&#39;s calender page which shows what is up next in your schedule. Another amazing project was Tay&#39;s study quiz website where you are able to quiz yourself on the quizes you take and you are able to recive your score. .",
            "url": "https://lunaiwa.github.io/iwazaki/final/2022/11/05/Final-Edit.html",
            "relUrl": "/final/2022/11/05/Final-Edit.html",
            "date": " • Nov 5, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "USA Computing Olympiad",
            "content": "Problem 1. Milk Pails - Bronze . fin = open(&#39;pails.in&#39;, &#39;r&#39;) buck1, buck2, buck3 = map(int, fin.readline().split()) ans = 0 # x and y below take care of all # possible combinations of the two buckets. for x in range(1001): if (buck1 * x) &gt; buck3: break for y in range(1001): current = (buck1 * x) + (buck2 * y) if current &gt; buck3: break ans = max(ans, current) with open(&#39;pails.out&#39;, &#39;w&#39;) as fout: fout.write(str(ans) + &#39; n&#39;) . FileNotFoundError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb Cell 4 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; fin = open(&#39;pails.in&#39;, &#39;r&#39;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; buck1, buck2, buck3 = map(int, fin.readline().split()) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-10-18-USA-Computing.ipynb#X10sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; ans = 0 FileNotFoundError: [Errno 2] No such file or directory: &#39;pails.in&#39; . Diamond Collector .",
            "url": "https://lunaiwa.github.io/iwazaki/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "relUrl": "/usa%20computing%20olympiad/2022/10/18/USA-Computing.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Chess Wireframes",
            "content": "Chess Home Page . Chess Page Wireframes . These are the possible chess wireframes for when the user is looking at the chess set page . . User Page Wireframes . -- .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/18/Chess-Wireframe.html",
            "relUrl": "/planning/2022/10/18/Chess-Wireframe.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Big Idea Notes",
            "content": "Unit 1 . 1.1 : Collaboration . Video 1 . colaboration introduces different views and perspectives and prevents the use of bias | without collaboration many differnt well enjoyed games wouldn&#39;t be here today | communitcation, consensus building, conflict resolution, and negotiation are four most important things | . Video 2 . pair share programing is one way to collaborate in computer science, not only will you be collaborating but you will also be able to edit your work and get help for some problems | think-pair-share is also another way to collaborate in computer science, when you have a problem you can get another&#39;s opinon and work through it together | you can also share your github repository and let others edit your code | . 1.2 : Program Function and Purpose . Video 1 . applications, physical devices, and systems are three examples | applications are also called APPs and they are a bunch of games, scoail, buisness, or productivty lots of them are usally downloaded to our devices | they are software applications that are in our lives | physical devices are those that you can touch; phones, computers, laptops, ect. | e-commerce is electronic commerce, things we buy online | . Video 2 . in event driven progra, program statements are excluded when triggered, rather than through the sequential flow of contorl | input can come from a user or other programs | program outputs are any data sent from a program to a device. Program output can come in a varitey of forms, such as tactile, audio, visual, or text | program output is usually based on a program&#39;s input or prior state | . Video 3 . program is a collection of program statments that performs a specific task when run by a computer | program is often reffered to a software | code segment is a collection of program statements that is part of program | program needs to work for a variety of inputs and situations | . 1.3 : Program Design and Development . Video 1 . developing program using a development process | design a program and its user interface | program is developed by testing occuring at the micro and macro level | devs refine and revise through testing, feedback, and reflection | . Video 2 . important to acknowledge any code segments that were developed collaborativly or by another source | programs are rarely developed by a solo force and is usally made by a team | . Video 3 . program documentation is a wirtten segment of how this was made, how it should work, and the event | comments are a form of program and is read by people it doesn&#39;t effect the code! | programmers should document their code through the making! | program documention helps developing and mainitaining correct programs when working by yourself or in a teamwork envrioment | not all programing enviroments support comments! | . 1.4 : Identifying and Correcting Errors . Video 1 . logic error is a mistake in algorithim or program that cuases it to behave incorrectly | syntax error is a mistake in the program where rules of programing do not apply (ex: using python in markdown) | run-time error is a mistake in program during execution | program languages define their own runtime errors | overflow error is an error that occurs when a computer attempts to handel a number that is outside of the defined range of value | . Video 2 . you can correct errors using; test cases, hand tracing, visualizations, debuggers, adding extra output statment(s) | . Video 3 . in development process, testing uses defined inputs to ensure algoritim or program is producing the expected outcomes | programmers use the results from testing to revise their algorithms or programs | defined inputs used to test a program should demonstrate the different expected outcomes that are at or just beyond the extremes (minimum and maximum) of input data | program reqirements are needed to identify appropirate definece inputs for testing | . Unit 2 . 2.1 : Binary Numbers . Video 1 . abstraction is process of reducting complexity by focusing on the main idea | hiding details irrelevant to the question at hand | brings together related and useful details, reduces complexity and allows one to focus on the data | grouped to represent abstractions | inclue but not limited to, numebrs, characters, and color | . Video 2 . integers are represented by a fixed number of bits | limits the range of integer values and mathmatical operations | limitation can result in overflow or errors | other program languages provide abstraction limited only by size of the computer&#39;s memory | fixed numeber of bits used to represent real numbers limits the range and mathmatical operations on these values | limitation can result in round-off and other errors | real numbers are represented as approximations in computer storages | . Video 3 . number bases including binary and decimal are used to represent data | binary (base 2) use only combination of the digits zero and one | decimal (base 10) use only combination of the digits 0-9 | . 2.2 : Data Compression . Video 1 . lossy data compression algorithms can usally reduce the number of bits stored or transmitted more than lossless compression algorithms | in situations where quality or ability is used to reconstruct the original is max important | lossless compression algorithims are typically chosen | when minimizing data size or transmission time is max important | lossy compression algoristhims are typically chosen | . 2.3 : Extracting Information from Data . Video 1 . size of data set affects the amount of information that can be extracted from it | large data sets are difficult to process using a single computer and needs or may need parallel systems | scalabiltiy of systems is an important consideration when working with data sets | computationsal capacity of a system affects how the data sets can be porcessed and stored | . Video 2 . metadata are data about data | changes and deletions made to metadata do not change the primary data | metadata are used for finding, organizing, and managing information | metadata can increase the effective use of data or data sets by providing additional information | metadata allow data to be structured and organized | . 2.4 : Using Programs with Data . Video 1 . programs are used in iterative and interactive way when processing information to allow users to gain insight and knowledge about data | programmer can use programs to filter and clean digital data, therby gaining insight and knowlege from data | combining data sources, clustering data, and classifying data are also parts of this process | insight can also be obtained by translating and transforming digitally represented information | patterns can emerge when data is transformed using programs | . Video 2 . -transforming every elements of a data set . filtering a data set | combining or comparing data in some way visualizing a data set through a chart, graph, or other visual represention | . Unit 3 . 3.1 : Variables and Assignments . Video 1 . Video 2 . 3.2 : Data Abstraction . Video 1 . Video 2 . Video 3 . 3.3 : Mathmatical Expressions . Video 1 . Video 2 . Video 3 . 3.4 : Strings . Video 1 . 3.5 : Boolean Expressions . Video 1 . Video 2 . Video 3 . 3.6 : Conditionals . Video 1 . Video 2 . Video 3 . 3.7 : Nested Conditionals . Video 1 . Video 2 . 3.8 : Iteration . Video 1 . Video 2 . Video 3 . 3.9 : Developing Algorithms . Video 1 . Video 2 . Video 3 . 3.10 : Lists . Video 1 . Video 2 . Video 3 . 3.11 : Binary Search . Video 1 . 3.12 : Calling Procedures . Video 1 . Video 2 . 3.13 : Developing Procedures . Video 1 . Video 2 . 3.14 : Libraries . Video 1 . 3.15 : Random Values . Video 1 . Video 2 . 3.16 : Simulations . Video 1 . Video 2 . 3.17 : Algorithmic Efficiency . Video 1 . Video 2 . 3.18 : Undecidable Problems . Video 1 . Unit 4 . 4.1 : The Internet . Video 1 . a computing device is a physical artifact that can run a program for examples refer to 1.1 | computing system is a group of computing devices and programs working together for a common purpose | computer network is a group of interconnected computing devices capable of sending or reciving data | ^ a type of computing system | path between two computing devices on a computer network is a sequence of directly connected computing devidce that begins at the sender and ends at reciver | routing is the process of finding a path from sender to reciver | bandwidth of a computer network is the max amount of data that can be sent in a fixed aount of time | bandwidth is measured in bits per second | . Video 2 . internet is a computer network consisting of interconnected netwokrs thst use standard, open (nonproprietary) communitcation protocols | acesss to the internet dependes on the ability to connect a computinf device to an internet connected device | protocol is an agreed-upon set of rules that specify the behavior of a system | protocols used in the internet are open, allowing users to easily connect additional computing devices to the internet | routing on the internet is dynamic, if not specified | scalability of the system is cap for the system to change in size and scale and meet new demands | internet was designed to be scalable | . 4.2 : Fault Tolerence . Video 1 . redundancy in a system often requires additional reasources but can provide the benefit of fault tolerence | redundancy of routing options between two points increases the realiability of the internet | helps scale to more devices and people | . Video 2 . the interent is engineered to be fault-tolerant | with abstractions for routing and transmitting data | redundancy is the inclusiion of extra components that can be used to mitigate failure of a system if other components fail | one way to accomplish network redundancy is by having more than one path between any to connected devices | . 4.3 : Parallel and Distributed Coding . Video 1 . parallel computing consists of parallele portions and a sequential portion | solution that use parallel computing can scale more effectivly than solutions that use sequential computing | distributed computing allows problems to be solved that could not be solved on a single computer | ^ then the processing time or storage needs to be involved | distributed computing allows much larger problems to be solved quicker than they could be solved when using a single computer | when increasing the use of parallel computing in a solution, the efficiency of the solution is still limited by the sequential portion | ^ meaning at some point adding parallel portions will no longer meaningfully increase effciency | . Unit 5 . 5.1 : Benefical and Harmful Effects . Video 1 . people make computing inventions | people complete tasks differently to incorporate new computing inventions | not every computing invention effect is anticipated | single effect can be view as both beneficial and harmful | advances in computing have gereated and increased creativity in different fields: medicne, engineering, communications, and arts | . Video 2 . responsible programmers try to consider uninteneded ways of their computing innovations | ^ potential benefical + harmful effects of the new uses | not possible for a programmer to consider all the ways a computing innovation can be used | rapid sharing of a program or running a program with a large number of users can result in significant impacts beyond inteneded purpose or control of programer | . 5.2 : Digital Divide . Video 1 . internet acess varies between socioeco., geographical, and demographic characteristcs | digital divde refers to differing acess to computing devices and the Internet, based on socioeconomic, geographic, or demographic characteristics | digital divde can affect both groups and individuals | digital divide raises issues of equity, acess, and influence, both globally and locally | digital divde is affected by the actions of individuals, organizations, and governments | . 5.3 : Computing Bias . Video 1 . computing innovations can reflect existing human biasese becuase of biases written into the algorithms | biases in data used by the innovation | programs should take action to reduce bias in algorithms used for computing innovations as a way of combating existing human biases | biases can be embedded at all levels of software development | . 5.4 : Crowdsourcing . Video 1 . widespread acesss to information and public data facilitates the identification of problems | development of solutions and dissemination of results | science has been affected by using distributed and &quot;citizen science&quot; to solve scientific problems | citizen science is scientific research conducted in whole or part by distributed individual | ^many of whom may not be scientists who contribute relevant data to research using their own computing devices | . 5.5 : Legal and Ethical Concerns . Video 1 . open source are programs that are made to be freely available and may be redistributed and modified | open acess is online research output free of any and all restriction on acess and free of many restrictions on use | ^such as copyright or license restrictions | . 5.6 : Safe Computing . Video 1 . Video 2 . Video 3 .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/17/APCS-Notes.html",
            "relUrl": "/notes/2022/10/17/APCS-Notes.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Trimester Final Plan",
            "content": "Outline . The code that will be created is a website that allows the user to be able to see different openings in chess. These openings will be shown by user interactive buttons and different ways you can open on chess. The goal of the website is to help the user become a better chess player by using these different openings provided by the website. Another goal is to allow the user able to see different openings and provide feedback to the website. The website&#39;s name is planned to be called &#39;Rookie&#39; and has a rook as it&#39;s logo. The mock design color&#39;s or design will be changed in the future. . . The sets on the top bar represent the different chess openings that can be played. The moves bar on the right shows the different chess pieces and where they moved on the chess board. The board on the right will show the different chess pieces and where they move. User feedback will be represented below by comments or the like button which will be an image which changes. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/10/Plan-Chnged.html",
            "relUrl": "/planning/2022/10/10/Plan-Chnged.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "API",
            "content": "import http.client conn = http.client.HTTPSConnection(&quot;weatherbit-v1-mashape.p.rapidapi.com&quot;) headers = { &#39;X-RapidAPI-Key&#39;: &quot;4d84578a4bmshef588b2a5b86609p11c974jsnf5b5615ebc33&quot;, &#39;X-RapidAPI-Host&#39;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } conn.request(&quot;GET&quot;, &quot;/forecast/3hourly?lat=35.5&amp;lon=-78.5&quot;, headers=headers) res = conn.getresponse() data = res.read() print(data.decode(&quot;utf-8&quot;)) # key value print try extracting one value . {&#34;country_code&#34;:&#34;US&#34;,&#34;state_code&#34;:&#34;NC&#34;,&#34;data&#34;:[{&#34;timestamp_utc&#34;:&#34;2022-10-10T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:1.42,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:61,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:100,&#34;vis&#34;:28.288,&#34;wind_spd&#34;:0.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023,&#34;datetime&#34;:&#34;2022-10-10:18&#34;,&#34;ts&#34;:1665424800,&#34;snow&#34;:0,&#34;dewpt&#34;:12,&#34;uv&#34;:1.7,&#34;wind_dir&#34;:39,&#34;ghi&#34;:729.33,&#34;dhi&#34;:111.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:19.8,&#34;app_temp&#34;:19.4,&#34;dni&#34;:880.54,&#34;solar_rad&#34;:158.62384,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-10T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:294,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:38,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015,&#34;clouds&#34;:38,&#34;vis&#34;:38.272,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-10:21&#34;,&#34;ts&#34;:1665435600,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:329,&#34;ghi&#34;:292.24,&#34;dhi&#34;:76.52,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:20.8,&#34;app_temp&#34;:20.3,&#34;dni&#34;:667.87,&#34;solar_rad&#34;:282.43954,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:290.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:7,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:7,&#34;vis&#34;:31.488,&#34;wind_spd&#34;:2.24,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-11:00&#34;,&#34;ts&#34;:1665446400,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:72,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:17.1,&#34;app_temp&#34;:17.1,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.39,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:71,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:2,&#34;vis&#34;:22.288,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:03&#34;,&#34;ts&#34;:1665457200,&#34;snow&#34;:0,&#34;dewpt&#34;:8.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:49,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:14,&#34;app_temp&#34;:14,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-10T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:285.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.23,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:19.2,&#34;wind_spd&#34;:2.13,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:06&#34;,&#34;ts&#34;:1665468000,&#34;snow&#34;:0,&#34;dewpt&#34;:8,&#34;uv&#34;:0,&#34;wind_dir&#34;:22,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.9,&#34;app_temp&#34;:11.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:3,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.86,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1018,&#34;clouds&#34;:3,&#34;vis&#34;:14.496,&#34;wind_spd&#34;:1.72,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:09&#34;,&#34;ts&#34;:1665478800,&#34;snow&#34;:0,&#34;dewpt&#34;:7.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.7,&#34;app_temp&#34;:9.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.89,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:88,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1019,&#34;clouds&#34;:5,&#34;vis&#34;:14.696,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:12&#34;,&#34;ts&#34;:1665489600,&#34;snow&#34;:0,&#34;dewpt&#34;:7.4,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:354,&#34;ghi&#34;:91.33,&#34;dhi&#34;:45.58,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.3,&#34;app_temp&#34;:9.3,&#34;dni&#34;:406.55,&#34;solar_rad&#34;:91.326904,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:286.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.72,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:58,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1020,&#34;clouds&#34;:0,&#34;vis&#34;:31.2,&#34;wind_spd&#34;:1.79,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1027,&#34;datetime&#34;:&#34;2022-10-11:15&#34;,&#34;ts&#34;:1665500400,&#34;snow&#34;:0,&#34;dewpt&#34;:10,&#34;uv&#34;:4.3,&#34;wind_dir&#34;:73,&#34;ghi&#34;:627.13,&#34;dhi&#34;:105.12,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:17.8,&#34;dni&#34;:846.66,&#34;solar_rad&#34;:627.13,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:284.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.36,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:37,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.536,&#34;wind_spd&#34;:2.1,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1026,&#34;datetime&#34;:&#34;2022-10-11:18&#34;,&#34;ts&#34;:1665511200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.4,&#34;uv&#34;:5.5,&#34;wind_dir&#34;:61,&#34;ghi&#34;:724.09,&#34;dhi&#34;:111.33,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:20.9,&#34;dni&#34;:879.31,&#34;solar_rad&#34;:724.09,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-11T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.43,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:0,&#34;vis&#34;:0.577,&#34;wind_spd&#34;:2.15,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-11:21&#34;,&#34;ts&#34;:1665522000,&#34;snow&#34;:0,&#34;dewpt&#34;:5.3,&#34;uv&#34;:2,&#34;wind_dir&#34;:77,&#34;ghi&#34;:287.08,&#34;dhi&#34;:75.97,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.8,&#34;app_temp&#34;:20.9,&#34;dni&#34;:663.93,&#34;solar_rad&#34;:287.08,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.98,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:46,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017.5,&#34;clouds&#34;:25,&#34;vis&#34;:41.792,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:00&#34;,&#34;ts&#34;:1665532800,&#34;snow&#34;:0,&#34;dewpt&#34;:4.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:57,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:16.6,&#34;app_temp&#34;:16.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.44,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:59,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1017,&#34;clouds&#34;:0,&#34;vis&#34;:30.592,&#34;wind_spd&#34;:2.26,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:03&#34;,&#34;ts&#34;:1665543600,&#34;snow&#34;:0,&#34;dewpt&#34;:5.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:70,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:13.3,&#34;app_temp&#34;:13.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-11T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.83,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1016.5,&#34;clouds&#34;:25,&#34;vis&#34;:23.088,&#34;wind_spd&#34;:1.81,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1025,&#34;datetime&#34;:&#34;2022-10-12:06&#34;,&#34;ts&#34;:1665554400,&#34;snow&#34;:0,&#34;dewpt&#34;:5.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:46,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:11,&#34;app_temp&#34;:11,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:277.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:1,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.71,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:25,&#34;vis&#34;:15.896,&#34;wind_spd&#34;:1.74,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:09&#34;,&#34;ts&#34;:1665565200,&#34;snow&#34;:0,&#34;dewpt&#34;:6.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:36,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:9.4,&#34;app_temp&#34;:9.4,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:280.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:4,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:3.34,&#34;wind_cdir&#34;:&#34;NE&#34;,&#34;rh&#34;:92,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1015.5,&#34;clouds&#34;:5,&#34;vis&#34;:12.496,&#34;wind_spd&#34;:1.93,&#34;wind_cdir_full&#34;:&#34;northeast&#34;,&#34;slp&#34;:1024,&#34;datetime&#34;:&#34;2022-10-12:12&#34;,&#34;ts&#34;:1665576000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:55,&#34;ghi&#34;:88.61,&#34;dhi&#34;:44.96,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:9.2,&#34;app_temp&#34;:9.2,&#34;dni&#34;:400.45,&#34;solar_rad&#34;:88.606995,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.4,&#34;wind_cdir&#34;:&#34;ESE&#34;,&#34;rh&#34;:66,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1016,&#34;clouds&#34;:5,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;east-southeast&#34;,&#34;slp&#34;:1023.5,&#34;datetime&#34;:&#34;2022-10-12:15&#34;,&#34;ts&#34;:1665586800,&#34;snow&#34;:0,&#34;dewpt&#34;:12.2,&#34;uv&#34;:4.1,&#34;wind_dir&#34;:110,&#34;ghi&#34;:622.79,&#34;dhi&#34;:104.87,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:18.7,&#34;app_temp&#34;:18.3,&#34;dni&#34;:845.43,&#34;solar_rad&#34;:601.5654,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:1.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:53,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.66,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1021,&#34;datetime&#34;:&#34;2022-10-12:18&#34;,&#34;ts&#34;:1665597600,&#34;snow&#34;:0,&#34;dewpt&#34;:11.7,&#34;uv&#34;:5.4,&#34;wind_dir&#34;:127,&#34;ghi&#34;:718.85,&#34;dhi&#34;:111.05,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:21.7,&#34;app_temp&#34;:21.3,&#34;dni&#34;:878.05,&#34;solar_rad&#34;:695.1358,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-12T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:282.8,&#34;clouds_hi&#34;:4,&#34;clouds_low&#34;:9,&#34;clouds_mid&#34;:1,&#34;wind_gust_spd&#34;:2.3,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:54,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1011,&#34;clouds&#34;:9,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:2.03,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-12:21&#34;,&#34;ts&#34;:1665608400,&#34;snow&#34;:0,&#34;dewpt&#34;:12.3,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:154,&#34;ghi&#34;:281.97,&#34;dhi&#34;:75.41,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22,&#34;app_temp&#34;:21.6,&#34;dni&#34;:659.94,&#34;solar_rad&#34;:272.25607,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:74,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:5,&#34;wind_gust_spd&#34;:2.2,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010,&#34;clouds&#34;:18,&#34;vis&#34;:24.096,&#34;wind_spd&#34;:1.91,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1018,&#34;datetime&#34;:&#34;2022-10-13:00&#34;,&#34;ts&#34;:1665619200,&#34;snow&#34;:0,&#34;dewpt&#34;:12.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:138,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:19.5,&#34;app_temp&#34;:19.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:293.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:2,&#34;clouds_mid&#34;:100,&#34;wind_gust_spd&#34;:9.7,&#34;wind_cdir&#34;:&#34;S&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1009,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.79,&#34;wind_cdir_full&#34;:&#34;south&#34;,&#34;slp&#34;:1017,&#34;datetime&#34;:&#34;2022-10-13:03&#34;,&#34;ts&#34;:1665630000,&#34;snow&#34;:0,&#34;dewpt&#34;:13.7,&#34;uv&#34;:0,&#34;wind_dir&#34;:169,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.2,&#34;app_temp&#34;:17.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-12T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:288.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:5,&#34;clouds_mid&#34;:99,&#34;wind_gust_spd&#34;:8.52,&#34;wind_cdir&#34;:&#34;SE&#34;,&#34;rh&#34;:84,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.74,&#34;wind_cdir_full&#34;:&#34;southeast&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-13:06&#34;,&#34;ts&#34;:1665640800,&#34;snow&#34;:0,&#34;dewpt&#34;:14.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:137,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.3,&#34;app_temp&#34;:17.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T09:00:00&#34;,&#34;pop&#34;:70,&#34;ozone&#34;:287.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:80,&#34;clouds_mid&#34;:48,&#34;wind_gust_spd&#34;:11.52,&#34;wind_cdir&#34;:&#34;SSE&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1003.5,&#34;clouds&#34;:80,&#34;vis&#34;:4.644,&#34;wind_spd&#34;:2.59,&#34;wind_cdir_full&#34;:&#34;south-southeast&#34;,&#34;slp&#34;:1011,&#34;datetime&#34;:&#34;2022-10-13:09&#34;,&#34;ts&#34;:1665651600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:159,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:1.6875,&#34;weather&#34;:{&#34;code&#34;:520,&#34;description&#34;:&#34;Light shower rain&#34;,&#34;icon&#34;:&#34;r04n&#34;},&#34;temp&#34;:17.5,&#34;app_temp&#34;:17.5,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T12:00:00&#34;,&#34;pop&#34;:35,&#34;ozone&#34;:287.8,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:98,&#34;clouds_mid&#34;:88,&#34;wind_gust_spd&#34;:7.1,&#34;wind_cdir&#34;:&#34;SSW&#34;,&#34;rh&#34;:98,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1002,&#34;clouds&#34;:98,&#34;vis&#34;:11.968,&#34;wind_spd&#34;:1.92,&#34;wind_cdir_full&#34;:&#34;south-southwest&#34;,&#34;slp&#34;:1010,&#34;datetime&#34;:&#34;2022-10-13:12&#34;,&#34;ts&#34;:1665662400,&#34;snow&#34;:0,&#34;dewpt&#34;:18.6,&#34;uv&#34;:0.5,&#34;wind_dir&#34;:205,&#34;ghi&#34;:85.88,&#34;dhi&#34;:44.33,&#34;precip&#34;:0.4375,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:18.9,&#34;app_temp&#34;:19.4,&#34;dni&#34;:394.19,&#34;solar_rad&#34;:53.639946,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:289.3,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:89,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:87,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.12,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-13:15&#34;,&#34;ts&#34;:1665673200,&#34;snow&#34;:0,&#34;dewpt&#34;:18.3,&#34;uv&#34;:1.3,&#34;wind_dir&#34;:223,&#34;ghi&#34;:618.42,&#34;dhi&#34;:104.61,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:20.5,&#34;app_temp&#34;:20.9,&#34;dni&#34;:844.18,&#34;solar_rad&#34;:133.56374,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T18:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:289.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:100,&#34;clouds_mid&#34;:9,&#34;wind_gust_spd&#34;:9.41,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:70,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:100,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.1,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1006,&#34;datetime&#34;:&#34;2022-10-13:18&#34;,&#34;ts&#34;:1665684000,&#34;snow&#34;:0,&#34;dewpt&#34;:17.9,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:224,&#34;ghi&#34;:713.59,&#34;dhi&#34;:110.77,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04d&#34;},&#34;temp&#34;:23.8,&#34;app_temp&#34;:24,&#34;dni&#34;:876.77,&#34;solar_rad&#34;:145.37724,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-13T21:00:00&#34;,&#34;pop&#34;:10,&#34;ozone&#34;:292.5,&#34;clouds_hi&#34;:100,&#34;clouds_low&#34;:29,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.51,&#34;wind_cdir&#34;:&#34;SW&#34;,&#34;rh&#34;:77,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:997,&#34;clouds&#34;:29,&#34;vis&#34;:21.056,&#34;wind_spd&#34;:4.46,&#34;wind_cdir_full&#34;:&#34;southwest&#34;,&#34;slp&#34;:1005,&#34;datetime&#34;:&#34;2022-10-13:21&#34;,&#34;ts&#34;:1665694800,&#34;snow&#34;:0,&#34;dewpt&#34;:18.2,&#34;uv&#34;:1.6,&#34;wind_dir&#34;:225,&#34;ghi&#34;:276.89,&#34;dhi&#34;:74.85,&#34;precip&#34;:0.125,&#34;weather&#34;:{&#34;code&#34;:802,&#34;description&#34;:&#34;Scattered clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:22.5,&#34;app_temp&#34;:22.8,&#34;dni&#34;:655.91,&#34;solar_rad&#34;:259.41742,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T00:00:00&#34;,&#34;pop&#34;:45,&#34;ozone&#34;:293.5,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:44,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:3.01,&#34;wind_cdir&#34;:&#34;WSW&#34;,&#34;rh&#34;:94,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:998.5,&#34;clouds&#34;:44,&#34;vis&#34;:11.16,&#34;wind_spd&#34;:2.63,&#34;wind_cdir_full&#34;:&#34;west-southwest&#34;,&#34;slp&#34;:1006.5,&#34;datetime&#34;:&#34;2022-10-14:00&#34;,&#34;ts&#34;:1665705600,&#34;snow&#34;:0,&#34;dewpt&#34;:17.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:251,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0.5625,&#34;weather&#34;:{&#34;code&#34;:301,&#34;description&#34;:&#34;Drizzle&#34;,&#34;icon&#34;:&#34;d02n&#34;},&#34;temp&#34;:18.4,&#34;app_temp&#34;:18.8,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:296,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:99,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.43,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:79,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:999.5,&#34;clouds&#34;:99,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.94,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1007.5,&#34;datetime&#34;:&#34;2022-10-14:03&#34;,&#34;ts&#34;:1665716400,&#34;snow&#34;:0,&#34;dewpt&#34;:13.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:804,&#34;description&#34;:&#34;Overcast clouds&#34;,&#34;icon&#34;:&#34;c04n&#34;},&#34;temp&#34;:17.6,&#34;app_temp&#34;:17.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-13T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.92,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:80,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1001,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.53,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1009,&#34;datetime&#34;:&#34;2022-10-14:06&#34;,&#34;ts&#34;:1665727200,&#34;snow&#34;:0,&#34;dewpt&#34;:10.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:328,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:14.3,&#34;app_temp&#34;:14.3,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:300.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:10.41,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:78,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1002.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.76,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1010.5,&#34;datetime&#34;:&#34;2022-10-14:09&#34;,&#34;ts&#34;:1665738000,&#34;snow&#34;:0,&#34;dewpt&#34;:7.9,&#34;uv&#34;:0,&#34;wind_dir&#34;:312,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:11.6,&#34;app_temp&#34;:11.6,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:298.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:11.6,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:65,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1004.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.98,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1012.5,&#34;datetime&#34;:&#34;2022-10-14:12&#34;,&#34;ts&#34;:1665748800,&#34;snow&#34;:0,&#34;dewpt&#34;:3.6,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:315,&#34;ghi&#34;:83.16,&#34;dhi&#34;:43.69,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:387.77,&#34;solar_rad&#34;:83.16,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:299,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.61,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:6.03,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014.5,&#34;datetime&#34;:&#34;2022-10-14:15&#34;,&#34;ts&#34;:1665759600,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.4,&#34;uv&#34;:4.2,&#34;wind_dir&#34;:317,&#34;ghi&#34;:614.03,&#34;dhi&#34;:104.35,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:16.1,&#34;app_temp&#34;:16.1,&#34;dni&#34;:842.9,&#34;solar_rad&#34;:614.03,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T11:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T18:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:302.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7.02,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:21,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1005.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:5.71,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1013.5,&#34;datetime&#34;:&#34;2022-10-14:18&#34;,&#34;ts&#34;:1665770400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.3,&#34;uv&#34;:5.2,&#34;wind_dir&#34;:311,&#34;ghi&#34;:708.34,&#34;dhi&#34;:110.48,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:18.3,&#34;app_temp&#34;:16.8,&#34;dni&#34;:875.48,&#34;solar_rad&#34;:708.34,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T14:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-14T21:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:301,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:6.21,&#34;wind_cdir&#34;:&#34;NW&#34;,&#34;rh&#34;:26,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1006,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:4.81,&#34;wind_cdir_full&#34;:&#34;northwest&#34;,&#34;slp&#34;:1014,&#34;datetime&#34;:&#34;2022-10-14:21&#34;,&#34;ts&#34;:1665781200,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.9,&#34;uv&#34;:1.9,&#34;wind_dir&#34;:317,&#34;ghi&#34;:271.86,&#34;dhi&#34;:74.28,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:17.9,&#34;app_temp&#34;:17.9,&#34;dni&#34;:651.84,&#34;solar_rad&#34;:271.86,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T17:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T00:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:305.3,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:34,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1008.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.57,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1016.5,&#34;datetime&#34;:&#34;2022-10-15:00&#34;,&#34;ts&#34;:1665792000,&#34;snow&#34;:0,&#34;dewpt&#34;:-3.2,&#34;uv&#34;:0,&#34;wind_dir&#34;:341,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:12.2,&#34;app_temp&#34;:12.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T20:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T03:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:311,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.7,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:36,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1010.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.24,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1018.5,&#34;datetime&#34;:&#34;2022-10-15:03&#34;,&#34;ts&#34;:1665802800,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.4,&#34;uv&#34;:0,&#34;wind_dir&#34;:351,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:9.9,&#34;app_temp&#34;:9.9,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-14T23:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T06:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:307,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:8.3,&#34;wind_cdir&#34;:&#34;NNW&#34;,&#34;rh&#34;:40,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1011.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.17,&#34;wind_cdir_full&#34;:&#34;north-northwest&#34;,&#34;slp&#34;:1020,&#34;datetime&#34;:&#34;2022-10-15:06&#34;,&#34;ts&#34;:1665813600,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.6,&#34;uv&#34;:0,&#34;wind_dir&#34;:354,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01n&#34;},&#34;temp&#34;:8.2,&#34;app_temp&#34;:8.2,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T02:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T09:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:306,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:7,&#34;wind_cdir&#34;:&#34;N&#34;,&#34;rh&#34;:43,&#34;pod&#34;:&#34;n&#34;,&#34;pres&#34;:1012.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:3.1,&#34;wind_cdir_full&#34;:&#34;north&#34;,&#34;slp&#34;:1020.5,&#34;datetime&#34;:&#34;2022-10-15:09&#34;,&#34;ts&#34;:1665824400,&#34;snow&#34;:0,&#34;dewpt&#34;:-4.8,&#34;uv&#34;:0,&#34;wind_dir&#34;:3,&#34;ghi&#34;:0,&#34;dhi&#34;:0,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02n&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:4.7,&#34;dni&#34;:0,&#34;solar_rad&#34;:0,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T05:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T12:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:309.8,&#34;clouds_hi&#34;:0,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:4.4,&#34;wind_cdir&#34;:&#34;NNE&#34;,&#34;rh&#34;:50,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1013.5,&#34;clouds&#34;:0,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.4,&#34;wind_cdir_full&#34;:&#34;north-northeast&#34;,&#34;slp&#34;:1022,&#34;datetime&#34;:&#34;2022-10-15:12&#34;,&#34;ts&#34;:1665835200,&#34;snow&#34;:0,&#34;dewpt&#34;:-2.9,&#34;uv&#34;:1.5,&#34;wind_dir&#34;:25,&#34;ghi&#34;:80.44,&#34;dhi&#34;:43.04,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:800,&#34;description&#34;:&#34;Clear Sky&#34;,&#34;icon&#34;:&#34;c01d&#34;},&#34;temp&#34;:6.8,&#34;app_temp&#34;:5.1,&#34;dni&#34;:381.17,&#34;solar_rad&#34;:80.44,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T08:00:00&#34;},{&#34;timestamp_utc&#34;:&#34;2022-10-15T15:00:00&#34;,&#34;pop&#34;:0,&#34;ozone&#34;:310.8,&#34;clouds_hi&#34;:5,&#34;clouds_low&#34;:0,&#34;clouds_mid&#34;:0,&#34;wind_gust_spd&#34;:2.61,&#34;wind_cdir&#34;:&#34;ENE&#34;,&#34;rh&#34;:33,&#34;pod&#34;:&#34;d&#34;,&#34;pres&#34;:1014.5,&#34;clouds&#34;:1,&#34;vis&#34;:24.128,&#34;wind_spd&#34;:2.29,&#34;wind_cdir_full&#34;:&#34;east-northeast&#34;,&#34;slp&#34;:1022.5,&#34;datetime&#34;:&#34;2022-10-15:15&#34;,&#34;ts&#34;:1665846000,&#34;snow&#34;:0,&#34;dewpt&#34;:-1.3,&#34;uv&#34;:4,&#34;wind_dir&#34;:57,&#34;ghi&#34;:609.61,&#34;dhi&#34;:104.08,&#34;precip&#34;:0,&#34;weather&#34;:{&#34;code&#34;:801,&#34;description&#34;:&#34;Few clouds&#34;,&#34;icon&#34;:&#34;c02d&#34;},&#34;temp&#34;:14.8,&#34;app_temp&#34;:14.8,&#34;dni&#34;:841.6,&#34;solar_rad&#34;:609.6098,&#34;snow_depth&#34;:0,&#34;timestamp_local&#34;:&#34;2022-10-15T11:00:00&#34;}],&#34;lon&#34;:-78.5,&#34;lat&#34;:35.5,&#34;timezone&#34;:&#34;America /New_York&#34;,&#34;city_name&#34;:&#34;Four Oaks&#34;} .",
            "url": "https://lunaiwa.github.io/iwazaki/api/2022/10/10/API.html",
            "relUrl": "/api/2022/10/10/API.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Sociology Questions",
            "content": "",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/10/06/Sociology-Questions.html",
            "relUrl": "/notes/2022/10/06/Sociology-Questions.html",
            "date": " • Oct 6, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Poster Draft and Final",
            "content": "Poster Ideas and Draft . Want to add different steps . Give Instructions | Plan Sprints | Assign Jobs | Assign Weekly work | Sprint | Daily Scrum + Meeting and Planning | Finished | . Got poster approved but then needs to change finished into iterate or repreat since we always use these steps for success! Need to change how the words are arranged in the numbers to make it asthetically pleasing . . Finished and added in color (blue and green)! Changed the way where the words were in the numbers! .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/10/03/Poster.html",
            "relUrl": "/planning/2022/10/03/Poster.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Errors and How to Correct them in Code",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . Determines where the alphabet is in the loop . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 0 letter in the alphabet . When adding in a letter you can find where the letter is in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter b is the 0 letter in the alphabet . changing outcome to odd numbers . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . outputs 0-10 . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [0, 2, 4, 6, 8, 10] . 0-10 using the loops .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Errors-In-Code.html",
            "relUrl": "/errors/2022/10/03/Errors-In-Code.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Error Documentation",
            "content": "Questions in Errors . What errors may arise in your project? . Errors that may arise are the frontend not showing what it might need or the backend not performing as it should! . Make sure to document any bugs you encounter and how you solved the problem. . Most bugs might be a changed letter or number error in the code, another error that might be encountered is missing lines of code! . What are “single” tests that you will perform on your project? Or, your part of the project? . Single tests that might be performed on the project is the frontend testing and seeing if the user see what is needed and not the code. . Errors Documentation . 1.ERROR 2.ERROR 3.404 . Error Challenge . What are some ways to (user) error proof this code? . First add in a single test for the expectation, then test input and output, run the test!!! . The code should be able to calculate the cost of the meal of the user . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) if item == &quot;fries&quot;: total = 1.99 if item == &quot;burger&quot;: total = 3.99 if item == &quot;drink&quot;: total = .99 #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . # prices of the different meals menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0.0 current_order = [] # order of the user # this is where the user prints the order print(&quot;Menu:&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) item = input(&quot;Select an Item&quot;) item = item.lower() while item in menu.keys(): quantity = float(input(&quot;How Many&quot;)) current_order.append(str(item) + &quot; X &quot; + str(quantity)) total += (menu[item] * quantity) print(str(int(quantity)) + &quot; &quot; + item + &quot;(s)&quot; + &quot; added&quot;) # user orders more or finishes order item = input(&quot;Would you like to add more or finish order &#39;done&#39;&quot;) item = item.lower() #order is being printed print(&quot;Order:&quot;) print(current_order) print(&quot;Price:&quot;) print(&quot;$&quot; + str(round(total,2))) # single item code # if item == &quot;burger&quot; or item == &quot;fries&quot; or item == &quot;drink&quot;: # print(&quot;! The total of the order is&quot;, item, &quot;will be &quot;,menu[item]) # else: # print(&quot;Try again!&quot;) . Menu: burger $3.99 fries $1.99 drink $0.99 4 burger(s) added 19 fries(s) added 2 drink(s) added Order: [&#39;burger X 4.0&#39;, &#39;fries X 19.0&#39;, &#39;drink X 2.0&#39;] Price: $55.75 .",
            "url": "https://lunaiwa.github.io/iwazaki/errors/2022/10/03/Error-Documentation.html",
            "relUrl": "/errors/2022/10/03/Error-Documentation.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "AP Prep Multiple Choice",
            "content": "AP Practice Screen Shot . . Confusing Questions and Understanding . Week 6 Quiz . Collaboration Quiz - 100% . The questions were easy to understand since we were already implementing these things and activities into our daily work as a SCRUM team! :) . Program Design and Development Quiz - 33% . Documentation for Procedure with a loop:odd numbers then even are printed!! Becuase the count starts at 1 and increases every 2 making the count odd!! Then the loop is terminated when it is at max. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Program Function and Purpose Quiz (MCQs) - 50% . Behavior of code that multiplies inside a loop: I need to work on figuring out loop code! . Correct first portion which ia 2(5^3) but the second part is wrong where it needs to be multiplying the result by 5 3 times! . &gt; value displays when y=true and when x is negative . Week 7 Quiz . Identifying and Correcting Errors Quiz . . Instead of changing line 1 to IF(score + penalty &lt; 0) change the lines 3 and 7 | . Check plus is displayed as intended so the code will not dispkay the numbers 8 and 7 | The Internet Quiz . Correct first portion but the packets can be recived in any order and can be reassembled . | Instead of being acessed by a data stream it is acessed by a network . |",
            "url": "https://lunaiwa.github.io/iwazaki/ap/2022/10/02/AP.html",
            "relUrl": "/ap/2022/10/02/AP.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "SCRUM Team Project",
            "content": "SCRUM Team Roles . Each team member is given a role and assigns themselfs tasks to do before the next Daily Scrum meet. . Roles . These roles were given to each teammeber based on their performance for certain tasks and/or leadership in the team. Ethan Tran is the Scrum Leader who helps the team remain organized while also managing the lengths of team sprints. Parav Salaniwal and Rohin Sood are responsible for the backend development, both of them are responsible for maintaining, testing, and debugging the backend. Luna and Taiyo Iwazaki are responsible for the front end development, they are responsible for the design and structure of the website which the user sees. Below is a visual of the scrum process. . . Project CS CONNECT . Purpose . We are creating a website that allows its users to connect with others! You can see other user&#39;s accounts and posts that they make. Each post contains something about them which others can connect to. Users can like another&#39;s post if they find it relatable to them. Down below is an unfinished mock up so the coloring or format will be changed in the future! . .",
            "url": "https://lunaiwa.github.io/iwazaki/scrum/2022/09/25/Scrum-Team.html",
            "relUrl": "/scrum/2022/09/25/Scrum-Team.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Stress, Science, and Choice Habit Making",
            "content": "What? . What kinds of goals and habits do happy people have? 9:34--&gt;cont. . Physcology and the Good Life . most students are too stressed to enjoy life and do life | ie. not being able to enjoy a book | even Yale wants students to perform | lots of lack of performance in class | . Classroom Habits . wasting whole day and big pile-up of homework | being an active listener and taking notes or going along with the class | . Take Aways . Most students don&#39;t spen their time wisley in class and end up having to stress over it during the weekend. Using the time given in class will allow a student to be more successful and happier. Without that much work outside of class students will be able to spend more time doing what they love and be less stressed. Being able to balence life and school is difficult but, when you are able to have a perfect harmony between both you can enjoy life more. Goals and habits most people have to acheive this are, being able to do the most work they have when they have the oppertunity to, and not wasting their time and save it for later. And second goal most people have is, to be able to hold onto any oppertunity they are given and to take them and use them wisley (do their work when they are given the oppertunity to in class). Habits most happy people have are to be happy and use the time they have to do somthing they really enjoy then doing somthing that would just waste their time. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/15/Human-Day.html",
            "relUrl": "/notes/2022/09/15/Human-Day.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "APCSP Test Prep",
            "content": "Take Notes . Whatever the teacher says is helpful and vocab words are important to use during code. The vocab words can also be helpful in the MC and are helpful during the trimester | Do practice testing and time them to prep for the real AP test to simulate the situation | Creating tasks that are unique and creative and not just normal | Looking at past examples of other works form other students that have recived a 5 on the Ap test | REVIEW, REVIEW REVIEW | . Task Ideas . any create game that isn&#39;t used (everyone typically uses GPA calculator) | don&#39;t use a basic game like hang man or anything do somthing out of the box | do a game that is simple yet creative!!! | .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/12/AP-Testing-Prep.html",
            "relUrl": "/planning/2022/09/12/AP-Testing-Prep.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Performance Task Planning/Draft",
            "content": "Purpose . Creating awarness of other running athleates and gaining more traction to running as a sport | Bringing other athleates from other sports into cross country and track becuase it can help them inprove in their other sport | Helping those who don&#39;t have resources to help them run by repourposing old running shoes and making them look new | Donating old or new running shoes to those in need of shoes or in need of shoes for their sport | Saftey, bringing different exercises and stretches on the website to help those experiencening shinsplints ect. to help them find out what stretch, exercise, or help they might need for their issue | . Initial Thougts . Using all of the team memebers different coding skills this website can be able to work as a athletic website in a whole. My web design can help make the website look less boring and have videos or images and colors to direct athletes to different pages of the website. Taiyo, who is also in cross country and track can add in his input and help bring real facts onto this website. He can also give us experience as to his sport nd how he deals with problems when running. . My Code . I learned a lot of things this first half of the trimester and can use those ideas to help pull this website together! I mainly explored in the section of web design hence my page having lots of pictures and different colors. To make this website more complete however I need to learn how to add in more tabs and maybe add in a drop down page. I also should learn how to make more interactable items or programs onto the page to make it more user friendly and attact more people to the website. .",
            "url": "https://lunaiwa.github.io/iwazaki/planning/2022/09/11/Performance-Task-Planning.html",
            "relUrl": "/planning/2022/09/11/Performance-Task-Planning.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Findings and New App",
            "content": "Outline - compsci vocab terms . creating a app that has a quiz focusing on the current vocab words | has a purple theme to match the theme of my website and logo | uses different ways to input an answer | has a &quot;fail&quot; and &quot;winning&quot; page | has three questions to make it simple | . Building . Building the app was easier then I thought it would be in the begining. Unlike other codes I have done so far the website had premade codes whcih I used to create the app. I mostly used the &quot;OnEvent&quot;, &quot;Console&quot;, and &quot;setscreen&quot; buttons to creat my quiz. The quiz is made of computer science vocab that we have learned these past weeks. The terms I used are my favorite terms and ones we use most in the class. I also added in a meme if you use the slider in the &quot;fail&quot; screen. It&#39;s a really hidden one. I tried to use different ways to input an answer like the bubble buttons and just clicking the box with the answer in it. I had a theme that matched my website logo and even put the logo in the front. Adding pictures was really nice too and it was easier then the coding way becuase I could just add them from my computer or use the image address. . Link To App on Web . https://studio.code.org/projects/applab/pK0X670gjhU8EmO0NMbaJigSTuvGsCZCO_xMq3SiLls . Finidings . Using the code.org is easier then using Python and other coding programs because the blocks act as a premade coding system. Not only are the blocks helpful to use but you can also veiw the code in the normal format by just clicking a button. This website allows for me and others to easily create different apps and programs by just putting different blocks together. The website also allows you to see what the finished product might look like on the left side of the screen. Any program that you have made can also be run and tested by just the click of a button. Images can be easily imported into the program. This is also easily accessable since this whole program can be run in your own web browser. .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/11/Findings-And-New-App.html",
            "relUrl": "/notes/2022/09/11/Findings-And-New-App.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Vocab Notes",
            "content": "Vocabulary . input = instructions given to a computer | sequence = several lines of code | output = infromation computer gives | key -&gt; value | variables = way to name, store data, and reference data | lists and dictionaries = variable with extended fetures for storing + retrieving data | lists = [] the square brackets for grouping and ordering | dictionaries = {} curley brackets for grouping into key-value relationships | data extraction = extracting data using things such as infodb which is data (not a procedure) | . Linux and Ubuntu . pwd = print directory | mkdir = make directory | cd = change directory | ls = list directory | def = procedure | td = table data | print = to write out | . Git Vocab . &quot;git clone&quot; makes local Git repo (decentralized) from cloud (GitHub/Git) | &quot;git commit&quot; makes snapshot of original parent on local database | &quot;git push&quot; | . Collaboration . team = people that come together to work together! | .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/09/05/Vocab-Notes.html",
            "relUrl": "/notes/2022/09/05/Vocab-Notes.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Variable . Variables have types :string, integer, and float. Lists and Dictionaries is a key type! . name = &quot;Luna Iwazaki&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) print() # variable of type float score = 3.00 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Luna Iwazaki &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 3.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Luna Iwazaki&#39;, &#39;age&#39;: 16, &#39;score&#39;: 3.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Luna Iwazaki &lt;class &#39;str&#39;&gt; . Dictionaires . infoDb = [] # Append to List a Dictionary of key/values infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;November 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, &quot;Shapes&quot;: [&quot;heart&quot;, &quot;circle&quot;, &quot;star&quot;] }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemebr 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, &quot;Shapes&quot;: [&quot;square&quot;, &quot;circle&quot;, &quot;triangle&quot;] }) # Print the data structure print(infoDb) . [{&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]}, {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]}] . Loop Output . List printing . def for_loop(): print(&quot;For loop output n&quot;) for record in infoDb: print(record) for_loop() . For loop output {&#39;FirstName&#39;: &#39;Luna&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;November 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Game&#39;: &#39;Snake&#39;, &#39;Email&#39;: &#39;lunaiwazaki@gmail.com&#39;, &#39;Shapes&#39;: [&#39;heart&#39;, &#39;circle&#39;, &#39;star&#39;]} {&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;Iwazaki&#39;, &#39;DOB&#39;: &#39;Novemebr 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;taiyoiwazaki@gmail.com&#39;, &#39;Fav_Game&#39;: &#39;Valorent&#39;, &#39;Shapes&#39;: [&#39;square&#39;, &#39;circle&#39;, &#39;triangle&#39;]} . Loops and Index . def print_data(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Game&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Shapes: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Shapes&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop with index output n&quot;) length = len(infoDb) #figures out the length of the list infoDb (which is 2 because there are 2 dictionaries in the list) ran = range(length) #defines ran as the range of the length. (this is 0 and 1 because the length is 2) for index in reversed(ran): #index is 0 and 1 so it takes the indexes of infoDb. 0 would be the first dictionary and 1 would be the second. reversed prints them as 1 0 instead of 0 1 print_data(infoDb[index]) for_loop() . For loop with index output Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star . While Loop Output . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(infoDb): #length is 2 so while i is less than, it will keep printing record = infoDb[i] #defines the record as the index of the list print_data(record) #prints that index using the formatted print function i += 1 #adds 1 and returns to the top till i is no longer &lt;2 return while_loop() . While loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Recursive Loop . def recursive_loop(i): if i &lt; len(infoDb): #ensures the code stops after it recurses through all the indexes since length determines amount of indexes record = infoDb[i] #defines record as the index of infoDb print_data(record) #prints using the formatted print function recursive_loop(i + 1) #adds 1 to the original index and returns until i is no longer &lt;2 return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Luna Iwazaki Residence: San Diego Birth Day: November 19 Game Snake Email: lunaiwazaki@gmail.com Shapes: heart, circle, star Taiyo Iwazaki Residence: San Diego Birth Day: Novemebr 19 Game Valorent Email: taiyoiwazaki@gmail.com Shapes: square, circle, triangle . Add-Search-Delete . infoDb.append({ &quot;FirstName&quot;: &quot;Luna&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Game&quot;: &quot;Snake&quot;, &quot;Email&quot;: &quot;lunaiwazaki@gmail.com&quot;, }) infoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;Iwazaki&quot;, &quot;DOB&quot;: &quot;Novemeber 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;taiyoiwazaki@gmail.com&quot;, &quot;Fav_Game&quot;: &quot;Valorent&quot;, }) def print_data2(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Favorite Game:&quot;, d_rec[&quot;Fav_Game&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print() def data_entry(): #defining the function that asks for user input Firstname = input(&quot;What is your firstname?&quot;) Lastname = input(&quot;What is your lastname&quot;) DOB = input(&quot;When is your birthday&quot;) Email = input(&quot;What is your Email&quot;) Movie = input(&quot;What is your favorite game?&quot;) Residence = input(&quot;Where do you live?&quot;) infoDb.append({ #appends the user input to the dictionary &quot;FirstName&quot;: Firstname, &quot;LastName&quot;: Lastname, &quot;DOB&quot;: DOB, &quot;Email&quot;: Email, &quot;Residence&quot;: Residence, &quot;Fav_Game&quot;: Movie, }) def search_data(firstname): for record in infoDb: if record[&quot;FirstName&quot;] == firstname: #compares the already existing name to the name inputted with the firstname variable return record return NULL def data_delete(firstname): record = search_data(firstname) #defines record as the name inputted with the search function if (record != NULL): #if the record doesn&#39;t equal null (does it exist?) then the next line removes it infoDb.remove(record) print(firstname, &quot;has been deleted!&quot;) else: print(&quot;Record not found!&quot;) def main(): Continue = True #defining continue as true while Continue: lol = input(&quot;What would you like to do (add/search/delete, type no if you want to exit)?&quot;) if lol == &quot;no&quot;: print(&quot;Come back again!&quot;) Continue = False elif lol == &quot;add&quot;: data_entry() elif lol == &quot;search&quot;: firstname = input(&quot;Who do you want to search (firstname)?&quot;) record = search_data(firstname) #defines record as the input &quot;name&quot; and runs it through the search function print_data2(record) elif lol == &quot;delete&quot;: firstname = input(&quot;Who do you want to delete(firstname)&quot;) data_delete(firstname) else: print(&quot;Invalid input. Please try again&quot;) length = len(infoDb) #defines length as the number of records print(&quot;Total Number of Records: &quot;, length) for record in infoDb: print_data2(record) main() . NameError Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 15 in &lt;cell line: 1&gt;() -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; &#34;FirstName&#34;: &#34;Luna&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; &#34;DOB&#34;: &#34;Novemeber 19&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; &#34;Residence&#34;: &#34;San Diego&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Snake&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; &#34;Email&#34;: &#34;lunaiwazaki@gmail.com&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; infoDb.append({ &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; &#34;FirstName&#34;: &#34;Taiyo&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; &#34;LastName&#34;: &#34;Iwazaki&#34;, (...) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; &#34;Fav_Game&#34;: &#34;Valorent&#34;, &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; }) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X20sZmlsZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; def print_data2(d_rec): #formatting NameError: name &#39;infoDb&#39; is not defined . Quiz . questions = 5 correct = 0 print(&quot;Take this quiz to test your vocab!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): print(&quot;Correct!&quot;) global correct correct += 1 else: print (&quot;Incorrect!&quot;) return msg Q1 = question_and_answer(&quot;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&quot;, &quot;instructions given to a computer&quot;) Q2 = question_and_answer(&quot;What is a squence? t a line of code t several lines of code t a button&quot;, &quot;several lines of code&quot;) Q3 = question_and_answer(&quot;What is an output? t information a computer gives t a computer tab t going outside&quot;, &quot;information a computer gives&quot;) Q4 = question_and_answer(&quot;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&quot;, &quot;way to name, store data, and reference data&quot;) Q5 = question_and_answer(&quot;What are lists? t something for the grocery t the square brackets for grouping and ordering t a square&quot;, &quot;the square brackets for grouping and ordering&quot;) print(f&#39;You scored {correct} /5 correct answers!&#39;) Quiz = { &quot;Question 1&quot;: Q1, &quot;Question 2&quot;: Q2, &quot;Question 3&quot;: Q3, &quot;Question 4&quot;: Q4, &quot;Question 5&quot;: Q5 } print(&quot;Here is a record of your quiz answers:&quot;,Quiz) . Take this quiz to test your vocab! Question: What is the definition of INPUT? instructions given to a computer computer paper paper instructions Answer: instructions given to a computer Correct! Question: What is a squence? a line of code several lines of code a button . KeyboardInterrupt Traceback (most recent call last) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in &lt;cell line: 21&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=17&#39;&gt;18&lt;/a&gt; return msg &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; Q1 = question_and_answer(&#34;What is the definition of INPUT? t instructions given to a computer t computer paper t paper instructions&#34;, &#34;instructions given to a computer&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; Q2 = question_and_answer(&#34;What is a squence? t a line of code t several lines of code t a button&#34;, &#34;several lines of code&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=21&#39;&gt;22&lt;/a&gt; Q3 = question_and_answer(&#34;What is an output? t information a computer gives t a computer tab t going outside&#34;, &#34;information a computer gives&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=22&#39;&gt;23&lt;/a&gt; Q4 = question_and_answer(&#34;What does a variable do? t gives variety t a way to store your paper files t way to name, store data, and reference data&#34;, &#34;way to name, store data, and reference data&#34;) /Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb Cell 17 in question_and_answer(prompt, answer) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; def question_and_answer(prompt, answer): &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; print(&#34;Question: &#34; + prompt) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; msg = input() &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; print(&#34;Answer: &#34; + msg) &lt;a href=&#39;vscode-notebook-cell:/Users/sony/iwazaki-1/_notebooks/2022-09-05-Lists-and-Dictionaries.ipynb#X22sZmlsZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; if answer == msg.lower(): File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1177, in Kernel.raw_input(self, prompt) 1173 if not self._allow_stdin: 1174 raise StdinNotImplementedError( 1175 &#34;raw_input was called, but this frontend does not support input requests.&#34; 1176 ) -&gt; 1177 return self._input_request( 1178 str(prompt), 1179 self._parent_ident[&#34;shell&#34;], 1180 self.get_parent(&#34;shell&#34;), 1181 password=False, 1182 ) File /Applications/anaconda3/lib/python3.9/site-packages/ipykernel/kernelbase.py:1219, in Kernel._input_request(self, prompt, ident, parent, password) 1216 break 1217 except KeyboardInterrupt: 1218 # re-raise KeyboardInterrupt, to truncate traceback -&gt; 1219 raise KeyboardInterrupt(&#34;Interrupted by user&#34;) from None 1220 except Exception: 1221 self.log.warning(&#34;Invalid Message:&#34;, exc_info=True) KeyboardInterrupt: Interrupted by user .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/09/05/Lists-and-Dictionaries.html",
            "relUrl": "/python/2022/09/05/Lists-and-Dictionaries.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Alumni Panel Event",
            "content": "Questions and Answers . Q: What did Computer Science make you relize? . C- can code well and did some 3d modeling, though from other organizations like robotics he knew that he wasn&#39;t as great as his competetors . A- always did coding and as a young kid really enjoyed to code CSA really applied to him and he took time to reflect on what he wanted to do . M- didn&#39;t really like compsci as much as most people but found it useful when she interned ans solidified the relization that you would need to learn programing. (she is C&#39;s twin sister) . AL- always artsy and did buisness she now does cognitive which is like phsycology and compsci and she wanted to do web science and took the skills she learned from the CSP class . N- liked compsci when she was younger and when she entered middle school and into high school she started to take it serious, when she was making a program to complie data about Covid-19, it was a pivitol moment for her since she relized she could use these skill in the real world . Q: Some big challeneges that you can face when doing Computer Science . C- keeping motivation, always when programming he got error messages, but there are always answers on the internet, and have disipline . A- egos in the classroom, compsci majors have big egos and it is fustrating, focus on your own path &quot;Steve Jobs beats you 100 out of 100 times&quot; . AN- theory, structures and didn&#39;t really think about it but it is hard transitioning from high school computer science into college computer science . M- finding motivation, someone is always better, smart team members at her inter they hired and wanted a website to be made, specific project and purpose is helpful to learn, syntax was fustrating, google can answer all of your syntax problems . AL- starting and temptation to BS, always have a mindset to go above and beyond then do cookie cutter jobs . N- getting started in a new area, liked to structure, not always have an organized and do things to start coding . Q: Any PBL senarios [project based learning] . C- UCSD always has 1 hands on as a freshman and 1 hands on as a senior, problem solving, designing, and programing, SCRUM and agile flow, PBL won&#39;t go away still will show up in learning . AN- would kinda go away mix of PBL and fun but, PBL is still larger involved in mostly the UCs, and probably if you are taking the compsci course it will show up there . M- both in class and out of class, there are 200+ people in the lecture hall to study in groups and work with others in a larger sized class since you can&#39;t really ask questions. Structured in a way of sprints learning good to get experience beforehand. Many intern hires don&#39;t expect them to know anything so ask questions! . Takeaways and Insights from event . Not only is coding used in the classroom but it can be taken outside and used in many different senarios that you may not think of. Many of the allumni take their coding outside and even use it in their internships and or jobs they work at. Not all of them may have an inspiration for coding but they all have relized that coding will help them in their future and depending how they use it is now up to them! .",
            "url": "https://lunaiwa.github.io/iwazaki/notes/2022/08/29/Extra-Credit-Event.html",
            "relUrl": "/notes/2022/08/29/Extra-Credit-Event.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "APCSP Quiz",
            "content": "True or False . QandA = [ &quot;1. True or False, Def is a key word in Python that defines a function&quot;, &quot;True&quot;, &quot;2. True or False, In Python anatomy of you will NOT be importing libraries and functions?&quot;, &quot;False&quot;, &quot;3. True or False, Hello world is a string literal?&quot;, &quot;True&quot;, &quot;4. True or False,?&quot;, &quot;Answer&quot;, &quot;5. True or False, Input and Output in Jupyter Notebook Input is NOT in line with Output?&quot;, &quot;True&quot;, &quot;6. True or False, an if expression is not evaluated for true or false&quot;, &quot;False&quot;, &quot;7. True or False, return command in function does not return msg input by user&quot;, &quot;False&quot;, &quot;8. True or False, false takes branch of code directly under else command&quot;, &quot;True&quot;, &quot;9. True or False, correct += 1 is NOT the way to add one to the score&quot;, &quot;False&quot;, &quot;10. True or False,?&quot;, &quot;Answer&quot;, ] #total points and using new quiz var points = 0 current = 0 quiz = 1 print (&quot;Welcome to my true or false quiz!&quot;) #Using while lets me loop function while quiz &lt; 11: question = input (QandA[current]) if question == QandA[current+1]: print (&quot;That&#39;s correct!&quot;) points = points +1 current = current +2 else: print (&quot;Sorry, that is incorrect!&quot;) points = points -1 current = current -2 quiz = quiz +1 #Final Message print (&quot;You got &quot; + str(current) + &quot;/&quot; + str(len(QandA)) + &quot; correct&quot;) . Welcome to my true or false quiz! . Quiz . score = 0 # Question 1 answer1 = input(&quot;What does Def do in a function? na. nothing nb. defines a function nc. sudo code nd. changes directory nAnswer: &quot;) if answer1 == &quot;b&quot; or answer1 == &quot;defines a function&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: defines a function.&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 2 answer2 = input(&quot;What is Python3 na. A type of snake nb. A programming language nc. A google game nd. Javascript nAnswer: &quot;) if answer2 == &quot;b&quot; or answer1 == &quot;A programming language&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: A programming language&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 3 answer3 = input(&quot;What is a sequence? na. Two or more lines of code nb. A line of code nc. multiple words nd. I dont know nAnswer: &quot;) if answer3 == &quot;a&quot; or answer1 == &quot;Two or more lines of code&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: Two or more lines of code&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) #Final Message if score &lt;= 1: print (&quot;Your total score is:&quot;, score, &quot;- That&#39;s OK&quot;) elif score == 2: print (&quot;Your total score is:&quot;, score, &quot;- Nice Job&quot;) else: print (&quot;Your total score is:&quot;, score, &quot;-AMAZING!&quot;) .",
            "url": "https://lunaiwa.github.io/iwazaki/html/2022/08/26/Quiz.html",
            "relUrl": "/html/2022/08/26/Quiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "Installation Check",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /Applications/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.2.0 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h6e9494a_0 conda-forge conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.15.1 pypi_0 pypi ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 python_abi 3.9 2_cp39 conda-forge pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.15.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /Users/sony/Library/Jupyter/kernels/bash javascript /Users/sony/Library/Jupyter/kernels/javascript python2 /Users/sony/Library/Jupyter/kernels/python2 python3 /Applications/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /Applications/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://lunaiwa.github.io/iwazaki/python/2022/08/25/tool_check.html",
            "relUrl": "/python/2022/08/25/tool_check.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Jupyter",
            "content": "First Code . print(&quot;hello world&quot;) . print(&quot;welcome to the secret code&quot;) print(&quot;cool&quot;) . .",
            "url": "https://lunaiwa.github.io/iwazaki/jupyter/2022/08/24/Juypter-Notebook.html",
            "relUrl": "/jupyter/2022/08/24/Juypter-Notebook.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Paint Mixing",
            "content": "Starting Colors . Colors that I use are Burnt Sienna, Ivory Black, and Titanium White. The brand I use is specifically Windsor and Newton becuase it paints really smoothly onto my canvas. 1 . 1. You can also use different brands but these are my choice other brands like Gamblin are also really good.↩ . . Video . Here is a helpful video by Anna Wakitsch demoing how to mix this pallet using these colors . .",
            "url": "https://lunaiwa.github.io/iwazaki/art/2022/08/24/First-Post.html",
            "relUrl": "/art/2022/08/24/First-Post.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus Bits . +1 | 00000000 | 0 | 0 | 0 | -1 | {BITS} | . Turn on | Turn on | Turn on | Turn on | . | | | | .",
            "url": "https://lunaiwa.github.io/iwazaki/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "API",
          "content": "API .",
          "url": "https://lunaiwa.github.io/iwazaki/_pages/API.html",
          "relUrl": "/_pages/API.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This is Luna Iwazaki’s Website .",
          "url": "https://lunaiwa.github.io/iwazaki/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Week Schedule",
          "content": "Work from the week and the hacks special assignments! . Week Date Hacks . 0 | 2022-08-22 | worklink | . 1 | 2022-08-29 | [issue 1](lunaiwa/iwazaki/issues/3#) | . 2 | 2022-09-06 | [issue 2](lunaiwa/iwazaki/issues/4#) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page8": {
          "title": "sub",
          "content": "[Home](https://lunaiwa.github.io/iwazaki/) . [Repository](https://github.com/lunaiwa/iwazaki) | . [Week Ticket](https://github.com/lunaiwa/iwazaki/issues/7#issue-1386497747) | . .",
          "url": "https://lunaiwa.github.io/iwazaki/issues/",
          "relUrl": "/issues/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lunaiwa.github.io/iwazaki/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}